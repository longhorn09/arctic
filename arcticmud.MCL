<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, February 12, 2021, 10:11 AM -->
<!-- MuClient version 5.06 -->
<!-- Written by Nick Gammon -->
<!-- Home Page: http://www.mushclient.com/ -->
<muclient>
<world
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:51"

   auto_say_override_prefix="-"
   auto_say_string="say "
   chat_name="Name-not-set"
   command_stack_character=";"
   id="d2227a0674760c8e88274d91"
   input_font_name="Fixedsys"
   mapping_failure="Alas, you cannot go that way."
   name="ArcticMUD"
   new_activity_sound="(No sound)"
   output_font_name="FixedSys"
   password_base64="y"
   password="cG93ZXIyMjI="
   player="glynda"
   proxy_username="thymorical"
   proxy_password_base64="y"
   proxy_password="cG93ZXIyMjI="
   script_editor="notepad"
   script_editor_argument="%file"
   script_filename="C:\dev\luadev\test\arctic.lua"
   script_language="Lua"
   script_prefix="/"
   site="mud.arctic.org"
   spam_message="look"
   speed_walk_prefix="#"
   terminal_identification="mushclient"

   arrows_change_history="y"
   auto_pause="y"
   auto_repeat="y"
   auto_resize_minimum_lines="1"
   auto_resize_maximum_lines="20"
   chat_foreground_colour="red"
   chat_background_colour="black"
   chat_port="4050"
   confirm_before_replacing_typing="y"
   confirm_on_paste="y"
   confirm_on_send="y"
   default_trigger_sequence="100"
   default_alias_sequence="100"
   detect_pueblo="y"
   display_my_input="y"
   echo_colour="10"
   echo_hyperlink_in_output_window="y"
   edit_script_with_notepad="y"
   enable_aliases="y"
   enable_beeps="y"
   enable_command_stack="y"
   enable_scripts="y"
   enable_timers="y"
   enable_triggers="y"
   enable_trigger_sounds="y"
   fade_output_opacity_percent="20"
   fade_output_seconds="8"
   history_lines="1000"
   hyperlink_adds_to_command_history="y"
   hyperlink_colour="#0080FF"
   indent_paras="y"
   input_background_colour="white"
   input_font_height="9"
   input_font_weight="400"
   input_text_colour="black"
   keypad_enable="y"
   line_information="y"
   log_output="y"
   max_output_lines="500000"
   mud_can_change_link_colour="y"
   mud_can_change_options="y"
   note_text_colour="#040000"
   output_font_height="9"
   output_font_weight="400"
   paste_delay_per_lines="1"
   pixel_offset="1"
   port="2700"
   proxy_port="9"
   save_world_automatically="y"
   script_errors_to_output_window="y"
   send_file_delay_per_lines="1"
   send_mxp_afk_response="y"
   show_connect_disconnect="y"
   show_italic="y"
   show_underline="y"
   spam_line_count="20"
   tab_completion_lines="200"
   timestamp_input_text_colour="maroon"
   timestamp_notes_text_colour="blue"
   timestamp_output_text_colour="white"
   timestamp_input_back_colour="black"
   timestamp_notes_back_colour="black"
   timestamp_output_back_colour="black"
   tool_tip_visible_time="5000"
   tool_tip_start_time="400"
   treeview_triggers="y"
   treeview_aliases="y"
   treeview_timers="y"
   underline_hyperlinks="y"
   unpause_on_send="y"
   use_custom_link_colour="y"
   use_default_input_font="y"
   use_default_output_font="y"
   warn_if_scripting_inactive="y"
   wrap_column="133"
   write_world_name_to_log="y"
   > <!-- end of general world attributes -->

</world>

<!-- triggers -->

<triggers
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:51"
  >
  <trigger
   enabled="y"
   match="^Mortals$"
   regexp="y"
   send_to="12"
   sequence="99"
  >
  <send>EnableTrigger("roomname_trigger",false)
if (GetTriggerInfo ("whob_line", 8)) then
  SetVariable("iswhobgood",0)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="bashtrack"
   match="([A-Za-z \,\.\-\']+) doesn\'t recover as you deliver the bash \-\- (he|she|it) is dead\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
--Note("** Time between bashes: "..tostring(math.abs(socket.gettime() - tonumber(GetVariable("lastbashtime")))))
SetVariable("lastbashtime", tonumber(round(socket.gettime(),3)))

SetVariable("isstanding",1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="([a-z ]+)\: You forget this spell\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local spellnamecount = Trim("%1")
if (#Trim("%1") &gt; 20) then
  spellnamecount = string.sub(spellnamecount,1,20)
end

spellnamecount = string.gsub(Trim(spellnamecount)," ","").."count"

--Note("decrement "..spellnamecount)
Execute("decrement "..spellnamecount)</send>
  </trigger>
  <trigger
   group="scoutscript"
   match="A tingle in your fingertips lets you know the wildfire is ready to burn again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautotrain")) == 1) then
  Execute("wildfire")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="But nobody is fighting (her|him|it|them)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("rescue abandon")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="The tracks are quite old\, your prey was here\, but a long while ago\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("30-49 rooms.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="The tracks are somewhat old\, your prey was near here within the last day\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("15-29 rooms.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="These tracks are too old to get any good information from\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("50+ rooms.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="What a self\-sacrificing act\! You\'re such a hero\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("successful rescue")</send>
  </trigger>
  <trigger
   expand_variables="y"
   match="You are ([A-Z][a-z]+)[A-Za-z \,\.\-\']* the (Female|Male) ([A-Za-z ]+), a level (\d+)( Legendary)? (White Robe|Red Robe|Black Robe|Scout|Barbarian|Dark Knight|Thief|Druid|Warrior|Magic User|Cleric|Paladin|Shaman)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note(Trim("%1"))
SetVariable("charname", "%1")
SetVariable("isclanned",0)
SetVariable("charLevel", %4)
SetVariable("charClass", "%6")
Note("charname:"..charname.." charclass:"..charClass)

if ("%6" ~= "Druid") then
  SetVariable("isdruidbot",0)
end
if ("%6" ~= "Cleric") then
  SetVariable("isHealbot",0)
end
--Note("charClass: ".."%6")

if string.len("%5") &gt; 0 then
  SetVariable("islegendary", 1)
  --Note("is legendary")
else
  SetVariable("islegendary", 0)
  --Note("is not legendary")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="You are ([A-Z][a-z]+)[A-Za-z \,\.\-\']*, a level (\d+)( Legendary)? (White Robe|Red Robe|Black Robe|Scout|Barbarian|Dark Knight|Thief|Druid|Warrior|Magic User|Cleric|Paladin|Shaman)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charname", "%1")
SetVariable("isclanned",0)
SetVariable("charLevel", %2)
SetVariable("charClass", "%4")
--Note(GetVariable("charname").." ("..GetVariable("charLevel").."): "..GetVariable("charClass"))

if ("%4" ~= "Druid") then
  SetVariable("isdruidbot",0)
end
if ("%4" ~= "Cleric") then
  SetVariable("isHealbot",0)
end

if string.len("%3") &gt; 0 then
  SetVariable("islegendary", 1)
  --Note("is legendary")
else
  SetVariable("islegendary", 0)
  --Note("is not legendary")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You are sitting\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)</send>
  </trigger>
  <trigger
   enabled="y"
   match="You are using\:$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup("eq_script",true)
EnableTrigger("worneq_trigger",true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="You belong to no group.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("splitoff");
SetVariable("dogrouptick",0)
Send("group")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="You can smell your prey on the wind\, they must be close\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("2-7 rooms.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You can\'t do that while sitting\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="You can\'t seem to escape the battle.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("istryingfade",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="You can\'t seem to gauge the distance to your prey\."
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("Too far.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="bashtrack"
   match="You crash into ([A-Za-z \,\.\-\']+) in a bone crunching bash\, sending (him|her|it|them) sprawling to the ground\.$"
   regexp="y"
   script="doBashHit"
   send_to="12"
   sequence="100"
  >
  <send>--scripted now</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="You create some arrows\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("put all.bundle quiver")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="You feel up to using gather again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautotrain")) == 1) then
  if (tonumber(GetVariable("ishideon")) == 0)  then
    Send("gather")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="You need to be holding a bow with a free draw hand to aim\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("grab bow")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You should probably stand up\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You sit down and rest your tired bones\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You sit down\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You stand up\, and at the last second remember to push your chair back$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="You stand up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 1)
if (tonumber(GetVariable("isbottrain"))==1) then
  Execute("look")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="bashtrack"
   match="You try to bash ([A-Za-z \,\.\-\']+)\, but you miss and tumble forward onto your face\.$"
   regexp="y"
   script="doBashMiss"
   send_to="12"
   sequence="100"
  >
  <send>--now</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="You utter the words, '([a-zA-Z ]+)'$"
   regexp="y"
   script="decrementSpellCount"
   send_to="12"
   sequence="100"
  >
  <send>--Note(Trim("%1"))
</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="Your casting is disrupted by the fighting\!$ "
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("!")
Execute("lostconc")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="Your feeble rescue efforts end in failure\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("failed rescue")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="Your prey is so close you can taste their stink.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("1 room.")</send>
  </trigger>
  <trigger
   enabled="y"
   group="skillhunt"
   match="Your prey passed this way quite recently\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("8-14 rooms.")</send>
  </trigger>
  <trigger
   enabled="y"
   match="\s\sMember              Hits      Move      Position  Fly Inv Water iMT Here Light Mem$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>groupArr = {}
--print("group parsing triggered")
EnableTrigger("group_line", true)
EnableTrigger("group_stopper", true)

if (tonumber(GetVariable("istryinggact")) == 1) then
  SetVariable("isgactgood",1)
end

if (tonumber(GetVariable("istryingbandall")) == 1) then
  SetVariable("isbandallgood",1)
end

if (tonumber(GetVariable("isgheal")) == 1) then
  SetVariable("isghealgood",1)
end

if (tonumber(GetVariable("isrefgroup")) == 1) then
  SetVariable("isrefgroupgood",1)
end</send>
  </trigger>
  <trigger
   match="^  [A-Z][A-Z]\s([A-Z][a-z]+)\b\s+([A-Za-z\.]+)\b\s+([A-Za-z]+)\b\s+([A-Za-z]+)\s+([YN])\s+([YN])\s+([YN])\s+([YN])\s+([YN])\s+(\d+)\s+(\d+)$"
   name="group_line"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>table.insert(groupArr, Trim("%0"))</send>
  </trigger>
  <trigger
   group="spell_list"
   match="^(?:\d:)?\s*([a-z]+|[a-z]+\s[a-z]+|[a-z]+\s[a-z]+\s[a-z]+)\s{2,}(([a-z]+|[a-z]+\s[a-z]+|[a-z]+\s[a-z]+\s[a-z]+)\s{2,})?([a-z]+|[a-z]+\s[a-z]+|[a-z]+\s[a-z]+\s[a-z]+)?\s*$"
   regexp="y"
   script="doSpell_List"
   send_to="12"
   sequence="100"
  >
  <send>--Note("%1"..", ".."%2"..",".."%3"..",".."%4")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="charmy_script"
   match="^(Acadia|Xia|Aspasia|Antioch|Shiroc) starts following you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charmy1","%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^(An|A) ([A-Za-z \,\.\-\']+) crumbles into dust and scatters in the wind\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^(A|An) ([A-Za-z \,\.\-\']+) headbutts you to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="charmy_script"
   match="^(A|An) (pech|nereid|trillicoq|sandling|white wolf|scarlet smoke elemental|strong warrior|water weird|white wolf|invisible stalker|red sashed cleric|fire snake|fire salamander) starts following you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** charmy: "..Trim("%2"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^(A|Some) spiritual ([a-z\s]+) (turns|turn) into a blue mist and (dissipates|dissipate)\.$"
   match_inverse="y"
   name="holy_armor_trigger"
   regexp="y"
   script="doHolyArmor"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^(She|He|You) (needs|need) to be in a more comfortable position to be bandaged\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("standing")</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^(She|It|He|You) already (has|have) a few bandages in place\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^(She|You|It|He) (needs|need) to be in a more comfortable position to be bandaged\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah"")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^(The|A) ([A-Za-z \,\.\-\']+) decays in your hands\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^(The|A) ([A-Za-z \,\.\-\']+) decays into dust and blows away\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bag of fluff([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bag of fluff [HIGH WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fluff ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) basilisk eyelash([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 basilisk eyelash [HIGH ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell eyelash ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bent steel nail([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bent steel nail [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell steel.nail ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bit of blue litmus([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bit of blue litmus [MID EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell blue.litmus ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bit of brain tissue([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bit of brain tissue [MID NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell brain.tissue ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bit of fleece([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bit of fleece [HIGH ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fleece ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bit of phosphorus([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bit of phosphorus [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell phosphorus ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bit of tallow([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bit of tallow [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell tallow ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bleached bone disc([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bleached bone disc [MID HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bone.disc ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bloodstone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bloodstone [HIGH HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bloodstone ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bloody elven ear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bloody elven ear [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell elven.ear ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bone flute([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bone flute [HIGH NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bone.flute ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bottled sunbeam([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bottled sunbeam [EXPT COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell sunbeam")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) bottled thunder storm([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 bottled thunder storm [HIGH WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell thunder.storm ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) brilliant blue bead([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 brilliant blue bead [MID COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell blue.bead ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) broken gnomish compass([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 broken gnomish compass [EXPT DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell gnomish.compass ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) broken piece of a mirror([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 broken piece of a mirror [LOW DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mirror ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) broken piece of stained glass([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 broken piece of stained glass [LOW PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell stained.glass ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) butterfly wing([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 butterfly wing [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell butterfly.wing ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) cat's-tail([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 cat's-tail [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cat's-tail ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) charred and pitted crucible([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 charred and pitted crucible [EXPT ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crucible ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) chipped stone dart([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 chipped stone dart [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell stone.dart ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) chiseled granite fist([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 chiseled granite fist [HIGH EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell granite.fist ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) chromatic crystalline bead([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 chromatic crystalline bead [EXPT EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crystalline.bead ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) chunk of dragon feces([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 chunk of dragon feces [EXPT ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.feces ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) clump of damp mulch([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 clump of damp mulch [MID SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mulch ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) corked flask of swamp gas([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 corked flask of swamp gas [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell corked.flask ")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) crimson dragon tear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 crimson dragon tear [LOW WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tear")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) crystal flask of inky black oil([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 crystal flask of inky black oil [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell inky.black")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dead gypsy moth([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dead gypsy moth [MID ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell gypsy.moth")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) deadly scorpion stinger([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 deadly scorpion stinger [LOW NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell scorpion.stinger")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) deep red cuprite crystal([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 deep red cuprite crystal [LOW WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell red.crystal")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) deep violet dragon tear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 deep violet dragon tear [MID WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tear")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) deformed crow's leg([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 deformed crow's leg [MID DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell deformed.leg")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) delicate honeysuckle bloom([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 delicate honeysuckle bloom [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell honeysuckle.bloom")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) delicate snowflake([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 delicate snowflake [HIGH WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell snowflake")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dinosaur egg([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dinosaur egg [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dinosaur.egg")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dram of giant slug digestive acid([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dram of giant slug digestive acid [MID NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell slug.acid")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dried piece of octopus tentacle([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dried piece of octopus tentacle [HIGH SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell octopus.tentacle")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dried sea sponge([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dried sea sponge [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell sea.sponge")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) dried, discarded snakeskin([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 dried, discarded snakeskin [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell snakeskin")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) drop of black dragon blood([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 drop of black dragon blood [HIGH NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.blood")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) drop of glacial water([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 drop of glacial water [HIGH ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell glacial.water")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) drop of human sweat([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 drop of human sweat [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell human.sweat")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) featureless pewter doll([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 featureless pewter doll [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pewter.doll")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) few glittering snake scales([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 few glittering snake scales [MID ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell snake.scales")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) few strands of finely woven hemp([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 few strands of finely woven hemp [MID ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell woven.hemp")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) few strands of sticky spider web([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 few strands of sticky spider web [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell spider.web")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) flask of mineral water([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 flask of mineral water [MID HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mineral.water")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) flattened lead disc([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 flattened lead disc [HIGH ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell lead.disc")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) flower of Queen Christine's lace([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 flower of Queen Christine's lace [LOW PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell lace")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) forest green dragon tear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 forest green dragon tear [MID WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tear")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) forked twig([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 forked twig [LOW DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell forked.twig")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) fulgurite tube([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 fulgurite tube [LOW WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fulgurite.tube")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) garlic clove([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 garlic clove [LOW NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell garlic.clove")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) glass lightning jar([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 glass lightning jar [LOW WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell glass.jar")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) glass sliver([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 glass sliver [LOW PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell glass.sliver")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) gleaming silver die([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 gleaming silver die [MID ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell silver.die")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) golden nugget([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 golden nugget [MID ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell nugget")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) hand-held sundial([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 hand-held sundial [MID DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell sundial")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) handful of fine sand([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 handful of fine sand [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fine.sand")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) handful of ogre teeth([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 handful of ogre teeth [HIGH ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell ogre.teeth")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) handful of roasted chestnuts([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 handful of roasted chestnuts [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell roasted.chestnuts")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) handful of toasted beetle legs([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 handful of toasted beetle legs [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell beetle.legs")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) heart of a hen([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 heart of a hen [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell heart")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) jar of dark red blood([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 jar of dark red blood [EXPT SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell jar")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) leaf of yellow tinted mica([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 leaf of yellow tinted mica [LOW PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mica.leaf")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) leather pouch of vampire dust([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 leather pouch of vampire dust [MID NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell vampire.dust")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) length of kudzu vine([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 length of kudzu vine [HIGH PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell kudzu.vine")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) light-bending prism([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 light-bending prism [HIGH ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell light-bending.prism")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) lock of a siren's emerald hair([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 lock of a siren's emerald hair [HIGH ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell emerald.hair")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) lump of beeswax([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 lump of beeswax [LOW ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell beeswax")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) lump of blood red mud([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 lump of blood red mud [MID SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell red.mud")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) magnetized needle([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 magnetized needle [MID DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell magnetized.needle")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) maiden's eyelash([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 maiden's eyelash [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell maiden's.eyelash")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) mandrake root([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 mandrake root [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mandrake.root")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) meteor fragment([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 meteor fragment [HIGH ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell meteor.fragment")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) miniature bell([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 miniature bell [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell miniature.bell")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) miniature golden lyre([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 miniature golden lyre [MID ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell golden.lyre")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) miniscule cedar picture frame([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 miniscule cedar picture frame [HIGH ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell picture.frame")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) mummified bullfrog leg([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 mummified bullfrog leg [HIGH NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bullfrog.leg")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) murky vial of squid ink([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 murky vial of squid ink [HIGH ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell squid.ink")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) myconid cap([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 myconid cap [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell myconid.cap")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) neatly folded parchment fan([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 neatly folded parchment fan [MID SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell parchment.fan")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) newly spun chrysalis([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 newly spun chrysalis [MID ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell chrysalis")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pair of albino bat wings([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pair of albino bat wings [MID ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bat.wings")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) patch of phosphorescent moss([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 patch of phosphorescent moss [MID ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell moss")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) patch of poisonous crimson moss([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 patch of poisonous crimson moss [MID NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crimson.moss")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pearly white moonstone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pearly white moonstone [MID COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell white.moonstone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) piece of broken pond ice([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 piece of broken pond ice [HIGH DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pond.ice")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) piece of royal honeycomb([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 piece of royal honeycomb [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell royal.honeycomb")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of chameleon dust([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of chameleon dust [LOW ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell chameleon.dust")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of noxious brimstone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of noxious brimstone [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell noxious.brimstone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of pollen dust([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of pollen dust [MID PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pollen.dust")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of powdered cuprite([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of powdered cuprite [MID TBD]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell powdered.cuprite")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of powdered silver([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of powdered silver [MID ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell powdered.silver")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of powdered turqoise([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of powdered turqoise [MID TBD]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell powdered.turqoise")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of rust red spores([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of rust red spores [MID TBD]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell red.spores")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinch of white talcum([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinch of white talcum [MID ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell white.talcum")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pineal gland([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pineal gland [MID PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pineal.gland")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pink and black mottled snake tongue([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pink and black mottled snake tongue [MID SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell snake.tongue")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) pinnated leaf of an oak([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 pinnated leaf of an oak [LOW PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell oak.leaf")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) powerfully blessed bandage([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 powerfully blessed bandage [LOW NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell blessed.bandage")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) powerfully odorous musk gland([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 powerfully odorous musk gland [MID ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell musk.gland")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) ragged werewolf pelt([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 ragged werewolf pelt [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell werewolf.pelt")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) red silk ribbon([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 red silk ribbon [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell silk.ribbon")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) ridged pine cone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 ridged pine cone [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pine.cone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) rose bud([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 rose bud [LOW PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell rose.bud")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) rosy colored panel of glass([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 rosy colored panel of glass [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell glass.panel")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) rotting garlic bulb([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 rotting garlic bulb [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell garlic.bulb")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sample of cinnabar([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sample of cinnabar [MID COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cinnabar")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) scabbed potato([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 scabbed potato [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell scabbed.potato")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) scented cone of incense([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 scented cone of incense [LOW WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cone.incense")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) scintillating red sunstone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 scintillating red sunstone [MID PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell red.sunstone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) scratched glass lens([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 scratched glass lens [LOW ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell glass.lens")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) section of a hornet's nest([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 section of a hornet's nest [HIGH SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell hornet's.nest")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sheared kender topknot([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sheared kender topknot [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell kender.topknot")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) short and curly hair([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 short and curly hair [EXPT ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell curly.hair")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) short iron bar([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 short iron bar [MID COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell iron.bar")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) short stick of incense([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 short stick of incense [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell stick.incense")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) silver laced pearl([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 silver laced pearl [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell silver.pearl")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) silvered raven's tongue([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 silvered raven's tongue [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell raven's.tongue")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sky-blue dragon tear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sky-blue dragon tear [MID WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tear")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) slice of lime([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 slice of lime [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell lime")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sliver of chameleon skin([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sliver of chameleon skin [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell chameleon.skin")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small bag of silver dust([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small bag of silver dust [MID ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell silver.dust")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small block of granite([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small block of granite [MID EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell granite.block")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small blue-green agate([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small blue-green agate [MID EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell agate")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small chunk of licorice root([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small chunk of licorice root [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell licorice.root")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small flask of bitumen([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small flask of bitumen [HIGH EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell flask.bitumen")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small flask of smoke([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small flask of smoke [HIGH DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell flask.smoke")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small jar of expensive smelling salts([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small jar of expensive smelling salts [MID ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell smelling.salts")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small paraffin candle([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small paraffin candle [HIGH SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell paraffin.candle")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small pinch of human gray matter([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small pinch of human gray matter [EXPT ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell gray.matter")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small pink and red swirled conch shell([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small pink and red swirled conch shell [MID SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell conch.shell")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small silver sea serpent's scale([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small silver sea serpent's scale [MID ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell sea.scale")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small spherical lode stone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small spherical lode stone [HIGH ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell lode.stone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small square of silk([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small square of silk [LOW ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell silk")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small vial of quicksilver([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small vial of quicksilver [HIGH ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell quicksilver.vial")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) small warding stone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 small warding stone [HIGH COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell warding.stone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) smear of acacia gum([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 smear of acacia gum [HIGH ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell acacia.gum")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) smear of green mud([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 smear of green mud [MID ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell green.mud")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) smooth blank runestone([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 smooth blank runestone [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell blank.runestone")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) smooth river pebble([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 smooth river pebble [LOW DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell river.pebble")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) snapdragon blossom([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 snapdragon blossom [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell snapdragon.blossom")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) soybean seed([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 soybean seed [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell soybean.seed")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sparkling green emerald([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sparkling green emerald [HIGH PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell green.emerald")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sphagnum peat moss patch([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sphagnum peat moss patch [HIGH PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell moss.patch")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) splintered demon's horn([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 splintered demon's horn [HIGH SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell splintered.horn")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sprig of festive mistletoe([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sprig of festive mistletoe [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell mistletoe")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sprig of pine([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sprig of pine [MID PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pine")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sprig of spearmint([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sprig of spearmint [HIGH PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell spearmint")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sprinkle of saffron([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sprinkle of saffron [LOW DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell saffron")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) sterling dinner bell([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 sterling dinner bell [MID ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dinner.bell")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) stick of cinnamon([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 stick of cinnamon [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cinnamon")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) stick of incense([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 stick of incense [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell incense")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tail of a phoenix([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tail of a phoenix [EXPT SUM]%2")

if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell phoenix.tail")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) taut length of twine([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 taut length of twine [HIGH ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell twine")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tears of a saint([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tears of a saint [EXPT DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell tears.saint")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) thimble of human blood([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 thimble of human blood [HIGH HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell human.blood")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) thin slate of polished obsidian([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 thin slate of polished obsidian [MID PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell slate.obsidian")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) thinly pressed, round platinum wafer([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 thinly pressed, round platinum wafer [EXPT HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell platinum.wafer")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tiny acorn([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tiny acorn [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell acorn")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tiny bronze balance([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tiny bronze balance [LOW DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bronze.balance")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tiny bronze weathervane([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tiny bronze weathervane [HIGH WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bronze.weathervane")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tiny crystal prism([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tiny crystal prism [HIGH EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crystal.prism")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tiny hearing trumpet([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tiny hearing trumpet [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell hearing.trumpet")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tip of a broken sword([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tip of a broken sword [EXPT COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell broken.sword")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tooth of a dragon encased in ice([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tooth of a dragon encased in ice [EXPT ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tooth")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) torn page from an ancient calendar([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 torn page from an ancient calendar [HIGH DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell torn.page")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) tuft of skunk fur([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 tuft of skunk fur [HIGH ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell skunk.fur")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) turtle carapace([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 turtle carapace [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell turtle.carapace")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of eagle eye oil([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of eagle eye oil [HIGH ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell eagle.oil")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of exotic venom([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of exotic venom [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell vial.venom")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of fishliver oil([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of fishliver oil [LOW ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fishliver.oil")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of golden sap([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of golden sap [HIGH HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell golden.sap")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of powerfully blessed holy water([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of powerfully blessed holy water [MID HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell holy.water")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of seductive perfume([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of seductive perfume [MID ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell perfume")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of spinal fluid([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of spinal fluid [MID HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell spinal.fluid")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of tinctured iodine([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of tinctured iodine [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell iodine")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) vial of vinegar([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 vial of vinegar [MID EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell vial.vinegar")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) withered tulip([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 withered tulip [LOW ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell tulip")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+) wooden splint([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1 wooden splint [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell wooden.splint")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)he fragile heart of a rose([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1he fragile heart of a rose [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell heart.rose")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)he hind leg of a grasshopper([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1he hind leg of a grasshopper [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell grasshopper.leg")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)hips of sun baked clay([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1hips of sun baked clay [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell clay")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)hriveled beholder's eyestalk([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1hriveled beholder's eyestalk [EXPT EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell eyestalk")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ilaments of volcanic glass([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ilaments of volcanic glass [HIGH EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell volcanic.glass")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)inely drawn catgut([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1inely drawn catgut [HIGH ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell catgut")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)irt from a long forgotten grave([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1irt from a long forgotten grave [LOW NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell grave")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)lakes of leprous skin([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1lakes of leprous skin [HIGH NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell leprous.skin")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n aboleth's scale([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n aboleth's scale [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell aboleth's.scale")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n absolutely perfect diamond([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n absolutely perfect diamond [MID ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell perfect.diamond")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n adder's tongue fern leaf([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n adder's tongue fern leaf [HIGH ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fern.leaf")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n aeolipile([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n aeolipile [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell aeolipile")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n empty crab shell([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n empty crab shell [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crab.shell")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n enchanted bag of astral space([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n enchanted bag of astral space [HIGH PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell astral.space")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n eye of the beholder([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n eye of the beholder [EXPT ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell beholder")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n ice cold bone shard([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n ice cold bone shard [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bone.shard")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n indigo dragon tear([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n indigo dragon tear [MID WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell dragon.tear")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n intricately crafted gold pocket watch([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n intricately crafted gold pocket watch [LOW ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell pocket.watch")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n iridescent hummingbird feather([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n iridescent hummingbird feather [HIGH ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell hummingbird.feather")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n opaque cornea([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n opaque cornea [LOW ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cornea")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n ornate cup, containing a powerfully blessed healing salve([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n ornate cup, containing a powerfully blessed healing salve [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell ornate.cup")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)n owl beak([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1n owl beak [MID DIV]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell owl.beak")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ntricately carved horn([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ntricately carved horn [HIGH SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell carved.horn")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome bitten fingernails([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome bitten fingernails [MID ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fingernails")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome bottled minotaur urine([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome bottled minotaur urine [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell minotaur.urine")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome bristles from a displacer beast([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome bristles from a displacer beast [HIGH ILL]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell displacer.beast")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome broken eggshells([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome broken eggshells [LOW ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell eggshells")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome cat whiskers([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome cat whiskers [MID HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cat.whiskers")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome coarsely ground fire ants([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome coarsely ground fire ants [MID ABJ]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fire.ants")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome coffee beans([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome coffee beans [LOW PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell coffee.beans")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome cracked amber([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome cracked amber [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell cracked.amber")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome crimson fox hairs([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome crimson fox hairs [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell fox.hairs")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome dried bat guano([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome dried bat guano [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bat.guano")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome fine coal dust([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome fine coal dust [HIGH EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell coal.dust")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome flint chips([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome flint chips [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell flint.chips")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome froghemoth saliva([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome froghemoth saliva [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell froghemoth.saliva")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome ginseng root([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome ginseng root [LOW COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell ginseng.root")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome ground flower pollen([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome ground flower pollen [LOW SUM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell flower.pollen")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome knotted string([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome knotted string [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell knotted.string")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome leaves of hemlock([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome leaves of hemlock [MID NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell hemlock")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome moldy bone chips([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome moldy bone chips [LOW HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bone.chips")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome nightshade berries([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome nightshade berries [LOW NEC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell nightshade.berries")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome poison ivy([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome poison ivy [MID PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell poison.ivy")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome rose petals([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome rose petals [MID ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell rose.petals")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome rotten skunk cabbage([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome rotten skunk cabbage [LOW EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell skunk.cabbage")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome small gold links([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome small gold links [HIGH ENC]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell gold.links")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome spruce seeds([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome spruce seeds [LOW PLA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell spruce.seeds")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome translucent crystal marbles([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome translucent crystal marbles [MID ELE]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell crystal.marbles")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome volcanic ash([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome volcanic ash [MID EVO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell volcanic.ash")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ome yew bark([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ome yew bark [HIGH COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell yew.bark")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)owder of finely ground unicorn horn([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1owder of finely ground unicorn horn [EXPT HEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell unicorn.horn")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)owdered bull's horn([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1owdered bull's horn [MID PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell bull's.horn")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ufts of lion mane([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ufts of lion mane [HIGH PRO]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell lion.mane")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ured ape sinew([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ured ape sinew [MID ALT]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell ape.sinew")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)wo halves of a spherical geode([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1wo halves of a spherical geode [HIGH COM]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell geode")
  end
end
</send>
  </trigger>
  <trigger
   colour_change_type="1"
   group="spellcomps"
   match="^([0-9A-Za-z\'\,\-\s\.]+)ye of the storm giant([0-9A-Za-z\-\,\'\[\]\s\.]*)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>local issellcomps = false
local compcount = 1
if (tonumber(GetVariable("issellcomps")) == 1) then
  issellcomps = true
end
ColourNote("silver","black","%1ye of the storm giant [EXPT WEA]%2")
if (issellcomps) then
  if (#"%2" &gt; 0 and string.find("%2","%[") and string.find("%2","%]")) then
    compcount = tonumber( string.match(Trim("%2"),"%[(%d+)%]") )
  end
  for i = 1, compcount, 1 do
    Send("sell storm.eye")
  end
end
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   keep_evaluating="y"
   match="^([A-Z][A-Za-z\s\-\'\,]+)$"
   match_back_colour="y"
   match_text_colour="y"
   name="roomname_trigger"
   regexp="y"
   script="CheckRoomChange"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>--Note("hm")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="arrival"
   match="^([A-Z][a-z]+) (flies in|arrives) from (the )?(above|below|east|west|north|south)\.$"
   regexp="y"
   script="doArrivalTrigger"
   send_to="12"
   sequence="100"
  >
  <send>--note("**")</send>
  </trigger>
  <trigger
   enabled="y"
   group="arrival"
   match="^([A-Z][a-z]+) (leaves|flies) (north|east|south|west|down|up).$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** Left: %1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) almost knocks you over\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) appears before ([A-Z][a-z]+) in a puff of smoke\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local healtarget = Trim("%1")
local ishealbot = false
local isdruidbot = false
local charclass = GetVariable("charClass")
if (tonumber(GetVariable("isHealbot")) == 1) then
  ishealbot = true
end
if (tonumber(GetVariable("isdealbot")) == 1) then
  isdruidbot = true
end

if (isTargetInGroup(healtarget) and (ishealbot or isdruidbot))  then
  if (ishealbot) then
    Execute("gheal")
  elseif (isdruidbot) then
    Execute("refgroup;gheal")
  end
else
  Execute("checkpktarget "..Trim("%1"))
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) appears from the (east|west) through the hanging clothes\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--dun mir
Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) appears in a near blinding flash of holy and unholy light\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) appears in the middle of the room\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^([A-Z][a-z]+) applies bandages to your wounds\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) arrives in a flash of bright light\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) arrives in a flash of light, looking dazed and confused\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) arrives in a vortex of wind and natural force\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) arrives suddenly\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local ishealbot = false
local isdruidbot = false

if (tonumber(GetVariable("isHealbot"))==1) then
  ishealbot = true
end

if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end

if (ishealbot or isdruidbot) then
  Execute("doautostand;gheal")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) arrives through the gates to Castle Lytburg\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) becomes entangled in the vines\!$"
   name="disentangle_trigger"
   regexp="y"
   script="doCheckEntangled"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) cautiously enters the leather-bound lodge, eyeing its contents\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) comes to your rescue\! You\'re thankful\, but a bit dazed\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--needed to reset target acquisition delay
SetVariable("lastengageclock",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="targeting_script"
   match="^([A-Z][a-z]+) conjures a writhing mass of inky black tentacles\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("prior line: "..GetRecentLines(2))</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Z][a-z]+) connects with a precision thrust, wounding ([A-Z][a-z]+) severely\.$"
   name="combatpattern26"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),26)</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) crawls out of the hole and brushes (him|her)self off\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+) cries out in pain as ([A-Za-z\-\,\s]+) grabs (him|her)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) falls from above\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) freezes in place\.$"
   name="unfreeze_trigger"
   regexp="y"
   script="doCheckHeld"
   send_to="12"
   sequence="100"
  >
  <send>--local charclass
--if (isTargetInGroup("%1")) then</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+) gets slapped by a vine\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+) grunts in agony as inky black tentacles smack (him|her)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^([A-Z][a-z]+) has (his|her) casting disrupted by the fighting\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("%1".." disrupted")</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^([A-Z][a-z]+) howls in pain as Blazewight, the fiery dracolich's arcane spear rips into (him|her)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^([A-Z][a-z]+) is (burned|chilled|corroded|shocked)\, as (he|she) swings (at|as) ([A-Za-z \,\.\-\']+)\.$"
   name="resist_pattern3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  if ("%2" == "burned" and not isBuffApplied(buffsArr, "resist heat")) then
    table.insert(buffsArr,"resist heat")
    Send("cast 'resist' heat")
  elseif ("%2" == "chilled" and not isBuffApplied(buffsArr, "resist cold")) then
    table.insert(buffsArr,"resist cold")
    Send("cast 'resist' cold")
  elseif ("%2" == "corroded" and not isBuffApplied(buffsArr, "resist acid")) then
    table.insert(buffsArr,"resist acid")
    Send("cast 'resist' acid")
  elseif ("%2" == "shocked" and not isBuffApplied(buffsArr, "resist electricity") ) then
    table.insert(buffsArr,"resist electricity")
    Send("cast 'resist' electricity")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+) is (hit|struck|caught|blasted) (by|in) a spray of (radiant|shimmering|scintillating|vibrant|bright|gleaming|murky) (violet|yellow|blue|indigo|orange|red|green)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^([A-Z][a-z]+) is (partly made ice,|partly made ash,|corroded) as ([A-Za-z \.\,\-\']+) breathes (frost|fire|acid)\.$"
   name="resist_pattern4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("arg 3: %3")
local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  if ("%4" == "fire" and not isBuffApplied(buffsArr, "resist heat")) then
    table.insert(buffsArr,"resist heat")
    Send("cast 'resist' heat")
  elseif ("%4" == "frost" and not isBuffApplied(buffsArr, "resist cold")) then
    table.insert(buffsArr,"resist cold")
    Send("cast 'resist' cold")
  elseif ("%4" == "acid" and not isBuffApplied(buffsArr, "resist acid")) then
    table.insert(buffsArr,"resist acid")
    Send("cast 'resist' acid")
  end
elseif (charclass == "Cleric" and tonumber(GetVariable("isHealbot")) == 1) then
  Execute("checkareadmg "..Trim("%1"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^([A-Z][a-z]+) is hit by ([A-Za-z \,\.\-\']+) lightning breath\.$"
   name="resist_pattern5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist electricity") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  table.insert(buffsArr,"resist electricity")
  Send("cast 'resist' electricity")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   match="^([A-Z][a-z]+) is now a member of ([A-Z][a-z]+)'s group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if ("%2" == GetVariable("leader") ) then
  Execute("group")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^([A-Z][a-z]+) is now a member of your group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("group")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) is paralyzed\!$"
   name="unparalyze_trigger"
   regexp="y"
   script="doCheckParalyzed"
   send_to="12"
   sequence="100"
  >
  <send>--local charclass
--if (isTargetInGroup("%1")) then</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^([A-Z][a-z]+) is partly made ash, as Blazewight, the fiery dracolich breathes fire\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^([A-Z][a-z]+) is shredded by shards of ice\.$"
   name="resist_pattern6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist cold") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  table.insert(buffsArr,"resist cold")
  Send("cast 'resist' cold")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   match="^([A-Z][a-z]+) is the new leader of ([A-Z][a-z]+)\'s group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (isTargetInGroup("%1") and isTargetInGroup("%2")) then
  Send("follow %1")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^([A-Z][a-z]+) looks at you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (GetVariable("lastlook") ~= Trim("%1")) then
  if (tonumber(GetVariable("islookback")) == 1) then
    Send("look "..Trim("%1"))
    SetVariable("lastlook", Trim("%1"))
  else
    Execute("lbstatus")
  end
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="poisonscript"
   match="^([A-Z][a-z]+) looks really sick, and shivers uncomfortably\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--druid
--shaman
--cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^([A-Z][a-z]+) opens a chest of wood and steel\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.pile chest in room")
end</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) pants heavily\.$"
   regexp="y"
   script="checkPant"
   send_to="12"
   sequence="100"
  >
  <send>--checkpant
--"%1"</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autostandscript"
   match="^([A-Z][a-z]+) pulls you from your magical slumber\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Execute("doautostand")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Z][a-z]+) seems to be blinded\!$"
   name="cureblind_trigger"
   regexp="y"
   script="doCheckBlind"
   send_to="12"
   sequence="100"
  >
  <send>--local charclass
--if (isTargetInGroup("%1")) then</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^([A-Z][a-z]+) shivers uncontrollably as icicles grow from (his|her|its|their) nose\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist cold") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  table.insert(buffsArr,"resist cold")
  Send("cast 'resist' cold")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="shouttell"
   match="^([A-Z][a-z]+) shouts '(.+)'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("shouter: %1, msg: %2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Z][a-z]+) staggers from ([A-Za-z \,\.\-\']+)( fearsome)? (bite|hit|claw|cleave|slash|pierce|sting|shoot|bludgeon|smite|crush|drain|stab|whip|plunk)\.$"
   name="staggers_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%2"),Trim("%1"),2,"obliterates")</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^([A-Z][a-z]+) stops following you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("group")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) stumbles out of a puff of smoke\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) suddenly appears in the room in a cloud of chicken feather\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+) swims in from( the)? (above|below|east|west|north|south)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="shouttell"
   keep_evaluating="y"
   match="^([A-Z][a-z]+) tells you '(.+)'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("teller: %1, priv msg: %2")
tmpmsg = Trim(Proper("%1")).." tells "..Trim(Proper(GetVariable("charname"))).." '"..Trim("%2").."'"


if (IsSocketConnected()) then
  Execute("notifyone "..Trim(GetVariable("leader")).." "..tmpmsg)
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="healbot"
   keep_evaluating="y"
   match="^([A-Z][a-z]+) tells your group '(H|h)eals(\?)?'$"
   regexp="y"
   script="gtShowHeals"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^([A-Z][a-z]+) tells your group \'eject\'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("jet")</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+) withers as a ray of sunlight sent by ([A-Za-z\s\,\-\']+) engulfs (him|her)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="shouttell"
   match="^([A-Z][a-z]+) yells '(.+)'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("yeller: %1, msg: %2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Z][a-z]+)\'s bash powers through ([A-Z][a-z]+)\'s flesh shield\, sending (him|her|it|them) sprawling\.$"
   name="combatpattern28"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),28)</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Z][a-z]+)\'s essence converges into the room\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+)\'s eyes widen and jaw drops as terror invades (his|her) mind\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="targeting_script"
   match="^([A-Z][a-z]+)\'s hands send forth blinding rays of sunlight\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("prior line: "..GetRecentLines(2))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+)\'s thunderous blastwave breaks against your chest\, shattering ribs\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Z][a-z]+)\'s thunderous blastwave brutally breaks against ([A-Z][a-z]+)\'s chest\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%2"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^([A-Z][a-z]+)\'s wounds begin to heal\.$"
   regexp="y"
   script="doTrackRegenTarget"
   send_to="12"
   sequence="100"
  >
  <send>--Note("begin regen track")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) (barely )?(bites|hits|claws|cleaves|slashes|pierces|stings|shoots|bludgeons|smites|crushes|drains|stabs|whips|plunks) (a fiery arrow at )?([A-Za-z \,\.\-\']+)(\, blasting (him|her|it|them))?\.$"
   name="combatpattern1a"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--print("in combatpattern1a")
local parsedvictim = parseCombatVictim(Trim("%5"))
--print("victim: "..parsedvictim)

if (string.ends(Trim("%1"), " barely")) then
  doCheckRescueTarget(string.match(Trim("%1"), "([A-Za-z %,%.%-%']+) barely"),parsedvictim,1)
else
  doCheckRescueTarget(Trim("%1"),parsedvictim,1)
end

</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) (bite|hit|claw|cleave|slash|pierce|sting|shoot|bludgeon|smite|crush|drain|stab|whip|plunk) enshrouds ([A-Za-z \,\.\-\']+) in a mist of blood\.$"
   name="combat_enshrouds"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note(Trim("%1").." "..Trim("%3"))
doCheckRescueTarget(Trim("%1"),Trim("%3"),2,"obliterates")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^([A-Za-z \,\.\-\']+) (freezes|burns) you\.$"
   name="resist_pattern1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** autoresists in dev")
EnableTriggerGroup("autoresists",false)
local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (resistcount &gt; 0 and charclass == "Druid" and isdruidbot) then
  if ("%2" == "freezes" and not isBuffApplied(buffsArr, "resist cold") ) then
    table.insert(buffsArr,"resist cold")
    Send("cast 'resist' cold")
  elseif ("%2" == "burns" and not isBuffApplied(buffsArr, "resist heat") ) then
    table.insert(buffsArr,"resist heat")
    Send("cast 'resist' heat")
  end
elseif (charclass == "Cleric" and tonumber(GetVariable("isHealbot")) == 1) then
  Execute("checkareadmg "..GetVariable("charname"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) (mutilates|obliterates|annihilates|massacres|bruises|misses) ([A-Za-z \,\.\-\']+) with (his|her|their|its|a) (whip|plunk|hit|shoot|crush|drain|sting|slash|cleave|stab|pierce|claw|bite|bludgeon|smite)\.$"
   name="combatpattern2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%3"),2,Trim("%2"))
</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) barrels into ([A-Za-z \,\.\-\']+), knocking (him|her|it) to the ground\.$"
   name="combatpattern4"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),4)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) charges at ([A-Za-z \,\.\-\']+), but (he|she|it) managed to move away\.$"
   name="combatpattern5"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),5)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) crashes into ([A-Za-z \,\.\-\']+) in a thundering collision, knocking (him|her|them|it) to the ground\!$"
   name="combatpattern6"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),6)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) delivers a quick snap kick to ([A-Za-z \,\.\-\']+)\. ([A-Za-z \,\.\-\']+) staggers and tries to recover\.$"
   name="combatpattern7"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),7)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) delivers a vicious kick to ([A-Za-z \,\.\-\']+)'s face\. Blood flies as (his|her|its|their) head snaps back\.$"
   name="combatpattern8"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),8)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Za-z \,\.\-\']+) disarms your weapon\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("*** DISARMED ***")
Execute("get "..GetVariable("weap1"))
Execute("wield "..GetVariable("weap1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^([A-Za-z \,\.\-\']+) focuses (his|her|its) purity on your leg\!"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^([A-Za-z \,\.\-\']+) forces you to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="gas_script"
   match="^([A-Za-z \,\.\-\']+) gasses you.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local ishealbot = false
local isdruidbot = false
local tryingheal = tonumber(GetVariable("tryingheal"))

if (tonumber(GetVariable("isHealbot")) == 1 ) then
  ishealbot = true
end

if (tonumber(GetVariable("isdruidbot")) == 1 ) then
  isdruidbot = true
end

if ((isdruidbot or ishealbot) and tryingheal == 0) then
  EnableTriggerGroup("gas_script",false)
  Execute("gheal")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) gives ([A-Za-z \,\.\-\']+) a solid punch in the face\.$"
   name="combatpattern9"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),9)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) gives [A-Za-z \,\.\-\']+ a quick thrust and twist, as [a-z]+ strikes ([A-Za-z \,\.\-\']+) in the back with it\.$"
   name="combatpattern10"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),10)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) gracefully steps aside as ([A-Za-z \,\.\-\']+) attacks\!$"
   name="combatpattern11"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%2"),Trim("%1"),11)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Za-z \,\.\-\']+) has (summoned|called) you!$"
   name="summon_called_trigger"
   regexp="y"
   script="doCheckSummonCalled"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   match="^([A-Za-z \,\.\-\']+) key(\.)?$"
   name="key_looter"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (GetVariable("charname") ~= GetVariable("leader")) then
  Execute("get key corpse;give key "..GetVariable("leader"))
else
  Execute("get key corpse")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) misses ([A-Za-z \,\.\-\']+) and destroys an image instead\.$"
   name="combatpattern25"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),25)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) places [A-Za-z \,\.\-\']+ in ([A-Za-z \,\.\-\']+)'s back\, resulting in some strange noises and some blood\.$"
   name="combatpattern13"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%1"),Trim("%2"),13)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) quickly thrusts [A-Za-z \,\.\-\']+ at ([A-Za-z \,\.\-\']+) from behind\, but somehow falls short of (his|her|its|their) target\.$"
   name="combatpattern14"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),14)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^([A-Za-z \,\.\-\']+) screams in pain as the lightning bolts summoned by ([A-Za-z \,\.\-\']+) from the boiling clouds hit (him|her|it)\.$"
   name="resist_pattern2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist electricity") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  table.insert(buffsArr,"resist electricity")
  Send("cast 'resist' electricity")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) swoops at ([A-Z][a-z]+)\.$"
   name="combatpattern27"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),27)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^([A-Za-z \,\.\-\']+) swoops at you, forcing you to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Za-z \,\.\-\']+) throws webbing all over ([A-Z][a-z]+)\!$"
   name="unweb_trigger"
   regexp="y"
   script="doCheckWebbed"
   send_to="12"
   sequence="100"
  >
  <send>--Unweb Lua function call</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tried to backstab ([A-Za-z \,\.\-\']+), but nearly cut (his|her) own finger\.$"
   name="combatpattern15"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%1"),Trim("%2"),15)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tries to bash ([A-Za-z \,\.\-\']+)\, but (he|she|it) passes right through (his|her|its|their) image and falls\.$"
   name="combatpattern16"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),16)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tries to bother ([A-Z][a-z]+) with a [A-Za-z \,\.\-\']+ and ends up on the ground with a face full of shield\.$"
   name="combatpattern29"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),29)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tries to punch ([A-Za-z \,\.\-\']+)\, but (he|she|it|they) deftly avoids the blow\.$"
   name="combatpattern17"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%1"),Trim("%2"),17)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tries to punch ([A-Za-z \,\.\-\']+)\, but (his|her|its) fist passes right through (his|her|its) image\.$"
   name="combatpattern18"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),18)</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+) tries to sweep ([A-Za-z \,\.\-\']+)'s legs, but misses badly.$"
   name="combatpattern19"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%1"),Trim("%2"),19)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^([A-Za-z \,\.\-\']+)\'s attack fails miserably as ([A-Za-z \,\.\-\']+) magically moves out of the way\.$"
   name="combatpattern20"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(Trim("%1"),Trim("%2"),20)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^([A-Za-z\,\-\' ]+) leans through your blow and knocks you to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   match="^([A-Za-z\s\'\,\-]) powerful hit makes you double over in pain\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** possible disorient")</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^([A-Za-z\s\,\-\']+) smirks as (his|her) fireball explodes into the face of ([A-Z][a-z]+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%3"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^([A-Za-z\s\-\,\']+) arrives from( the)? (east|south|north|west|above|below)\, carrying ([A-Z][a-z]+).$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%4"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="gas_script"
   match="^([A-Za-z]+) is gassed by ([A-Za-z \,\.\-\']+).$"
   regexp="y"
   script="doGassedCheck"
   send_to="12"
   sequence="100"
  >
  <send>--moved to arctic.lua</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^(\d+)H (\d+)V (\d+)X ([0-9\.]+% )?(\d+)C ([A-Za-z0-9 \,\.\-\'\:\]\[\(\)\*]*)\&gt;"
   name="group_stopper"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charCurrentHP", %1)
SetVariable("charCurrentMV", %2)
SetVariable("coinsOnHand", %5)
parsePromptLine(Trim("%6"))
--print ("%0")

if (tonumber(GetTriggerOption("group_line","enabled")) == 1) then
  --print("group executed")
  Execute("healgroupparse")
end

EnableTrigger("group_line", false)
--EnableTrigger("group_stopper", false)
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="^(\d:)?\s*\[\s*(\d+)\](\D+)\s*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local spellcircle = 0
if (#Trim("%1") &gt; 0) then
  spellcircle = string.match(Trim("%1"),"(%d+):")
  --Note("circle "..tostring(spellcircle)..":")
end
if (tonumber(GetVariable("isMemmed")) == 1) then
  SetVariable(string.gsub(tostring("%3"), " ","").."count",tonumber("%2"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="^(\d:)?\s*\[\s*(\d+)\](\D+)\s+\[\s*(\d+)\](\D+)\s*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local spellcircle = 0
if (#Trim("%1") &gt; 0) then
  spellcircle = string.match(Trim("%1"),"(%d+):")
  --Note("circle "..tostring(spellcircle)..":")
end
if (tonumber(GetVariable("isMemmed")) == 1) then
  SetVariable(string.gsub(tostring("%3"), " ","").."count",tonumber("%2"))
  SetVariable(string.gsub(tostring("%5"), " ","").."count",tonumber("%4"))
end </send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="^(\d:)?\s*\[\s*(\d+)\](\D+)\s+\[\s*(\d+)\](\D+)\s+\[\s*(\d+)\](\D+)\s*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local spellcircle = 0
if (#Trim("%1") &gt; 0) then
  spellcircle = string.match(Trim("%1"),"(%d+):")
  --Note("circle "..tostring(spellcircle)..":")
end
if (tonumber(GetVariable("isMemmed")) == 1) then
  SetVariable(string.gsub(tostring("%3"), " ","").."count",tonumber("%2"))
  SetVariable(string.gsub(tostring("%5"), " ","").."count",tonumber("%4"))
  SetVariable(string.gsub(tostring("%7"), " ","").."count",tonumber("%6"))
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^A ([A-Za-z \,\.\-\']+) sees you coming and slaps you to the ground with (his|her|its) shield before you even get close\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A Darker Part of the Rift"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD: climb cliff")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A Deep Sea Fishing Spot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Old Elf Fisherman")
Note("** Irda: elf2irda")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^A Fire Blasted Room$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff")</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A Floating Dock"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Dragon's Point **")
Note("** E. Reach : dp2er")
Note("** Balifor  : dp2b")
Note("** Neraka   : dp2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A Fresh Mountain Spring"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink spring")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A Knight of Solamnia clad in brown leather instructs fellow scouts here\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A Knight of Solamnia\, who is a warrior\, is here to further instruct you\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A Rocky Bluff"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Flying Citadel **")
Note("** Neraka: rockhorde2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A Rocky Ledge"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Flying Citadel **")
Note("** Thorbardin : fc2thor")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="speedwalk"
   match="^A Small Hidden Grove$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Note("** Speedwalks from Roc ***********")
Note("** Solace        : roc2s")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A Small Oasis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink pool")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A Tranquil Spring"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Gaard : POISON")
--[[doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink spring")
end
]]--</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A beautiful crystal fountain is here in the courtyard, flowing with water\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A beautiful fountain made entirely of glass bubbles here"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A beautiful white marble fountain is here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="targeting_script"
   match="^A blastwave detonates from ([A-Z][a-z]+)\'s hands\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("prior line: "..GetRecentLines(2))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A bubbling fountain sits in the center of the area.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A circular stone well stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A craterous basin is here collecting water that trickles from overhead.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink basin")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^A dark blue mist swirls around your hands and forms into a spiritual hammer\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("wield spiritual.hammer")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A deep well is sunk into the flagstones"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A fearsome barbarian warrior is here\, sharpening his blade in silence\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Barbarian</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A fountain with an enormous dragon perched upon it sits in the town square...it glows dimly"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="kraken"
   match="^A gigantic black tentacle descends from above to grope insistently at ([A-Z][a-z]+)'s face!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^A glowing portal opens in front of you\, and ([A-Z][a-z]+) steps from it\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A great dragon\'s hoard is here, heaped in a huge pile.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.pile")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^A high ranking knight stands here, protecting the Lytburg entrance."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Lytburg *")
Note("** Tollhouse   : lytburg2th")
Note("** Solace      : lytburg2s")
Note("** Port O Call : lytburg2poc")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A huge bag of coins is here\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.bag")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A huge pile of coins floats here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A huge pile of coins lies here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A huge pile of steel coins lies here\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A huge pile of treasure are left here as your reward.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.treasure")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A huge\, hulking barbarian approaches you\, scowling\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Barbarian</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A large and brutal man attempts to show his trainees how to properly riposte\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large black fountain juts up from the middle of the street.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lemish fountain POISON")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^A large boulder slams into you, knocking you off your feet\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large copper fountain dominates the center of park square.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large fountain carved from solid marble lies in the middle of the courtyard.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large fountain sits in the middle of the road, taking up space.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large fountain stands here, trickling clear fresh water.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A large man waves around his sword with ease\, showing off his skill\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large mound of coins has been piled up in the middle of the floor\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large pile of coins left by Cupelix lie here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large pile of coins makes up this dragon\'s horde.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large pile of coins\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large pile of steel coins is lying on the ground\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.pile")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A large pile of steel has been dumped here."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.pile")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large pump and catchment basin is here."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink basin")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large steel fountain is here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A large, black fountain juts up in the middle of the market.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A lavish multi-tier fountain crowned with a statue stands here gurgling.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A luxurious marble fountain rains water down its sides.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^A malevolent tendril of pure evil strikes you in the head\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))
--^Twisting tendrils of darkness and corruption extend out of Emperor Nephatek's body\.$</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A man of the cloth stands here\, ready to instruct the faithful\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A marble fountain backed with a statue of Kiri-Jolith stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A marble fountain backed with a statue of Paladine stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="kraken"
   match="^A massive golden tentacle descends from above to skewer ([A-Z][a-z]+) through the shoulder!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A mound of glittering treasure lies here."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get treasure in room")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A mountain spring bubbles out of the rocks into a small pool.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink spring")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A pile of steel coins lies here\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A pile of steel coins\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A pile of the keep\'s treasure has been stashed here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.pile")
end</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^A portable keg is empty\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isbarbtrain = false

if (tonumber(GetVariable("isbarbtrain")) == 1) then
  isbarbtrain = true
end

if (isbarbtrain) then
  Execute("w;w;w;w;n;n;n;n;n")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A simple stone water basin stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink basin")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A small pile of coins have been carelessly left here\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A small pile of coins\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A small pile of steel coins has been left here\.( \[\d+\])?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A small pool of crystal clear water sits dug into the granite floor."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink pool")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A small stone fountain gurgles softly here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A small stone well lies here, supplying the community its water.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^A small whirlwind crashes into you, pummeling your entire body\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^A spiritual hammer loses its cohesiveness and dissipates into a light blue mist\.$"
   regexp="y"
   script="doSpiritualHammer"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A spring wells out of the hillside, burbling merrily.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Possible POISON")
doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
--  Execute("fill @drink spring")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A stone well sits in the center of the camp crossroads\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^A tall man wearing the red robes smiles warmly at you\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Red Robe</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^A thick gooey salve is visible in the skull\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^A trainer thumps you on the head with his baton\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^A very large mound of coins is piled here\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A water trough has been left here to water the horses.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A watering hole rests stagnantly under the shade of some trees\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink hole")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A white marble fountain offers refreshment to weary travelers here\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^A white marble fountain spring is in the middle of the clearing\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^A young whitetail brave drops low and sweeps your leg, laying you flat on your back.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Aida Starcross practices kicking with some warriors in the middle of the hall\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^Alas, you are not ready yet\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"

SetVariable("last_burst_attempt",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Aldur A'Kul the master thief sits in a corner watching every movement\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Thief</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Amidst the Ruins of Twendle"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Twendle ***********")
Note("** Kender bard  : twe2bard")
Note("** Tarsis       : twe2t")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^An Ominous Path"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Blacken **")
Note("** Solace : blacken2s")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^An ancient dwarf communes in his natural area\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An artesian well stands in the middle of the village square."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="kraken"
   match="^An enormous green tentacle descends from above to hit ([A-Z][a-z]+) over the head!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="kraken"
   match="^An immense purple tentacle descends from above to wrap around ([A-Z][a-z]+)'s wrist!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="splitscript"
   match="^An inconsequential amount of steel coins lies here\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>iscoinloot = tonumber(GetVariable("iscoinloot"))

if (iscoinloot==1) then
  Execute("get all.coins")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An intricately carved fountain sits here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An inverted pyramidal well of shimmering force floats here"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An old drinking well stands in the middle of the well house.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An old stone well graces the garden here."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An old wishing well sits in the town square.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink well")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^An ornamental fountain crafted from marble stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^Arm hairs rise as Lunitari becomes more electically charged\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^At the Celestial Gate"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Celestial Temple **")
Note("** Palanthas : ct2p ")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^At the Edge of the Cliff"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Sanction **")
Note("** Neraka : sanc2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^At the Foot of the White Cliffs"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Foot of White Cliffs **")
Note("** Tarsis: wc2t")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   match="^Atop the Keep$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff")</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="speedwalk"
   match="^Before A Burned-out Castle$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Note("** Speedwalks from Dargaard Keep")
Note("** to TH       : dargaard2th")
Note("** to Kalaman  : dargaard2k")
Note("** to Gormskun : dargaard2gorm")</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Before a Gigantic Lift"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD : PUSH BUTTON")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Before a Long Counter"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Delphon Inn **")
Note("** Kender Bard : d2bard")
Note("** Neraka      : d2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Before the Dwarven Gates"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Dwarven Gates **")
Note("** Bard tree : dk2bard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Before the Pier of Garret"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Garret Pier **")
Note("** Western Branch : garret2wb")
Note("** Gulfport       : garret2gp")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Before you can react, the pot barrels you over\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Beginnings of a Dense Forest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Kern **")
Note("** Kalaman: kern2k")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Binar's Bar at the Burrow"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD : OPEN KITCHEN")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^Blazewight, the fiery dracolich uses his bony wings to skewer ([A-Z][a-z]+) through the chest!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   match="^Bleak Passage$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   sequence="100"
   text_colour="14"
  >
  <send>Note("** Note DT")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Brandon uth Kijar, the paladin guildmaster, kneels in prayer before a small shrine\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Paladin</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^But it is no use\, you feel yourself slipping\.\.\.slipping\.\.\.slipping\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="area_dmg"
   match="^Caiaphus grabs holds of ([A-Z][a-z]+) and drains away ([A-Z][a-z]+)\'s lifeforce\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^City View"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Cloud Kingdom **")
Note("** Tarsis    : ck2t")
Note("** Bard tree : ck2bard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Cloudreaver looms ominously above you, sending shivers down your spine\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Barbarian</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Come on\! I\'m relaxing\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)
Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Crater Entrance"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Stormhead **")
Note("** Western Branch : slarn2wb")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^Cutting Away From the Mountains$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink spring")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^Cyan breathes forth a huge cloud of toxic gas\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Dardan Sta\'kor, the warrior guildmaster, stands here throwing students onto a mat\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^Darkness coagulates next to you\, and when it clears ([A-Z][a-z]+) is standing"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Dazed, you crumple to the ground in a heap\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^Deep breath, easy, calm down\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--[[
require "socket"
Note("** burst build up: "..math.abs(
tonumber(GetVariable("burst_start_time"))-round(socket.gettime(),3)))
SetVariable("last_burst_time",round(socket.gettime(),3))
--]]</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^Despite the pain\, you are briefly comforted by ([A-Z][a-z]+)\'s nurturing hands\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Dungin Lanter leans against a tree giving a lesson on fletching\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^East Gate of New Tarsis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Tarsis E.Gate ***********")
Note("** Twendle       : t2twe")
Note("** Cloud Kingdom : t2ck")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Eastern Branch"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Eastern Reach **")
Note("** Dragon's Point : er2dp")
Note("** Crytic Forest  : er2crytic")
Note("** Kender Bard    : er2bard")
Note("** Balifor        : w w w s s")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Eastern City Gates"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Kalaman E.Gate **")
Note("** Kern       : k2kern")
Note("** Under Relm : k2ur")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Edge of the Scrubland"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Mound **")
Note("** Tollhouse : mo2th")
Note("** Palanthas : mo2p")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Elrax the master scout is here, blending into his surroundings\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Entrance to Gargath's Keep"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Gargath's Keep **")
Note("** Neraka  : g2n ")
Note("** Kalaman : g2k ")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Entrance to Lemish"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Lemish speedwalks **")
Note("** Tollhouse : lemish2th")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Flashbolt\'s tail whips about and knocks you silly!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^Flesh burns as Blazewight, the fiery dracolich's fiery hands contact ([A-Z][a-z]+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^Focusing on controlling your movements, you begin a steady build up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
SetVariable("burst_start_time",round(socket.gettime(),3))
SetVariable("last_burst_attempt",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Foghorn, a bony man dressed in colorful rugs, is sitting here cross-legged\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Shaman</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^Fragments of energy scald your face, leaving you with massive burns\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^From deep in your belly comes forth a barbaric YAWP\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
SetVariable("lastbattlecrytime",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Gates of Gulfport"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Speedwalks from Gulfport **")
Note("** Flying Citadel : gp2fc")
Note("** Crimson Porter : gp2porter")
Note("** Solace N.Gate  : gp2s")
Note("** Hylo Docks     : gp2hylo")
Note("** Western Branch : gp2wb")
Note("** Garret         : gp2garret")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Gavin Darkel charges into you, sending you sprawling down the stairs"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Glitarald swings his tail into you, slamming you into a tree\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^Huge flames burn ([A-Z][a-z]+) from above\.$"
   name="resist_pattern7"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist heat") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot and isTargetInGroup("%1")) then
  table.insert(buffsArr,"resist heat")
  Send("cast 'resist' heat")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^Huge flames scorch you from above\.$"
   name="resist_pattern8"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local resistcount = tonumber(GetVariable("resistcount"))
local charclass = GetVariable("charClass")
local isdruidbot = false
if (tonumber(GetVariable("isdruidbot")) == 1) then
  isdruidbot = true
end
EnableTriggerGroup("autoresists",false)
if (not isBuffApplied(buffsArr, "resist heat") and resistcount &gt; 0 and charclass == "Druid" and isdruidbot) then
    table.insert(buffsArr,"resist heat")
    Send("cast 'resist' heat")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^In the Craggy Mountains"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Flying Citadel **")
Note("** Kalaman : fc2k")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^In the Mirror Corridor$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff;autorestoff")
--n.ergoth DTs</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Inside a Huge Stalagmite"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD : ENTER HOLE ")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Janix tends to this grove while muttering to himself\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^Judgment$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Lady Camilla walks around gracefully as she blesses the congregation\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Leehf the master of nature is here, playing with a small lighting cloud\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Looking (north|east|south|west|up|down)\:$"
   regexp="y"
   script="scanCount"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^Looking around, you notice ([A-Z][a-z]+) emerging from a small opening in"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Meeting in the Hills"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Storm's Keep **")
Note("** Tollhouse : storms2th")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="speedwalk"
   match="^Moving Across the Gap$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Note("** Speedwalks from Gormskun **")
Note("** Kalaman    : gorm2k")
Note("** Neraka     : gorm2n")
Note("** Tollhouse  : gorm2th")
Note("** Dargaard   : gorm2dargaard")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Muddy, you stand up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Mustakrakish uses his huge horns to sweep your feet from under you\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Njarl Bjornson works a group of fledgling paladins in combat drills\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Paladin</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^No spirits heed your call\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--SetVariable("spirit_in_room_count",0)
--already set to 0 upon call spirits

Note("** Spirit count   : 0")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Northern City Gates"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Kalaman N.Gate **")
Note("** Old fisherman : k2deepsea")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Northern Reach"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Northern Reach **")
Note("** Dun Mir   : W W S W W , cut grass")
Note("** Que-Kul   : nr2qk")
Note("** Tollhouse : nr2th")
Note("** Kalaman   : nr2k")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   match="^Nowhere$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Send("prompt newline")
Send("opt gag_move")
Send("prompt cond")
Send("opt lines 150")
Execute("looton")
Execute("autotrainon")
Execute("afillon")

</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^On a Sturdy Wooden Pier"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Flying Citadel **")
Note("** Neraka : fc2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^One of the dark orbs blasts through ([A-Z][a-z]+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Osht Es-Kalin charges at you with a lowered shoulder\, sending you"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Osht Es-Kalin grabs you by the throat and throws you across the arena\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^Over Hell$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff")
--n.ergoth DTs</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Overlooking the Ruins"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Galan Dracos **")
Note("** Palanthas : gd2p")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="fleescript"
   match="^PANIC\! You couldn\'t escape\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautoflee")) == 1) then
  SetVariable("istryingflee",1)
  SetVariable("isfighting",1)
  Send("flee")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Pasal is preaching to his acolytes about the necessity of faith\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Path to Crytic Forest"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Crytic Forest")
Note("** Balifor N.Gate : crytic2b")
Note("** Eastern Reach  : crytic2er")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="mem_disable"
   match="^Please select a number from the given list\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--need to disable mem
SetVariable("isCheckMem",0)
SetVariable("isclanned",0)
Note("** Mem check      : Disabled")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^Rainsong\'s speed gets the better of you as you get hit by her from all sides\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Raple Dawn sends a force blast at you, knocking you to the ground.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="login_script"
   match="^Reconnecting\.$"
   regexp="y"
   script="doLoginChecks"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("score;group;fly;equipment")
--if (GetVariable("charClass") == "Druid
--also getmem;fullstatus
--SetVariable("isCheckMem",1)
--Note("** Mem check      : Enabled")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Samus clenches his fist and growls at you, sending you reeling in agony!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Sarum di Starin, the scout guildmaster, kneels and examines some tracks\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="bot_train"
   match="^Scout's Training Room$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>if (tonumber(GetVariable("isbottrain")) == 1 and GetVariable("charclass")=="Scout") then
  Execute("camp")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Secluded Grove"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Druid Guild ** ")
Note("** Palanthas : guild2p ")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Sir Baldric uth Mackan stands here in solemn prayers\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Paladin</send>
  </trigger>
  <trigger
   enabled="y"
   group="bot_train"
   match="^Some pattern here\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charclass = GetVariable("charClass")
local isbottrain = false
--[[
Note:
use Send() if command can be directly sent to mud without any processing by MUSH
use Execute() if you need some processing, like semicolon stacking
in general you can use Execute for nearly everything
--]]
if (tonumber(GetVariable("isbottrain")) == 1) then
  isbottrain = true
end

if (isbottrain) then
  if (charclass == "Scout") then
    Execute("wake;st")
    Send("camp")
  elseif (charclass == "Red Robe") then
    Send("temporal vis")
  elseif (charclass == "Barbarian") then
    Send("wilddance")
  elseif (charclass == "Warrior") then
    Execute("stand;pb")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^Some smoke blows into the room and slowly forms into ([A-Z][a-z]+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Some unknown force picks you up and slams you into the floor\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="speedwalk"
   match="^Southern City Gates"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Note("** Speedwalks from Kalaman S.Gate **")
Note("** Neraka         : k2n")
Note("** Gargath        : k2g")
Note("** Flying Citadel : k2fc")
Note("** Gormskun       : k2gorm")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Southern Reach"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Southern Reach **")
Note("** Tarsis      : sr2t")
Note("** Druid quest : sr2tower")
Note("** Vry-Kith    : sr2vry")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^Spells being memorized\:$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isMemmed",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^Spells currently memorized\:$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("resetmem")  &lt;-- alias, better to use arctic.lua
resetMem()
SetVariable("isMemmed",1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="^Spells left \(level\-number\)\:([0-9\-\s]+)$"
   regexp="y"
   script="parseMemSlots"
   send_to="12"
   sequence="100"
  >
  <send>--parseMemSlots(Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Stutts, Captain of the Lunitari Exploration Group, is standing in a pool of mud."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Qualm : N W U")
Note("** Rank merchant : E E U N")
Note("** Speedwalks from Lunitari **")
Note("** Neraka    : luni2n")
Note("** Tollhouse : luni2th")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   keep_evaluating="y"
   match="^Suddenly ([A-Za-z\s\,\-\']+) stabs you in the back\.$"
   send_to="12"
   sequence="100"
  >
  <send>Execute("gheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^Suddenly, ([A-Z][a-z]+) appears in the room from the (?:north|south|east|west) seeming very dazed\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^THWAP\! ([A-Z][a-z]+)\'s tenebrous orb detonates\, slamming ([A-Z][a-z]+) with dark energy\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%2"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^THWAP\! ([A-Z][a-z]+)\'s tenebrous orb detonates\, slamming you with dark energy\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Taelan Deoth stalks about the chamber, instructing would be thieves\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Thief</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Tantys Wildblade demonstrates bandaging to a group in the corner\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="mem_disable"
   match="^Thank you for playing\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--need to disable mem
SetVariable("isCheckMem",0)
SetVariable("isclanned",0)
Note("** Mem check      : Disabled")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Burrow's Kitchen"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD : OPEN BACKDOOR")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Docks of Hylo"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Hylo Docks **")
Note("** Gulfport Gates   : hylo2gp")
Note("** Teleporter       : hylo2porter")
Note("** Flying Citadel   : hylo2fc")
Note("** Palanthas W.Gate : hylo2p")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The East Bank of the Thon-Thalas"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Silvi E.Bank **")
Note("** Kender bard : silvi2bard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The East Gate of Neraka"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Neraka E.Gate **")
Note("** Dragon's Pt : n2dp")
Note("** Rockhorde   : n2rockhorde")
Note("** Delphon     : n2d ")
Note("** Balifor     : n2b")
Note("** Mearia      : n2mearia")
Note("** Flotsdam    : n2f")
Note("** Sorinthalas : n2sorin")
Note("** Bard tree   : n2bard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Eastern Gate of Solace"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Solace E.Gate **")
Note("** Flurry           : s2flurry")
Note("** Flying Citadel   : s2fc")
Note("** Faerie Kingdom   : s2f")
Note("** Solamnic Outpost : s2so")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Entrance to the Que Kul Village"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from QK **")
Note("** Que Kul   : qk2nr")
Note("** Tollhouse : qk2th")
Note("** Kalaman   : qk2k")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Gates of Que-Kiri"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Que-Kiri **")
Note("** Solace    : qk2s")
Note("** Tollhouse : qkiri2th")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Gates of Thorbardin"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Thorbardin **")
Note("** Flying Cit : thor2fc")
Note("** Quali  : thor2quali")
Note("** Solace : thor2s")
Note("** Tarsis : thor2t")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Great Oak Tree"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Mearia **")
Note("** Neraka E.Gate: mearia2n")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Kharolis Mine Vault"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** KWD : GET CRATE TABLE")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Last Call$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Speedwalks from Port of Call Inn **")
Note("** W.Branch  : poc2wb")
Note("** Tollhouse : poc2th")
Note("** Solace    : poc2s")
Note("** Lytburg   : poc2lytburg")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Mage's Chamber"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Cities **")
Note("** East  : Balifor Mages")
Note("** West  : Newport")
Note("** North : Palanthas ")
Note("** South : Tarsis")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^The Majestic Shrine of Lunitari$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff")</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="scoutscript"
   match="^The Nightmare Forest of Silvanesti$"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>Execute("fleesafeoff;autorestoff")
--n.ergoth DTs</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The North Gate of Neraka"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Neraka N.Gate **")
Note("** Dargaard : n2dargaard")
Note("** Gargath   : n2g")
Note("** Tollhouse : n2th")
Note("** Kalaman   : n2k ")
Note("** Lunitari  : n2luni ")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The North Gate of Port Balifor"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Balifor N.Gate **")
Note("** Dragon's Point : b2dp")
Note("** Crytic         : b2crytic")
Note("** Neraka         : b2n")
Note("** Flotsam        : b2f")
Note("** Kender bard    : b2bard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Northern Gate Of Tarsis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Tarsis N.Gate **")
Note("** Hopeful    : t2hopeful")
Note("** Thorbardin : t2thor")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Northern Gate of Solace"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Solace N.Gate **")
Note("** Lytburg     : s2lytburg")
Note("** Gulf Port   : s2gp")
Note("** Port O'Call : s2poc")
Note("** W.Branch    : s2wb")
Note("** Bluff       : s2bluff")
Note("** Tollhouse   : s2th")
Note("** Que-Kiri    : s2qk")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Road to Hopeful"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Hopeful **")
Note("** Tarsis : hopeful2t")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The South Gate of Neraka"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Neraka S.Gate ** ")
Note("** Flying Cit: n2fc")
Note("** Sanction  : n2sanc")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^The Southeast Corner of the Courtyard"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink pond")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Southern Gate To Flotsam"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Flotsam S.Gate ** ")
Note("** Neraka  : f2n")
Note("** Balifor : f2b")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Southern Gate of Solace"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Speedwalks from Solace S.Gate ** ")
Note("** Darken tab : s2darken")
Note("** Newport    : s2new")
Note("** Que Teh    : s2qt")
Note("** Qualinesti : s2quali")
Note("** Thorbardin : s2thor")
Note("** Roc        : s2roc")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Southern Gates of Palanthas"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Palanthas S.Gate **")
Note("** Raynes       : p2raynes")
Note("** W.Gate Pala  : ps2pw")
Note("** Mound        : p2mo")
Note("** Tollhouse    : p2th")
Note("** Galan Dracos : p2gd")
Note("** DK Outpost   : p2dko")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Southern Gates of Tarsis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Tarsis S.Gate **")
Note("** Vry-Kith       : t2vry")
Note("** Southern Reach : t2sr")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Tollhouse"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Speedwalks from Tollhouse **")
Note("** Lunitari      : th2luni")
Note("** Port O'Call   : th2poc")
Note("** Lemish        : th2lemish")
Note("** Vingaard Keep : th2vk")
Note("** Storms Keep   : th2storms")
Note("** Lytburg       : th2lytburg")
Note("** N. Reach      : th2nr")
Note("** Neraka        : th2n")
Note("** Que Kul       : th2qk")
Note("** Mound         : th2mo")
Note("** Que Kiri      : th2qkiri")
Note("** Kalaman       : th2k")
Note("** Palanthas     : th2p")
Note("** Solace        : th2s")
Note("** Garnet        : th2garnet")
Note("** West. Branch  : th2wb")
Note("** Dargaard      : th2dargaard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The West Gates of Palanthas"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Palanthas W.Gate **")
Note("** Fyzian           : p2fyzian")
Note("** Palanthas S.Gate : pw2ps")
Note("** Druid guild      : p2guild")
Note("** Hylo             : p2hylo")
Note("** Celestial Temple : p2ct")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Western Entrance to the City"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Balifor W.Gate **")
Note("** Shadow          : b2shadow")
Note("** Black Shoreline : b2bs")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Western Gate of Solace"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Solace W.Gate **")
Note("** Blacken    : s2blacken")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^The Western Gates of Tarsis"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** The Western Gates of Tarsis **")
Note("** Brass Dragonscale Tent      : t2tent")
Note("** At the Foot of White Cliffs : t2wc")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The air around you loses its solidity\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** shield?")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^The air before ([A-Za-z \,\.\-\']+) shimmers\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("fragoff")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^The air crackles as ([A-Za-z \,\.\-\']+) swings (his|her|its) flaming sword at ([A-Za-z \,\.\-\']+)\.$"
   name="combatpattern21"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--doCheckRescueTarget("attacker","victim")
doCheckRescueTarget(Trim("%1"),Trim("%3"),21)</send>
  </trigger>
  <trigger
   enabled="y"
   group="targeting_script"
   match="^The air swirls and a funnel cloud forms\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("prior line: "..GetRecentLines(2))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^The bard of the tower plays a haunting melody on his flute\, making ([A-Z][a-z]+) sleepy\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (isTargetInGroup(Trim("%1"))) then
  Execute("wake %1")
end</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^The cap appears rough and in perfect condition\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isbarbtrain = false
local isbottrain = false

if (tonumber(GetVariable("isbarbtrain")) == 1) then
  isbarbtrain = true
end

if (tonumber(GetVariable("isbottrain")) == 1) then
  isbottrain = true
end

if (isbarbtrain or isbottrain) then
  Send("drop 1.cap in inv")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^The clothes in the wardrobe to the (west|east) part as ([A-Z][a-z]+) steps out\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--dun mir
Execute("checkpktarget "..Trim("%2"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The cloud-veiled sky becomes even darker as the sun sets\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^The dagger\'s metallic surface is bright and shiny\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isbottrain")) == 1) then
  Send("drop 1.dagger in inv")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The darkness marks the end of another day\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="splitscript"
   match="^The death cry of ([A-Za-z \,\.\-\']+) echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("iscoinloot"))==1) then
  Execute("get all.coins corpse")
end

if (tonumber(GetVariable("iscomploot"))==1) then
  Execute("get all.component corpse")
end

if (tonumber(GetVariable("doexam"))==1) then
  Execute("exa corpse")
end

if (tonumber(GetVariable("isautocarve"))==1 and GetVariable("charClass")=="Barbarian" and tonumber(GetVariable("isfighting"))==0) then
  Execute("carve corpse")
end</send>
  </trigger>
  <trigger
   group="essencescript"
   match="^The death cry of Drake\, the dark druid echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get essence drake</send>
  </trigger>
  <trigger
   group="essencescript"
   match="^The death cry of Eern Tyot echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get essence eern</send>
  </trigger>
  <trigger
   group="essencescript"
   match="^The death cry of Lezi Sylian echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get essence lezi</send>
  </trigger>
  <trigger
   group="essencescript"
   match="^The death cry of Slarn Urm echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get essence slarn</send>
  </trigger>
  <trigger
   group="essencescript"
   match="^The death cry of a hierophant druid echoes from somewhere nearby\.\.\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get essence druid</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^The divine amelioration wanes and disappears\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Amelioration out")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The dust-filled skies of Lunitari darken as the sun sets\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The electrical energies shielding you disappear\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** prob lightning shield")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The energy in the air coalesces and becomes controllable once again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** what debuff?")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The force of the blow sends you flying, and you land on your back!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^The force of the explosion maims ([A-Z][a-z]+)'s body\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead barbarian master is floating here\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Barbarian</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead barbarian master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Barbarian</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead cleric master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead druid master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead scout master is floating here\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead scout master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead shaman master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Shaman</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead warrior master is floating here\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The ghost of a long-dead warrior master materializes\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The glow of your skin slowly fades\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem spectral glow")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^The gods smile upon you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--maybe rapture or amelioration up?</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The grand paladin master is here ready to train the new students\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Paladin</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^The great fountain of old Tarsis stands here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The head cleric stands here, full of righteousness and blessing\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The high priestess of Kalaman bids you a warm welcome to her church\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The kick strikes you directly in the chest with such force you are thrown"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master assassin looks at you from behind clear blue eyes\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Thief</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master druid is here in a deep meditation\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master druid stands here, looking very somber\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master paladin is here, offering praise to his merciful god\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Paladin</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master scout stares up to the sky, attempting to channel something\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Scout</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master thief hands you back a purse he has just taken from your pocket\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Thief</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master warrior is here practicing some swordsman skills\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The master warrior stands patiently here, flexing his sword-arm\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="mem_disable"
   match="^The mud has crashed\. Please try again later\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--need to disable mem
SetVariable("isCheckMem",0)
SetVariable("isclanned",0)
Note("** Mem check      : Disabled")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The rising sun barely lights the dark and cloudy sky\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The rising sun can barely be made out through the scarlet dust storms\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The rising sun proclaims a new day\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The room glows brightly as you enter and you feel an intense pain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--in Ryanes
Execute("dostand")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The sand beast reaches a hand into the floor, and suddenly a huge wave"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The scarred head lunges at you, throwing you to the ground\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dostand")
--Lytburg Hydra spec</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The spheres around you blink out of existance\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** spheres of absorption out")</send>
  </trigger>
  <trigger
   group="shaman_script"
   match="^The spirit of ([A-Za-z \,\.\-\']+) fades into existence\.$"
   name="call_spirit_trigger"
   regexp="y"
   script="addSpiritCount"
   send_to="12"
   sequence="100"
  >
  <send>--in arctic.lua
</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^The spirit of ([A-Za-z \,\.\-\']+) starts following you\.$"
   regexp="y"
   script="addSpiritCount"
   send_to="12"
   sequence="100"
  >
  <send>--in arctic.lua
</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^The spirit of ([A-Za-z \,\.\-\']+) stops following you\.$"
   regexp="y"
   script="subtractSpiritCount"
   send_to="12"
   sequence="100"
  >
  <send>--in arctic.lua</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^The spirits of alcohol do not flow within you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",0)
if (GetVariable("charClass")=="Barbarian") then
  Send("taste all.firebreather in inv")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^The sun slowly sinks in the western horizon\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^The tail hits you hard, sending you tumbling backwards.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^The tangled vines around your body don't allow you to move\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^The tentacles constricting you make that impossible\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The warmth protecting your spirit fades\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** sacred ward out")
Execute("buffrem sacred ward")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^The warrior guildmaster stands here, waiting to train you\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^The webbing around your body doesn\'t allow you to move\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^The white aura around your body fades\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem sanctuary")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="splitscript"
   match="^There were (\d+) coins\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doAutoSplit(tonumber("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^Through your wizard\'s eye: ([A-Z][a-z]+) (teleports) (in|away)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (wizeyeArr == nil) then
  wizeyeArr = {}
end
table.insert(wizeyeArr, Trim("%0"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Through your wizard\'s eye: ([A-Z][a-z]+) has (left through|arrived from) the (north|east|south|west|up|down) exit\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (wizeyeArr == nil) then
  wizeyeArr = {}
end
table.insert(wizeyeArr, Trim("%0"))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Total visible people : (\d+)\s+Total people online  : (\d+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (math.abs(tonumber("%1") - tonumber("%2")) &gt;= 3) then
  Note("** WARNING: Possible "..math.abs(tonumber("%1") - tonumber("%2")).." domed")
end

if (GetTriggerInfo ("whob_line", 8)) then
  SetVariable("iswhobgood",1)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Tuuli Shieldbearer the master warrior stands here, bellowing at his students\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Warrior</send>
  </trigger>
  <trigger
   enabled="y"
   group="mem_disable"
   match="^Type 'start' to create a new character\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--need to disable mem
SetVariable("isCheckMem",0)
SetVariable("isclanned",0)
--Note("** Mem check      : Disabled")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Ubex, Good Shepherd of the Dusty Road, smiles beatifically\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Cleric</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^Virga the Rainmaker eyes the sky carefully\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^Wait for the battle\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isfighting",0)

</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^Water flows out of a white marble fountain here.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink fountain")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^Watering Hole"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink pond")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="login_script"
   match="^Welcome to the land of Krynn\.$"
   regexp="y"
   script="doLoginChecks"
   send_to="12"
   sequence="100"
  >
  <send>--login</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Well Concealed Path"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Quali **")
Note("** Solace : quali2s")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Western Branch"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Western Branch **")
Note("** Gulfport    : wb2gp")
Note("** Port O'Call : wb2poc")
Note("** Tollhouse   : wb2th")
Note("** Garret      : wb2garret")
Note("** Shayds      : wb2shaydes")
Note("** F.Temple    : wb2ft")
Note("** Solace      : wb2s")
Note("** Haven       : wb2h")
Note("** Slarn       : wb2slarn")
</send>
  </trigger>
  <trigger
   back_colour="8"
   enabled="y"
   group="speedwalk"
   match="^Western City Gates"
   match_back_colour="y"
   match_text_colour="y"
   regexp="y"
   send_to="12"
   sequence="100"
   text_colour="14"
  >
  <send>
Note("** Speedwalks from Kalaman W.Gate **")
Note("** N.Reach      : k2nr")
Note("** Que Kul      : k2qk")
Note("** Fort Khalarm : k2fortk")
Note("** Tollhouse    : k2th")
Note("** Dargaard     : k2dargaard")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Western Gate of Haven"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Haven **")
Note("** Western Branch : h2wb")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^Western Gates of Newport"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Newport W.Gate **")
Note("** Solace : new2s")
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^What do you want to brew in\?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("brewoff")

if (tonumber(GetVariable("isbottrain"))==1) then
  if (GetVariable("charClass")=="Druid") then
    Execute("trainoff;stand;cast 'word' me;rent;0")
  else
    Execute("trainoff;stand;get glowing.recall "..GetVariable("container")..";recite glowing.recall;rent;0")
  end
end
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^What do you want to scribe to\?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("scribeoff")

if (tonumber(GetVariable("isbottrain"))==1) then
  if (GetVariable("charClass")=="Druid") then
    Execute("trainoff;stand;cast 'word' me;rent;0")
  else
    Execute("trainoff;stand;get glowing.recall "..GetVariable("container")..";recite glowing.recall;rent;0")
  end
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Who should the spell be cast upon\?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^With a quickness never before seen, Lord Rayne leaps forward and crashes"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^You (barely )?(bite|hit|claw|cleave|slash|pierce|sting|shoot|bludgeon|smite|crush|drain|stab|whip|plunk) (a fiery arrow at )?([A-Za-z \,\.\-\']+)(\, blasting (him|her|it|them))?\.$"
   name="combatpattern22"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local parsedvictim = parseCombatVictim(Trim("%4"))
if (GetVariable("charClass")=="Shaman") then
  SetVariable("isfighting",1)
end
--Note("pattern:"..tostring(22)..", victim: "..parsedvictim)
doCheckRescueTarget(GetVariable("charname"),parsedvictim,22)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^You (obliterate|annihilate|massacre|bruise|miss) ([A-Za-z \,\.\-\']+) with (a|your) (plunk|hit|shoot|crush|drain|sting|slash|cleave|stab|pierce|claw|bite|bludgeon|smite)\.$"
   name="combatpattern23"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doCheckRescueTarget(GetVariable("charname"),Trim("%2"),23)</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You aim at ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isaimneeded",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You aim your kick too high and fall, slamming your face into the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^You apply bandages to ([A-Z][a-z]+)\'s wounds and hope for the best\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("placeholder")</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^You apply bandages to your wounds and hope for the best\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("placeholder")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^You are (\d+) years old.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charAge", %1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You are (hit|struck|caught|blasted) (by|in) a spray of (radiant|shimmering|scintillating|vibrant|bright|gleaming|murky) (violet|blue|indigo|orange|red|yellow|green)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="clan_script"
   match="^You are a(n)? (Elder|Neophyte|Clansman|Chieftain) in ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isclanned",1)
SetVariable("clanName",Trim("%3"))
SetVariable("clanRank",Trim("%2"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You are already aiming at them\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isaimneeded",0)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You are already connected with the environment\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("communeoff")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You are already on your way\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
SetVariable("last_burst_attempt",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are already standing\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You are carrying\:$"
   name="inventory_trigger"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("key_looter",false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You are completely disoriented\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are crushed to the floor by a giant wave\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You are enveloped in flames from a fireball sent by ([A-Za-z\s\,\-\']+)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   match="^You are following ([A-Za-z]+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("setleader "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="fooddrink"
   match="^You are hungry.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--get @food @container;eat @food

if (tonumber(GetVariable("ishideon")) == 0)  then
  Execute("get "..GetVariable("food").." "..GetVariable("container"))
  Execute("eat "..GetVariable("food"))
end

if (tonumber(GetVariable("isbottrain"))==1) then
  if (GetVariable("charClass")=="Druid") then
    Execute("doautostand;cast 'sust' me")
  elseif (GetVariable("charClass")=="Cleric") then
    Execute("doautostand;cfood;eat bread;drop all.bread")
  elseif (GetVariable("charClass")=="Scout") then
    Execute("doautostand;scavenge")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are knocked down as the ship is suddenly tossed about in the waves\!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are knocked to the ground by the force of the wind\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are knocked to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You are missing components required for this spell\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("scribeoff;brewoff")

if (tonumber(GetVariable("isbottrain"))==1) then
  if (GetVariable("charClass")=="Druid") then
    Execute("trainoff;stand;cast 'word' me;rent;0")
  else
    Execute("trainoff;stand;get glowing.recall "..GetVariable("container")..";recite glowing.recall;grab history;rent;0")
  end
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^You are no longer resistant to (acid|heat|cold|electricity)\.$"
   name="resist_pattern9"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem resist "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You are not a member of a group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",0)
Execute("splitoff")
Send("group")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You are not able to shoot a bow right now\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isaimneeded",1)
SetVariable("isshootneeded",1)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You are not fighting anyone\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isfighting",0)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You are now a member of ([A-Za-z \,\.\-\']+) group\.$"
   regexp="y"
   script="doNewlyGrouped"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("spliton;skimon;skim 10;group")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You are now sober\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",0)
if (GetVariable("charClass")=="Barbarian") then
  Note("** NOT drunk")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are pushed onto your butt by the power of ([A-Za-z \,\.\-\']+)\'s force missile\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You are ready to mend once again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("stand;learn all")
--Execute("domend")
Send("examine 1.cap in inv")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You are ready to sharpen once again\.$"
   regexp="y"
   script="doSharpenTrain"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are sent sprawling as ([A-Za-z \,\.\-\']+) crashes into you\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You are still a group member\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("group;spliton;skimon;skim 10")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="fooddrink"
   match="^You are thirsty.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("ishideon")) == 0)  then
  Execute("drink "..GetVariable("drink"))
end

if (tonumber(GetVariable("isbottrain"))==1) then
  if (GetVariable("charClass")=="Druid") then
    Execute("doautostand;cast 'sust' me")
  elseif (GetVariable("charClass")=="Cleric") then
    Execute("doautostand;cast 'create water' waterskin")
  end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You are thrown to the ground by the force of the earthquake\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You are unable to use your physical form\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You attempt to assist ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("assist..")</send>
  </trigger>
  <trigger
   enabled="y"
   group="warriorscript"
   keep_evaluating="y"
   match="^You begin to assault ([A-Za-z \,\.\-\']+)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
SetVariable("lastassaulttime",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You call for the assistance of the Gods and your prayers are answered\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--rapture or amelioration up</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You call for the assistance of the Gods, but hear no answer\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--amelioration/rapture fail</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You can not use hover just yet\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--SetVariable("ishover",1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="druidscript"
   match="^You can pray to Zivilyn\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautoreclaim"))==1 and tonumber(GetVariable("islegendary"))==1 and GetVariable("charClass")=="Druid") then
  Send("reclaim")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You can\'t do this sitting\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Execute("endheal;doautostand")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You can\'t feel anything from the neck down\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You can\'t remember how to cast that spell\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal;mem")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You cannot concentrate enough (?:to cast|for this)\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You cannot tap your deity\'s power for spells\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")
Note("** absolution")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You charge into the breach with a great yell\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--SetVariable("last_itb_time",)
SetVariable("last_itb_time",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^You couldn\'t find anyone to order around\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("spirit_in_room_count",0)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You create some food\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("eat bread;setfood bread")
--[[
if (GetVariable("charClass") == "Cleric") then
  Execute("gact give 3*bread")
elseif (GetVariable("charClass") == "Druid") then
  Execute("gact give 2*bread")
end
]]--
--Execute("put 6*bread "..GetVariable("container))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You crumple over on the ground as Terzak shatters your mind!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You disband your group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",0)
Execute("splitoff;group")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="spelltracker"
   match="^You estimate your studies will complete in (\d+) \(game\) hours\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("memticks",tonumber("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="parryscript"
   match="^You fail the parry attempt!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautoparry")) == 1) then
  Send("parry")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You fail to start the build up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** failed burst")
require "socket"
SetVariable("last_burst_attempt",round(socket.gettime(),3))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You fall onto your rump and slide backwards a bit\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dostand")     --from thunderbolt
</send>
  </trigger>
  <trigger
   enabled="y"
   group="charmed_script"
   match="^You fall under the influence of ([A-Za-z\-\'\,\s]+)\'s magic\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Charmed by "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="poisonscript"
   match="^You feel burning poison in your blood, and suffer\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You feel drunk\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",1)
if (GetVariable("charClass")=="Barbarian") then
  Note("** drunk")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You feel hollow and weakened as the prayer surrounding you fades\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** aid wore")
Execute("buffrem aid")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You feel less righteous\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem bless")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You feel less threatening\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem monstrous mantle")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You feel more vulnerable\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** what debuff is this?!)</send>
  </trigger>
  <trigger
   enabled="y"
   group="warriorscript"
   match="^You feel the need, the need to assault someone\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isfighting")) == 1 and tonumber(GetVariable("isautoassault")) == 1) then
  SetVariable("islegendary",1)
  Execute("doautostand;assault")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You feel up to using hover again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("hover")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You feel up to using peck again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isfighting"))==1) then
  Execute("peck")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You feel up to using volley again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("--- VOLLEY UP ---")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^You feel your bond with nature fade away\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You fill a portable keg from a fountain\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isbarbtrain = false

if (tonumber(GetVariable("isbarbtrain")) == 1) then
  isbarbtrain = true
end

if (isbarbtrain) then
  Execute("s;s;s;s;s;e;e;e;e;learn all")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="fleescript"
   match="^You flee head over heels\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Do NOT uncomment below
--SetVariable("istryingflee",0)

--reset skybot/basher targetting engage clock
SetVariable("lastengageclock",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^You focus all your thoughts on your spirits, summoning them to your aid\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--summon count start
SetVariable("spirit_in_room_count", 0)
EnableTrigger("call_spirit_trigger",true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   match="^You follow ([A-Za-z]+) (east|north|up|down|west|south)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("setleader "..Trim("%1"))
SetVariable("leader",Trim("%1"))
SetVariable("lastdir",Trim("%2"))
</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You forgot something\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("mem")</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You get slapped by a vine\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="warriorscript"
   match="^You give ([A-Za-z \,\.\-\']+) a solid punch in the face\.$"
   regexp="y"
   script="doCheckAssault"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isfighting",1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="parryscript"
   match="^You go back on the offensive\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautoparry")) == 1) then
  Send("parry")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You go to sleep\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You grunt in agony as inky black tentacles smack you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^You have (\d+)\((\d+)\) hit and (\d+)\((\d+)\) movement points\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charCurrentHP", %1)
SetVariable("charMaxHP", %2)
SetVariable("charCurrentMV", %3)
SetVariable("charMaxMV", %4)</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You have been blinded\!$"
   regexp="y"
   script="doCureBlind"
   send_to="12"
   sequence="100"
  >
  <send>--Note("auto cure blind")</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You have been kicked out of ([A-Za-z \,\.\-\']+) group\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",0)
Execute("splitoff;group")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="serverscript"
   match="^You have been playing for \d+ day\(s\), \d+ hour\(s\) and \d+ minute\(s\).$"
   name="playtime_trigger"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>buffsArr = {}
EnableTrigger("buffs_pattern",true)

xmlstr = CreateXMLMsg("CHARDATA","&lt;chardata name='@charname' charclass='@charClass' currenthp='@charCurrentHP' maxhp='@charMaxHP' currentmv='@charCurrentMV' maxmv='@charMaxMV' /&gt;")
--Note("xmlstr: "..xmlstr)
if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^You have no spells currently memorized\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("resetmem")
SetVariable("isMemmed",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^You have the power of voodoo\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charClass","Shaman")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^You hear a faint rustling\, then notice ([A-Z][a-z]+) arrive from (the )?(north|east|south|west|above|below)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))
--bandits swamp</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You hear a loud CRACK as your knee gives out, and you fall over\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You hover above the fray\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("islegendary"))==1) then
  Send("archery s 5 p 5 a 2")
else
  Send("archery s 3 p 5 a 1")
end</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You lose your connection with your wizard\'s eye\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("gt Wizard eye died")
Note("** Wizard eye died")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You lose your footing and fall over\, landing on your butt\!$&quot;"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dostand")</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^You lost concentration\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("lostconc")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You lost your concentration\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("lostconc")</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^You lost your concentration\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("lostconc")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You may use your divine powers\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note do like cast 'aura of command' if (GetVariable("charClass")=="Paladin")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You mercilessly fall down the staircase onto the cold, hard ground below\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Execute("doautostand")</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^You mess up the bandages\, causing ([A-Z][a-z]+) to wince in pain\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^You move aside quickly as ([A-Za-z \,\.\-\']+) attacks\!$"
   name="combatpattern24"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("pattern 24")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You must shoot AT someone\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isaimneeded",1)
SetVariable("isshootneeded",1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You need arrows to fire your bow\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("skybotoff")
SetVariable("isaimneeded",1)
SetVariable("isshootneeded",1)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You need to join the fight first\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isfighting",0)
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   match="^You now follow ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("setleader "..Trim("%1"))
--Execute("group")</send>
  </trigger>
  <trigger
   enabled="y"
   group="druidscript"
   match="^You pray to Zivilyn, but nothing happens\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--reclaim fail</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You quell the harrier inside you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--SetVariable("ishover",1)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You raise a level\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("score")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You rest your tired bones but stay aloft\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^You scout out the area (north|east|south|west|up|down)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>---Note("scout shit")</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^You see ([A-Z][a-z]+) hiding in the shadows"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkpktarget "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autotrain"
   match="^You see a slender elf here, cutting saplings to make them strong\."
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>doautotrain Druid</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You see nothing special\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isscan",1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You sense the protective magic about you fade away\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** ams? gone")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You sense the white in your vision disappear\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem detect good")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You shiver as the icy layer melts and falls from your skin\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** iceskin or veil of ice out")
Execute("buffrem iceskin")
Execute("buffrem veil of ice")

--require "socket"
--Note("veil wore: "..tostring(tonumber(round(socket.gettime(),3))))
--Note("diff: "..tostring(math.abs(tonumber(GetVariable("lastveiltime")) - tonumber(round(socket.gettime(),3)))))</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^You shiver slightly and the blood seems to run from your veins\.$"
   name="resist_pattern10"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffadd resist cold")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^You shudder slightly and begin to glow from within\.$"
   name="resist_pattern11"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffadd resist electricity")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoresists"
   match="^You shudder slightly and start to glow with a fiery light\.$"
   name="resist_pattern12"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffadd resist heat")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You simply fail to reach your mouth\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",1)
if (GetVariable("charClass")=="Barbarian") then
  Note("** drunk")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You sit and wait for your turn to see Lord Kyle\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You slip on the sheet of ice, falling to the ground and hurting your bum\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autoresists"
   match="^You smile as your skin turns more rubbery\.$"
   name="resist_pattern13"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffadd resist acid")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^You stagger about confused\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You stand up in the pile of hay\, a difficult task\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",1)</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You start shooting like mad\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isshootneeded",0)</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^You stop aiming at ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--reset skybot/basher targetting engage clock
SetVariable("lastengageclock",0)

SetVariable("isaimneeded",1)
SetVariable("isshootneeded",1)
</send>
  </trigger>
  <trigger
   enabled="y"
   group="leaderscript"
   match="^You stop following ([A-Za-z \,\.\-\']+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",0)
Execute("splitoff;group")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You stop meditating and stand up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autostandscript"
   match="^You stumble (up|down|north|east|south|west) and fall flat on your face\. How graceful\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Execute("doautostand")

if (tonumber(GetVariable("isbottrain")) == 1 and GetVariable("charclass") == "Scout" and "%1" == "north") then
  Send("south")
end

</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You stumble and fall down the barricade, banging your head on furniture\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You suddenly fall out of the water and slam painfully into floor!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^You suddenly notice that your body is in focus once again\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** blur out")
Execute("buffrem blur")</send>
  </trigger>
  <trigger
   enabled="y"
   group="charmed_script"
   match="^You suddenly see your master as an idiot who needs a beating\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Uncharmed")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You swing to a northern apex, becoming horizontal"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("jump")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You take a seat in mid-air\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You throw away your bloody bandages\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isbarbtrain = false

if (tonumber(GetVariable("isbarbtrain")) == 1) then
  isbarbtrain = true
end

if (isbarbtrain) then
  Execute("stand;learn all;lore claymore;bandself")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^You throw away your bloody bandages\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You trip and fall on your face, breaking off your attacks\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="warriorscript"
   match="^You try to assault them, but fail horribly\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
SetVariable("lastassaulttime",round(socket.gettime(),3))

--this isn't perfect since fail is 22-24 sec. cooldown vs. success (60 sec)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You try to stand up, but can't get your footing and fall over\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^You wake, and sit up\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding", 0)</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You wear ([A-z\s,'\-]+) about your body\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("conceal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You wince and spasm as terror invades your mind\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You wince as you mess up"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isbarbtrain = false

if (tonumber(GetVariable("isbarbtrain")) == 1) then
  isbarbtrain = true
end

if (isbarbtrain) then
  Send("band me")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="area_dmg"
   match="^You wither as a ray of sunlight engulfs you\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   match="^You\'re dead\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("tryingheal",0)
SetVariable("combatLines",0)</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You\'re feeling very merry at the moment\.\.\. \*hic\*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",1)
if (GetVariable("charClass")=="Barbarian") then
  Note("** drunk")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="fleescript"
   match="^You\'re not fighting\, why bother fleeing\?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Do NOT uncomment below
SetVariable("isfighting",0)</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^You\'re rip-roaring drunk\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdrunk",1)
if (GetVariable("charClass")=="Barbarian") then
  Note("** drunk")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^Your behaviour has been ([A-Za-z ]+).$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("charAlign","%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^Your blood ceases to boil and you feel calmer\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem boiling blood")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your casting is disrupted by the fighting\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("!");
Execute("lostconc")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your concentration is broken by the infernal wind that whips about you\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^Your detect invisibility wears off\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem detect invisibility")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your eyes cross and you stumble back\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Your eyes open and it was all a dream\. Or was it\?$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Execute("doautostand")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Your feet slip up on the ice\, you fall on to your butt\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="blazewight"
   match="^Your flesh burns as Blazewight, the fiery dracolich's fiery hands contact you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("checkareadmg "..Trim(GetVariable("charname")))</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^Your heart stops beating so fast\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buffrem tenacious heart")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your limbs freeze in place\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your lips move\, but no sound emerges\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="tickscript"
   match="^Your meditation finished, you put away your charms with a smile\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("memticks",0)
SetVariable("isHealbot", 0)
SetVariable("isdruidbot", 0)
SetVariable("ismagebot", 0)
SetVariable("charClass", "Shaman")
Execute("dotick;doautostand")

if (tonumber(GetVariable("isShamanbot"))==1 ) then
  Execute("mem;gheal")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^Your mind clears as you regain control over your instincts\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="healbot"
   match="^Your mind reels and you can\'t focus\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal")</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^Your muscle tense like they are ready to burst\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** burst ready")</send>
  </trigger>
  <trigger
   enabled="y"
   match="^Your punch hand is ready to lay into someone again\.$"
   regexp="y"
   script="doAutoPunch"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** punch is ready")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   match="^Your reeling mind somehow remembers \'([a-z\s]+)\' after your trip to tomorrow\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("temp vision: "..Trim("%1"))</send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^Your soul feels more unstable\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** NPP out")
Execute("buffrem negative plane protection")</send>
  </trigger>
  <trigger
   enabled="y"
   group="spelltracker"
   match="^Your spells$"
   regexp="y"
   script="resetSpell_List"
   send_to="12"
   sequence="100"
  >
  <send>--EnableTriggerGroup("spell_list",true) </send>
  </trigger>
  <trigger
   enabled="y"
   group="debuffs"
   match="^Your spirits diminish in power, but remain\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** amplify spirits out")
Execute("buffrem amplify spirits")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="tickscript"
   match="^Your studies complete\, you (close|put away) your (tablets|prayerbook|spellbook) with a smile\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("memticks",0)
Execute("dotick;doautostand")
if (tonumber(GetVariable("isHealbot"))==1 and Trim("%2") == "prayerbook") then
  Execute("mem;gheal")
elseif  (tonumber(GetVariable("isdruidbot"))==1 and Trim("%2") == "tablets") then
  Execute("fragoff;mem;gheal;refgroup")
elseif (tonumber(GetVariable("ismagebot"))==1 and Trim("%2") == "spellbook") then
  Execute("fragon;mem")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="scoutscript"
   match="^Your tension and focus finally burst in a flurry of attacks\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** bursted")</send>
  </trigger>
  <trigger
   group="barb_train"
   match="^Your vocal chords are a bit raw after your last scream, wait a while longer\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--battle cry cooldown</send>
  </trigger>
  <trigger
   enabled="y"
   group="bandscript"
   match="^Your wounds are already bandaged\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("blah")</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^Your wounds begin to heal\.$"
   regexp="y"
   script="doStartRegenTrack"
   send_to="12"
   sequence="100"
  >
  <send>--Note("begin regen track")</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^Your wounds stop healing\.$"
   regexp="y"
   script="doEndRegenTrack"
   send_to="12"
   sequence="100"
  >
  <send>--Note("hi")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^Yurak the minotaur charges into you and knocks you to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="shaman_script"
   match="^[A-Z][a-z]+(\s[A-Za-z\'\s]+)?cringes in terror\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
--NOTE this could be abused by enemy if they cringe

Execute("dispel 'monstrous mantle'")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^[A-Za-z] smiles as (he|she) finishes (his|her) meditation\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="tickscript"
   match="^[A-Za-z]+ (closes|puts away) (his|her) ([A-Za-z]+) with a content look on (his|her) face\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("dotick")</send>
  </trigger>
  <trigger
   enabled="y"
   group="rescuescript"
   match="^[\*]?(\&lt;[A-Za-z]+\&gt; )?([A-Za-z \,\.\-\']+) is lying here, (stunned|bleeding)\.$"
   name="combatpattern12"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isscan = false

if (tonumber(GetVariable("isscan")) == 1) then
  isscan = true
end

if (not isscan) then
  doCheckRescueTarget("attacker",Trim("%2"),12)
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^[\*]?(\&lt;[A-Za-z]+\&gt; )?(\(flying\) )?(General |King |Lady |Sir |Lord |Commander )?([A-Z][a-z]+)[A-Za-z \,\-\']* is (standing|sitting|resting|sleeping) here\."
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isscan = false
local scandir = GetVariable("scandir")
local count = GetVariable(scandir.."count")

if (tonumber(GetVariable("isscan")) == 1) then
  isscan = true
  if (isTargetInGroup("%4")) then
    count = count + 1
  end
  SetVariable(scandir.."count",count)
else
  Execute("checkpktarget "..Trim("%4"))
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^[\*]?(\&lt;[A-Za-z]+\&gt; )?(\(flying\) )?(General |King |Lady |Sir |Lord |Commander )?([A-Z][a-z]+)[A-Za-z \,\-\']* is here, resting comfortably on a clump of moss\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isscan = false
local scandir = GetVariable("scandir")
local count = GetVariable(scandir.."count")

if (tonumber(GetVariable("isscan")) == 1) then
  isscan = true
  if (isTargetInGroup("%4")) then
    count = count + 1
  end
  SetVariable(scandir.."count",count)
else
  Execute("checkpktarget "..Trim("%4"))
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="pkscript"
   match="^[\*]?(\&lt;[A-Za-z]+\&gt; )?(\(flying\) )?(General |King |Lady |Sir |Lord |Commander )?([A-Z][a-z]+)[A-Za-z \,\-\']* is stretched out on a wooden bench\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isscan = false
local scandir = GetVariable("scandir")
local count = GetVariable(scandir.."count")
local ispk = false


if (tonumber(GetVariable("isscan")) == 1) then
  isscan = true
  if (isTargetInGroup("%4")) then
    count = count + 1
  end
  SetVariable(scandir.."count",count)
else
  Execute("checkpktarget "..Trim("%4"))
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rescuescript"
   match="^[\*]?(\&lt;[A-Za-z]+\&gt; )?(\(flying\) )?(King |Lady |Sir |Lord |Commander )?([A-Z][a-z]+)([A-Za-z \,\-\']*) is (sitting|standing|sleeping|resting) here, fighting ([A-Za-z \,\.\-\']+)\."
   name="combatpattern3"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local isscan = false
local scandir = GetVariable("scandir")
local count = GetVariable(scandir.."count")

if (tonumber(GetVariable("isscan")) == 1) then
  isscan = true
  if (isTargetInGroup("%4")) then
    count = count + 1
  end
  SetVariable(scandir.."count",count)
end

if (isscan == false) then
  if (Trim("%4") == "An" and #Trim("%5") &gt; 0) then
    doCheckRescueTarget(Trim("%5"),Trim("%7"),3)
    --Note("target: "..Trim("%5"))
  else
    doCheckRescueTarget(Trim("%4"),Trim("%7"),3)
  end
  Execute("checkpktarget "..Trim("%4"))
end</send>
  </trigger>
  <trigger
   group="eq_script"
   match="^\&lt;([a-z ]+)\&gt;\s+(.+)$"
   name="worneq_trigger"
   regexp="y"
   script="parseEq"
   send_to="12"
   sequence="100"
  >
  <send>--This function will parse eq to set weapon/held variables</send>
  </trigger>
  <trigger
   expand_variables="y"
   match="^\s*([A-Z][a-z]+)(\s+[A-Z][a-z]+)?(\s+[A-Z][a-z]+)?\s*$"
   name="whob_line"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") ~= "Mortals") then
--  Note("person 1: "..Trim("%1")..", person 2: "..Trim("%2")..", person3: "..Trim("%3"))
  if (#Trim("%1") &gt; 0) then
    table.insert(whonames,Trim("%1") )
  end
  if (#Trim("%2") &gt; 0) then
    table.insert(whonames,Trim("%2") )
  end
  if (#Trim("%3") &gt; 0) then
    table.insert(whonames,Trim("%3") )
  end

end</send>
  </trigger>
  <trigger
   expand_variables="y"
   match="^\s\s\s\s([a-z0-9 \(\)]+)(\s+\[([0-9]+\shrs|permanent|1 hour)\])?$"
   name="buffs_pattern"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("buff: "..Trim("%1"))
table.insert(buffsArr, Trim("%1"))
--Note("buffsArr: "..#buffsArr)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^a spectral minion reaches forth and touches you with its paralyzing touch!$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autofill"
   match="^calm sense that flows this entire area. A little pool of crystal clear"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>doautofill = tonumber(GetVariable("doautofill"))

if (doautofill==1) then
  Execute("fill @drink pool")
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autostandscript"
   match="^everywhere\. You are knocked back a few feet, and fall to the ground\.$"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>dostand</send>
  </trigger>
  <trigger
   enabled="y"
   group="speedwalk"
   match="^near the path here where the grass grows shorter. A large apple tree"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
Note("** Speedwalks from Kender Bard**********")
Note("** Cloud Kingdom : bard2ck")
Note("** Delphon       : bard2d")
Note("** Eastern Reach : bard2er")
Note("** Dwarven       : bard2dk")
Note("** Silvi         : bard2silvi")
Note("** Neraka        : bard2n")
Note("** Balifor       : bard2b")
Note("** Twendle       : bard2twe")
Note("** Celes. Valley : bard2cv")
</send>
  </trigger>
</triggers>

<!-- aliases -->

<aliases
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >
  <alias
   match="^(?:forcegh|fgh)$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--only for testing purposes
SetVariable("isgheal",1)</send>
  </alias>
  <alias
   match="^(?:gsk)(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2") &gt; 0) then
  Execute("cast 'ghostskin' "..Trim("%2"))
else
  Execute("cast 'ghostskin' me")
end</send>
  </alias>
  <alias
   match="^(?:hlb)(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2") &gt; 0) then
  Execute("cast 'heal boost' "..Trim("%2"))
else
  Execute("cast 'heal boost' me")
end</send>
  </alias>
  <alias
   match="^(?:loot|lc)( ([A-Za-z\s\.0-9]+))?$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  pkLoot(Trim("%1"))
else
  pkLoot("corpse")
end
</send>
  </alias>
  <alias
   match="^(?:regendurstatus|regdurstatus|regstatus|regenstatus)$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Regen interval : "..GetVariable("regen_threshhold").." seconds")
</send>
  </alias>
  <alias
   match="^(?:regendur|regdur)(\s+([0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2") &gt; 0) then
  SetVariable("regen_threshhold",Trim("%2"))
end

Execute("regendurstatus")</send>
  </alias>
  <alias
   match="^(?:regen|reg)(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2") &gt; 0) then
  Execute("cast 'regenerate' "..Trim("%2"))
else
  Execute("cast 'regenerate' me")
end</send>
  </alias>
  <alias
   match="^(?:ritv|rit|rtv)(\s+([A-Za-z]+))$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("cast 'ritual voyage' "..Trim("%2"))</send>
  </alias>
  <alias
   match="^(?:rotf)(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2") &gt; 0) then
  Execute("cast 'rotting flesh' "..Trim("%2"))
else
  Execute("cast 'rotting flesh' me")
end</send>
  </alias>
  <alias
   match="^([0-9])([0-9])(\s+(.+))?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if ("%1" == "%2") then
  if (string.len("%4") &gt; 0) then
    Execute("oone "..GetVariable("char"..string.sub("%1",1,1)).." %4")
  else
    if (GetVariable("char%1")~= nil) then
      Note("** Variable char%1: "..GetVariable("char%1"))
    else
      Note("** Variable char%1".." does not exist.")
    end
  end
end</send>
  </alias>
  <alias
   match="^([0-9][0-9]?)gt(\s+(.+))?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2")&gt;0) then
  if (#Trim("%3") &gt; 0) then
    Execute("oone "..GetVariable("char"..string.sub("%1",1,1)).." gt "..Trim("%3"))
  else
    if (GetVariable("char%1")~= nil) then
      Note("** Variable char%1: "..GetVariable("char%1"))
    else
      Note("** Variable char%1".." does not exist.")
    end
  end
else
  Note("** Syntax:  1gt &lt;message&gt;")
  Note("** Syntax: 11gt &lt;message&gt;")
end --endif (#Trim("%2")&gt;0)</send>
  </alias>
  <alias
   script="doJet"
   match="^(jet|rrr)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--rrr is joe pref</send>
  </alias>
  <alias
   match="^(zzap|ttt)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Disconnect()

--ttt is joe pref</send>
  </alias>
  <alias
   match="^111(\s+([0-9\.A-Za-z\*\' ]+))?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%2")) &gt; 0) then
  Execute("oall %2")
end
</send>
  </alias>
  <alias
   match="^5head$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>say selur ihdob;e</send>
  </alias>
  <alias
   match="^\!brief$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot brief")</send>
  </alias>
  <alias
   match="^\!gtoff$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot gtoff")</send>
  </alias>
  <alias
   match="^\!gton$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot gton")</send>
  </alias>
  <alias
   match="^\!help$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot help")</send>
  </alias>
  <alias
   match="^\!mark$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot mark")</send>
  </alias>
  <alias
   match="^\!recent$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot recent")</send>
  </alias>
  <alias
   match="^\!stat$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot stat")</send>
  </alias>
  <alias
   match="^\!unmark$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot unmark")</send>
  </alias>
  <alias
   match="^\!version$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot version")</send>
  </alias>
  <alias
   match="^\!who$"
   enabled="y"
   group="lorebot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note("** Lorebot who")</send>
  </alias>
  <alias
   match="^a(?:uto)?mem(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautomem")) == 1) then
    Note("** Auto-mem       : Enabled")
  else
    Note("** Auto-mem       : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautomem",1)
  Note("** Auto-mem       : Enabled")
else
  SetVariable("isautomem",0) 
  Note("** Auto-mem       : Disabled")
end </send>
  </alias>
  <alias
   match="^a(?:uto)?rest(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautorest")) == 1) then
    Note("** Auto-rest      : Enabled")
  else
    Note("** Auto-rest      : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautorest",1)
  Note("** Auto-rest      : Enabled")
else
  SetVariable("isautorest",0) 
  Note("** Auto-rest      : Disabled")
end </send>
  </alias>
  <alias
   match="^a(?:uto)fill(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("doautofill")) == 1) then
    Note ("** Water Auto-fill: Enabled")
  else
    Note ("** Water Auto-fill: Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("doautofill",1)
  Note ("** Water Auto-fill: Enabled")
else
  SetVariable("doautofill",0) 
  Note ("** Water Auto-fill: Disabled")
end </send>
  </alias>
  <alias
   match="^aa$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>aim @target;shoot auto</send>
  </alias>
  <alias
   match="^aa(\s+[A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute ("aim %1;shoot auto")
SetVariable ("target", Trim("%1"))
</send>
  </alias>
  <alias
   match="^aaa$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>volley</send>
  </alias>
  <alias
   match="^aftertick10$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>DoAfterSpecial(10,'doTenAfter',sendto.execute)
</send>
  </alias>
  <alias
   match="^aftertick3$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>DoAfterSpecial(3,'doThreeAfter',sendto.execute)
</send>
  </alias>
  <alias
   match="^amist$"
   enabled="y"
   group="mage_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Black Robe") then
  Execute("oone Villa cast 'acid mist'")
else
  Execute("doautostand;cast 'acid mist'")
end</send>
  </alias>
  <alias
   match="^arc$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>archery s 5 p 3 a 1</send>
  </alias>
  <alias
   match="^ashoot( [0-9A-Za-z\'\-\.]+)$"
   enabled="y"
   expand_variables="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("aim "..Trim("%1")..";shoot auto")</send>
  </alias>
  <alias
   match="^ass(off|on)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1")=="on") then
  SetVariable("isautoassist",1)
  Execute("assstatus")
elseif (Trim("%1")=="off") then
  SetVariable("isautoassist",0)
  Execute("assstatus")
end</send>
  </alias>
  <alias
   match="^assault(on|off|status)$"
   enabled="y"
   group="warriorscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("isautoassault",1)
  Execute("assaultstatus")
elseif (Trim("%1") == "off") then
  SetVariable("isautoassault",0)
  Execute("assaultstatus")
elseif (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoassault"))==1) then
    Note("** Auto-Assault   : Enabled")
  else
    Note("** Auto-Assault   : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^assiststatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("assstatus")</send>
  </alias>
  <alias
   match="^assstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>isautoassist= tonumber( GetVariable("isautoassist"))

if (isautoassist==1) then
  Note("** Auto-assist    : Enabled")
else
  Note("** Auto-assist    : Disabled")
end </send>
  </alias>
  <alias
   match="^autostand(on|off|status)$"
   enabled="y"
   group="autostandscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1")=="off") then
  SetVariable("autostand", 0)
  Execute("autostandstatus")
elseif (Trim("%1")=="on") then
  SetVariable("autostand", 1)
  Execute("autostandstatus")
elseif (Trim("%1")=="status") then
  if (tonumber(GetVariable("autostand"))==1) then
    Note("** Auto-Stand     : Enabled")
  else
    Note("** Auto-Stand     : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^autotrain(on|off|status)$"
   enabled="y"
   group="autotrain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("isautotrain",1)
  Execute("autotrainstatus")
elseif (Trim("%1") == "off") then
  SetVariable("isautotrain",0)
  Execute("autotrainstatus")
elseif (Trim("%1") == "status") then
  isautotrain = tonumber(GetVariable("isautotrain"))

  if (isautotrain == 1) then
    Note("** Auto-Train     : Enabled")
  else
    Note("** Auto-Train     : Disabled")
  end 
end
</send>
  </alias>
  <alias
   match="^b(\s+[A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  Execute("swoop "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^b1( .+)?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  if (IsSocketConnected() and GetVariable("charClass")~="Warrior") then
    Execute("oone Sullivan bash "..Trim("%1"))
  else
    Execute("doautostand;bash "..Trim("%1"))
  end
else
  Note("** Syntax: b1 &lt;target&gt;")
end</send>
  </alias>
  <alias
   match="^b2( .+)$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  if (IsSocketConnected() and GetVariable("charClass")~="Warrior") then
    Execute("oone Tola bash "..Trim("%1"))
  else
    Execute("doautostand;bash "..Trim("%1"))
  end
else
  Note("** Syntax: b2 &lt;target&gt;")
end</send>
  </alias>
  <alias
   match="^b2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;w;w;w;w;w;w;s;s;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^b2bs$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="s;w;w;w;s;w;w;w;s;s;s;e;s;s;s;e;s;e;e;e;e;s;n;w;w;w"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^b2crytic$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;e;e;n;e;n;n;n;e;e;n;e;s;e;e;e;e;e;s;s;e;s;e;s;w;w;s;s;e;e;e;n;e;e;n;e")
else
  Execute("fade n;fade n;fade e;fade e;fade n;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade e;fade s;fade w;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^b2dp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;n;n;n;n;n;n;e;n;n;w;n;n;n;n;n;n;n;w;n;n;n;n;n;w;w;n;n;n;w;w;n;n;e;e;n;n;n;e;n;e;n;e;u;n;d;e;e;e;e;open gate e;e;close gate west;e;e;e;e")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade n;fade e;fade n;fade e;fade u;fade n;fade d;fade e;fade e;fade e;fade e;open gate e;fade e;close gate west;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^b2f$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;n;n;n;n;n;n;e;n;n;w;n;n;n;n;n;n;n;e;e;e;n;n;n;n;n;n")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^b2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;n;w;w;w;w;s;s;s;w;w;w;u;n;n;n;n;n;w;w;w;w;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade u;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^b2shadow$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;w;w;w;s;s;s;s;s;e;e;e;e;s;e;s;s;w;w;w;n;n;n;n;n;n;n;n;n;e;e;n;e;n;u")
else
  Execute("fade s;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade s;fade e;fade s;fade s;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade n;fade u")
end</send>
  </alias>
  <alias
   match="^b3( .+)?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  if (IsSocketConnected() and GetVariable("charClass")~="Warrior") then
    Execute("oone Annabellee bash "..Trim("%1"))
  else
    Execute("doautostand;bash "..Trim("%1"))
  end
else
  Note("** Syntax: b3 &lt;target&gt;")
end</send>
  </alias>
  <alias
   match="^bandall$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isbandallgood",0)
SetVariable("istryingbandall",1)
Send("group")</send>
  </alias>
  <alias
   match="^bandc$"
   enabled="y"
   group="charmy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("order "..GetVariable("charmy1").." rest")
Send("band "..GetVariable("charmy1"))
</send>
  </alias>
  <alias
   match="^bandself$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("rest;remove compass;hold compass;recup;band me")</send>
  </alias>
  <alias
   match="^barbpk( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("charge "..Trim("%1"))
else
  Send("charge")
end
Execute("assail")</send>
  </alias>
  <alias
   match="^barbtrainstatus$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isbarbtrain")) == 1) then
  Note("** Barb train     : Enabled")
elseif (tonumber(GetVariable("isbarbtrain")) == 0) then
  Note("** Barb train     : Disabled")
end</send>
  </alias>
  <alias
   match="^bard2b$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;e;e;e;e;e;e;s;s;s;s;s;s")
else
  Execute("fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^bard2ck$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;d;w;s;s;w;w;s;w;w;w;w;w;n;d;s;s;s;e;s;s;s;s;e;e;e;s;s;e;n;n;e;n;e;e;n;n;n;e;e;n;e;u;s;u;s;e;u;e;u;n")
else
  Execute("fade s;fade s;fade s;fade s;fade d;fade w;fade s;fade s;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade n;fade d;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade s;fade e;fade n;fade n;fade e;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade u;fade s;fade u;fade s;fade e;fade u;fade e;fade u;fade n")
end</send>
  </alias>
  <alias
   match="^bard2cv$"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;w;n;w;n;n;n;n;n;n;n;w;w;n;n;w;n;n;n;n;n;n;n;n;n;u;u;n;n;n;n;e")
else
  Execute("fade s;fade s;fade w;fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade u;fade u;fade n;fade n;fade n;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^bard2d$"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;n;e;e;e;e;n;n;w;w;w;w;w;w;w;w;w;w;w;w;w;w;s;s;s;s;s;open gate east;e;close gate w;e;u")
else
  Execute("fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;open gate east;fade e;close gate w;fade e;fade u")
end</send>
  </alias>
  <alias
   match="^bard2dk$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;w;n;w;n;n;n;n;n;n;n;n;n;e;e;n;u;e;u;e;u;u;u;n")
else
  Execute("fade s;fade s;fade w;fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade n;fade u;fade e;fade u;fade e;fade u;fade u;fade u;fade n")
end</send>
  </alias>
  <alias
   match="^bard2er$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;n;e;e;e;e;s;s;s;s;s;e;e;e")
else
  Execute("fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^bard2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;n;n;u;n;n;n;w;n;n;w;w;w;w;w")
else
  Execute("fade w;fade w;fade n;fade n;fade u;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^bard2silvi$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;d;e;n;e;e;e;e;e;e;u;s;s;d;e;s;s;s;e;e;e;e;e")
else
  Execute("fade s;fade s;fade s;fade s;fade d;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade u;fade s;fade s;fade d;fade e;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^bard2twe$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;d;s;s;s;w;w;w;w;s;w;w;s;s;s;s;d;w;s;s;w;w;w;w;w;w;s;s;s;w;w;w;w;s")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade d;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade s;fade d;fade w;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="^bark(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("doautostand;cast 'barksk' %2")
else
  Execute("doautostand;cast 'barksk' me")
end
</send>
  </alias>
  <alias
   match="^barr(n|e|s|w|d|u)$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "n") then
  Execute("cast 'barrier' north")
elseif (Trim("%1") == "e") then
  Execute("cast 'barrier' east")
elseif (Trim("%1") == "s") then
  Execute("cast 'barrier' south")
elseif (Trim("%1") == "w") then
  Execute("cast 'barrier' west")
elseif (Trim("%1") == "u") then
  Execute("cast 'barrier' up")
elseif (Trim("%1") == "d") then
  Execute("cast 'barrier' down")
end
</send>
  </alias>
  <alias
   match="^bash(on|off)$"
   enabled="y"
   group="warriorscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  if (GetVariable("charClass") == "Warrior") then
    SetVariable("isautobash",1)
    Execute("bashstatus")
  else
    SetVariable("isautobash",0)
    Note("** bashon only for warrior class.")
  end
elseif (Trim("%1") == "off") then
  SetVariable("isautobash",0)
  Execute("bashstatus")
end</send>
  </alias>
  <alias
   match="^bashstatus$"
   enabled="y"
   group="warriorscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (GetVariable("isautobash") ~= nil) then
  if (tonumber(GetVariable("isautobash")) == 1) then
    Note("** Auto-bash      : Enabled")
  elseif (tonumber(GetVariable("isautobash")) == 0) then
    Note("** Auto-bash      : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^bb$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  <send>break enchanted.wand</send>
  </alias>
  <alias
   match="^bcry$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Barbarian") then
    Execute("oone Kog battle cry")
  else
    Execute("doautostand")
    Send("battle cry")
  end</send>
  </alias>
  <alias
   match="^beforetick3$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>DoAfterSpecial(57,'doThreeBefore',sendto.execute)

require "wait"
require "wait"
wait.make (function ()

  for i = 60, 0, -1 do
    SetStatus (string.format ("Tick in %i seconds", math.floor(GetTimerInfo ("ticktimer", 13))))
    ParseCommand()
   -- Note("in beforetick3: "..i)

    wait.time (1)
  end -- for

   SetStatus ("Ready")

end) </send>
  </alias>
  <alias
   match="^bh(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Send("cast 'burnin hand' %2")
else
  Send("cast 'burnin hand'")
end
</send>
  </alias>
  <alias
   match="^blacken2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;d;n;d;n;n;e;e;e;n;e;n;n;n;n;n;e;e;e")
else
  Execute("fade e;fade n;fade d;fade n;fade d;fade n;fade n;fade e;fade e;fade e;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^blur(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'blur' %2")
else
  Execute("cast 'blur' me")
end
</send>
  </alias>
  <alias
   match="^blurme(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   group="efreeti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get iron.flask "..GetVariable("container"))
Execute("empty iron.flask")

if (string.len("%2") &gt; 0) then
  Execute("order efreeti cast 'blur' %2")
else
  Execute("order efreeti cast 'blur' "..GetVariable("charname"))
end

Execute("capture efreeti")
Execute("put iron.flask "..GetVariable("container"))</send>
  </alias>
  <alias
   match="^botson$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() ) then
  Execute("oone Hairesach dboton")
  Execute("oone Hairesach fragon")
  Execute("oone Hairesach flygroupon")
  Execute("oone Casey mboton")
  Execute("oone Casey fragon")
  Execute("oone Casey flygroupon")
  Execute("oone Monika hboton")
  Execute("oone Monika healbad")
  Execute("oone Monika healp")
  Execute("oone Domahnugnuts hboton")
  Execute("oone Domahnugnuts healbad")
  Execute("oone Domahnugnuts healg")
  Execute("oone Savarin skyboton")
  Execute("oone Sullivan rescueon")
  Execute("oone Sullivan assonon")
  Execute("oone Sullivan bashon")
  Execute("oone Annabellee rescueon")
  Execute("oone Annabellee assonon")
  Execute("oone Annabellee bashon")
  Execute("oone Tola rescueon")
  Execute("oone Tola assonon")
  Execute("oone Tola bashon")
  Execute("oone Gobarian rescueon")
else
  Note("** You are not connect to server.")
end</send>
  </alias>
  <alias
   match="^bowup$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("Tank", "XXX")
Execute ("rem @weap1;rem @off;get @bow @container;hold @bow;put @weap1 @container;put @weap2 @container")</send>
  </alias>
  <alias
   match="^bread(\s+[A-Za-z0-9\.\-\'\,\s]+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get 3*bread @container;give 3*bread %1")</send>
  </alias>
  <alias
   match="^brew(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautobrew")) == 1) then
    Note("** Auto-brew      : Enabled")
  else
    Note("** Auto-brew      : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautobrew",1)
  Note("** Auto-brew      : Enabled")
else
  SetVariable("isautobrew",0) 
  Note("** Auto-brew      : Disabled")
end </send>
  </alias>
  <alias
   match="^bs( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--enhanced per request from eddiex on 20200307
if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end

if (#Trim("%1") == 0 and #Trim(GetVariable("stabtarget")) &gt; 0) then
  Send("backstab "..GetVariable("stabtarget"))
elseif (#Trim("%1") &gt; 0) then
  Send("backstab "..Trim("%1"))
  SetVariable("stabtarget",Trim("%1"))
end

</send>
  </alias>
  <alias
   match="^bsd( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;down alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^bse( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;east alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^bsn( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;north alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^bss( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;south alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^bsu( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;up alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^bsw( .+)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
SetVariable("stabtarget",Trim("%1"))

Execute("sneak;west alone")

Send("backstab "..Trim("%1"))
</send>
  </alias>
  <alias
   match="^btrain(on|off|status)$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "off") then
  SetVariable("isbarbtrain",0)
  Execute("barbtrainstatus")
  EnableTriggerGroup("barb_train",false)
elseif (Trim("%1") == "on") then
  SetVariable("isbarbtrain",1)
  Execute("barbtrainstatus")
  EnableTriggerGroup("barb_train",true)
elseif (Trim("%1")=="status") then
  Execute("barbtrainstatus")
end</send>
  </alias>
  <alias
   script="addBuff"
   match="^buffadd(\s+[A-Za-z0-9\(\)\s]+)$"
   enabled="y"
   group="autoresists"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--calls arctic.lua script function addBuff()</send>
  </alias>
  <alias
   script="removeBuff"
   match="^buffrem(\s+[A-Za-z0-9\(\)\s]+)$"
   enabled="y"
   group="autoresists"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--calls arctic.lua script function removeBuff()</send>
  </alias>
  <alias
   match="^buffs(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautobuff")) == 1) then
    Note("** Auto-buffs     : Enabled")
  else
    Note("** Auto-buffs     : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautobuff",1)
  Note("** Auto-buffs     : Enabled")
else
  SetVariable("isautobuff",0) 
  Note("** Auto-buffs     : Disabled")
end </send>
  </alias>
  <alias
   match="^burst$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Scout") then
    Execute("oone Moinier burst")
  else
    Execute("doautostand")
    Send("burst")
  end</send>
  </alias>
  <alias
   match="^burst(on|status|off)$"
   enabled="y"
   expand_variables="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoburst")) == 1) then
    Note("** Auto-burst     : Enabled")
  else
    Note("** Auto-burst     : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautoburst",1)
  Note("** Auto-burst     : Enabled")
else
  SetVariable("isautoburst",0) 
  Note("** Auto-burst     : Disabled")
end </send>
  </alias>
  <alias
   match="^bws$"
   enabled="y"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>breath;wake;st</send>
  </alias>
  <alias
   match="^carve(on|off|status)$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") =="on") then
  SetVariable("isautocarve",1)
  Execute("carvestatus")
elseif (Trim("%1") =="off") then
  SetVariable("isautocarve",0)
  Execute("carvestatus")
elseif (Trim("%1") =="status") then
  if (tonumber(GetVariable("isautocarve"))==1) then
    Note("** Auto-carve     : Enabled")
  else
    Note("** Auto-carve     : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^cb$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("squeeze eyedropper")</send>
  </alias>
  <alias
   match="^ce$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>cast 'conjure ele'</send>
  </alias>
  <alias
   match="^cfood$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("doautostand;cast 'create food'")</send>
  </alias>
  <alias
   match="^cget$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>get all.component imp</send>
  </alias>
  <alias
   match="^cgt(\s.+)$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charname = GetVariable("charname")
local xmlstr = CreateXMLMsg("NOTIFYALL","&lt;target /&gt;&lt;message&gt;**"..charname..": "..Trim("%1").."&lt;/message&gt;")
--Note("xmlstr: "..xmlstr)
if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
else
  Note("** Not connected to clan server.")
end</send>
  </alias>
  <alias
   match="^chargeitb( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("charge "..Trim("%1")..";into the breach")
end</send>
  </alias>
  <alias
   script="checkAreaDmg"
   match="^checkareadmg( [A-Z][a-z]+)$"
   enabled="y"
   group="area_dmg"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^checkip$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
local myip = socket.dns.toip(socket.dns.gethostname())
Note("my ip: "..myip..", hostname: "..socket.dns.gethostname())</send>
  </alias>
  <alias
   script="checkPKTarget"
   match="^checkpktarget( [A-Z][a-z]+)$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note calls arctic.lua checkPKTarget() method</send>
  </alias>
  <alias
   match="^ck2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;d;w;d;w;n;d;n;d;w;s;w;w;s;s;s;w;w;s;w;s;s;w;n;n;w;w;w;n;n;n;n;w;n;n;n;u;s;e;e;e;e;e;n;e;e;n;n;e;u;n;n;n;n")
else
  Execute("fade s;fade d;fade w;fade d;fade w;fade n;fade d;fade n;fade d;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade w;fade s;fade s;fade w;fade n;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade u;fade s;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade n;fade n;fade e;fade u;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^ck2t$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;d;w;d;w;n;d;n;d;w;s;w;w;s;s;s;w;w;s;w;s;s;w;n;n;w;w;w;n;n;n;n;w;n;n;n;u;s;w;w;d;w;w;w;u;n;w;w;w;w;w;w;w")
else
  Execute("fade s;fade d;fade w;fade d;fade w;fade n;fade d;fade n;fade d;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade w;fade s;fade s;fade w;fade n;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade u;fade s;fade w;fade w;fade d;fade w;fade w;fade w;fade u;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^cl(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'call light' %2")
else
  Execute("cast 'call light'")
end
</send>
  </alias>
  <alias
   script="closeSocket"
   match="^closesocket$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^coc(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'con o cold' %2")
else
  Execute("cast 'con o cold'")
end
</send>
  </alias>
  <alias
   match="^commune(on|off|status)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautocommune")) == 1) then
    Note("** Auto-commune   : Enabled")
  else
    Note("** Auto-commune   : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautocommune",1)
  Note("** Auto-commune   : Enabled")
else
  SetVariable("isautocommune",0) 
  Note("** Auto-commune   : Disabled")
end </send>
  </alias>
  <alias
   match="^comploot(on|off|status)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "off") then
  SetVariable("iscomploot",0)
  Execute("complootstatus")
elseif (Trim("%1") == "on") then
  SetVariable("iscomploot",1)
  Execute("complootstatus")
elseif (Trim("%1") == "status") then
  if (tonumber(GetVariable("iscomploot"))==1) then
    Note("** Component loot : Enabled")
  else
    Note("** Component loot : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^compsoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup("spellcomps",false)
Note("** Component subs : Disabled")</send>
  </alias>
  <alias
   match="^compson$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup("spellcomps",true)
Note("** Component subs : Enabled")</send>
  </alias>
  <alias
   match="^cone(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'con o cold' %2")
else
  Execute("cast 'con o cold'")
end
</send>
  </alias>
  <alias
   match="^connjoe$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("testconnect 52.88.158.34 3000")</send>
  </alias>
  <alias
   match="^connserver$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>require "socket"
if (socket.dns.gethostname()=="NORMSTORM") then
  Execute("testconnect 52.35.41.51 3000")
else
  Execute("testconnect 52.35.41.51 3000")
end</send>
  </alias>
  <alias
   match="^connskulls$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("testconnect www.fourskulls.org 3000")</send>
  </alias>
  <alias
   match="^cput$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>put all.component imp</send>
  </alias>
  <alias
   match="^crit( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("cast 'cure critical' "..Trim("%1"))</send>
  </alias>
  <alias
   match="^crit(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("doautostand;cast 'cure crit' %2")
else
  Execute("doautostand;cast 'cure crit'")
end
</send>
  </alias>
  <alias
   match="^crow$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>quell owl;inst crow;scavenge</send>
  </alias>
  <alias
   match="^crytic2b$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;w;w;s;w;w;w;n;n;e;e;n;w;n;w;n;n;w;w;w;w;w;n;w;s;w;w;s;s;s;w;s;w;w;s;s")
else
  Execute("fade w;fade s;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade w;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^crytic2er$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;w;w;s;w;w;w;n;n;e;e;n;w;n;w;n;n;w;w;w;w;w;n;w;s;w;w;s;s;s;w;s;e")
else
  Execute("fade w;fade s;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade w;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade s;fade e")
end</send>
  </alias>
  <alias
   match="^cskies$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Hairesach cskies")
  else
    Execute("doautostand;cast 'clear skies'")
  end</send>
  </alias>
  <alias
   match="^ct2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;s;s;s;e;n;e;n;e;e;n;e;e;n;n;n;n;e;n;e")
else
  Execute("fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade n;fade e;fade n;fade e;fade e;fade n;fade e;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^ctest$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local speedwalk = "s;s;e;e;e;e;e;e;e;n;n;n;n;n;n;e;e;e;e;e;e"
Note(speedwalkToFadewalk(speedwalk))</send>
  </alias>
  <alias
   match="^cul(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'cure light' %2")
else
  Execute("cast 'cure ligh' me")
end
</send>
  </alias>
  <alias
   match="^culi( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("cast 'cure light' "..Trim("%1"))</send>
  </alias>
  <alias
   match="^cult(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'cultiv' %2")
else
  Execute("cast 'cultiv' ")
end
</send>
  </alias>
  <alias
   match="^cures?(off|on)$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "off") then
  SetVariable("isCureOn",0)
  Note("** Cure serious   : Disabled")
elseif (Trim("%1") == "on") then
  SetVariable("isCureOn",1)
  Note("** Cure serious   : Enabled")
end</send>
  </alias>
  <alias
   match="^cuse( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("cast 'cure seri' me")
else
  Execute("cast 'cure serious' "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^cv2bard$"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;s;s;s;d;d;s;s;s;s;s;s;s;s;s;e;s;s;e;e;s;s;s;s;s;s;s;e;s;e;e;n;n")
else
  Execute("fade w;fade s;fade s;fade s;fade s;fade d;fade d;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade e;fade e;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^cw$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>

if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Hairesach cw")
  else
    Execute("doautostand")
    Send("cast 'constant wind'")
  end</send>
  </alias>
  <alias
   match="^d2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("d;w;open gate west;w;close gate e;n;n;n;n;n;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;w;w;w;w;s;s;s;w")
else
  Execute("fade d;fade w;open gate west;fade w;close gate e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^d2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("d;w;w;n;n;n;n;n;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;w;w;w;w;s;s;s;w;w;w;u;n;n;n;n;n;w;w;w;w;w")
else
  Execute("fade d;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade u;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^d2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("d;w;open gate west;w;close gate e;n;n;n;n;n;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;w;w;w;w;s;s;s;w;w;w;u;n;n;n;n;n;w;w;w;w;w")
else
  Execute("fade d;fade w;open gate west;fade w;close gate e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade u;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^d2train$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open grate;d;s;s;w;w;s;learn all;n;e;e;n;n;open grate;u")
else
  Execute("open grate;fade d;fade s;fade s;fade w;fade w;fade s;learn all;fade n;fade e;fade e;fade n;fade n;open grate;fade u")
end</send>
  </alias>
  <alias
   match="^da(\s+[A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  Execute("drop all."..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^dargaard2gorm$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;s;s;e;s;s;s;s;s;e;s;e;s"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^dargaard2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;n;w;n;n;e;e;n;n;n;w;n;n;e;e;s;s;s;s;s;e;e;e;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^dargaard2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;n;w;n;n;e;e;n;n;n;w;n;n;n;n;n;n;w;w;s;w;w;w;s;w;w;w;w;w;w;w;w;s;s;w"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^darken2s$"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;n;n;e;e;n;n;n;w;w;w;w;w;n;n;n;e;e;n;e;n")
else
  Execute("fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade n")
end</send>
  </alias>
  <alias
   match="^dbotoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdruidbot",0)
Execute("dbotstatus")</send>
  </alias>
  <alias
   match="^dboton$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("endheal;endstone")
SetVariable("isdruidbot",1)
SetVariable("isShamanbot",0)
SetVariable("isHealbot",0)
SetVariable("isskybot",0)
SetVariable("ismagebot",0)
SetVariable("isautocommune",1)
SetVariable("isautobrew",0)
SetVariable("isautoscribe",0)
SetVariable("isautoassist",0)
SetVariable("isautofrag",0)
SetVariable("isautotrain",1)
SetVariable("isautorest",1)
SetVariable("isautobuff",1)
SetVariable("isautostand",1)
SetVariable("isflygroup",1)
SetVariable("fademode",0)
Execute("reclaimoff;stoneg;dbotstatus;trainoff;healg;automemon")</send>
  </alias>
  <alias
   match="^dbotstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("communestatus;autoreststatus;autostandstatus;brewstatus;scribestatus;buffsstatus;autotrainstatus;reclaimstatus;stonestatus")
if (tonumber(GetVariable("stonemain"))==1) then
  Note("** Stoner mode    : Main")
else
  Note("** Stoner mode    : Group")
end
if (tonumber(GetVariable("isdruidbot"))==1) then
  Note("** Druid bot      : Enabled")
else
  Note("** Druid bot      : Disabled")
end
Note("** tryingstone    : "..tostring(GetVariable("tryingstone")))</send>
  </alias>
  <alias
   match="^dd$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("pd")</send>
  </alias>
  <alias
   match="^debugoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdebug",0)
Execute("debugstatus")</send>
  </alias>
  <alias
   match="^debugon$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdebug",1)
Execute("debugstatus")</send>
  </alias>
  <alias
   match="^debugstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isdebug")) == 1) then
  Note("** Debug-mode     : Enabled")
elseif (tonumber(GetVariable("isdebug")) == 0) then
  Note("** Debug-mode     : Disabled")
end</send>
  </alias>
  <alias
   script="decrement"
   match="^decrement( [A-Za-z ]+)$"
   enabled="y"
   group="spelltracker"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^deepsea2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;s;s;w;s;s;s;s;s;w;w;w;s;u;w;w;w;s;s")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade u;fade w;fade w;fade w;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^dism( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("cast 'disp mag' me")
else
  Execute("cast 'disp mag' "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^dk2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;d;d;d;w;d;w;d;s;w;w;s;s;s;s;s;s;s;s;s;e;s;e;e;n;n")
else
  Execute("fade s;fade d;fade d;fade d;fade w;fade d;fade w;fade d;fade s;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade e;fade e;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^dko2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;n;n;n;e;e;n;n;n;w;n;w;u;n;e;n;n;w;n;d;n;w;n;n;e;n;n;e;n;n")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade w;fade n;fade w;fade u;fade n;fade e;fade n;fade n;fade w;fade n;fade d;fade n;fade w;fade n;fade n;fade e;fade n;fade n;fade e;fade n;fade n")
end</send>
  </alias>
  <alias
   script="doTenAfterTick"
   match="^doTenAfter$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^doThreeAfter$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautorest")) == 1) then
  Execute("doautostand")
end</send>
  </alias>
  <alias
   script="doThreeBeforeTick"
   match="^doThreeBefore$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="doAutostandTrack"
   match="^doautostand$"
   enabled="y"
   group="autostandscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--see doAutostandTrack</send>
  </alias>
  <alias
   match="^doautotrain( [A-Za-z ]+)?$"
   enabled="y"
   expand_variables="y"
   group="autotrain"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>charclass = GetVariable("charClass")
isautotrain = tonumber(GetVariable("isautotrain"))

if (string.len(Trim("%1")) &gt; 0) then
  if (charclass == "Warrior" and Trim("%1") == "Warrior" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Druid" and Trim("%1") == "Druid" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Cleric" and Trim("%1") == "Cleric" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Barbarian" and Trim("%1") == "Barbarian" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Scout" and Trim("%1") == "Scout" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Red Robe" and Trim("%1") == "Red Robe" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Dark Knight" and Trim("%1") == "Dark Knight" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Paladin" and Trim("%1") == "Paladin" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Thief" and Trim("%1") == "Thief" and isautotrain == 1) then   Execute("learn all")
  elseif (charclass == "Shaman" and Trim("%1") == "Shaman" and isautotrain == 1) then   Execute("learn all")
  end
else
  Execute("learn all")
end</send>
  </alias>
  <alias
   match="^dobeaker$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("n;w;u;s;listen man;n;d;e;s;s;s;s;e;e;s;fill beaker pond;n;w;w;n;n;n;n;n;w;u;buy garden.shears;d;e;s;s;e;e;e;e;e;e;e;e;e;n;n;prune marjoram;s;s;w;w;w;w;w;w;w;w;w;u;n;n;w;present sprig")</send>
  </alias>
  <alias
   match="^dobuffs$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("score")
SetVariable("isdobuffs",1)</send>
  </alias>
  <alias
   script="doAutoBash"
   match="^docheckautobash$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("autobash")
--This alias obsolete due to logic in doCheckRescueTarget()</send>
  </alias>
  <alias
   script="doAutoFrag"
   match="^docheckautofrag$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("for druids/red robes")</send>
  </alias>
  <alias
   match="^dofrosty$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("say It is time for ice to turn to tin once again")</send>
  </alias>
  <alias
   match="^doluni$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get all rope in room;unlock chest in room;open chest in room;get all chest in room;twiddle;get key")</send>
  </alias>
  <alias
   match="^domend$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>for i = 1,13,1 do
  Send("mend "..tostring(i)..".dagger in inv")
end</send>
  </alias>
  <alias
   match="^domound$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("say tyhin ror fybkes safe")</send>
  </alias>
  <alias
   match="^donoob$"
   enabled="y"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>remove training.sword;remove shield;get coral chest;get tooth chest;wield coral.sword;grab tooth</send>
  </alias>
  <alias
   script="doWorldTest"
   match="^doproxy$"
   enabled="y"
   group="proxy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^dosetup$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("sr1 kog;sr2 royderage;sr3 rhonda;sr4 moinier;sr5 yhonk;sr6 hendo;sr7 alanis;oall setmain kog;setmain kog")</send>
  </alias>
  <alias
   match="^doshop$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("buy 2*glowing.recall;buy 3*milky")</send>
  </alias>
  <alias
   name="getArcticStats"
   script="getArcticStats"
   match="^dostats$"
   enabled="y"
   group="arcticstats"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--to query arctic historical game usage stats</send>
  </alias>
  <alias
   match="^dostrong$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("decipher book in inv;order strong.warrior ass me;give steel.sword in inv strong.warrior;order strong.warrior grab steel.sword")</send>
  </alias>
  <alias
   match="^dotick$"
   enabled="y"
   group="tickscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local timerdeletedcount
EnableTimer("ticktimer",true)
ResetTimers()
timerdeletedcount = DeleteTemporaryTimers()
--Note("timers deleted:"..timerdeletedcount)

Execute("beforetick3")
Execute("aftertick3")
Execute("aftertick10")
</send>
  </alias>
  <alias
   match="^dour$"
   enabled="y"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>wipe opening;reconnect hatch;s;e;s;e;e;s;open curtain;open window;w;climb ladder;e;ride cart</send>
  </alias>
  <alias
   match="^doword$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("oall wordall;wordall")</send>
  </alias>
  <alias
   match="^dp2b$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;open gate west;w;close gate e;w;w;w;w;u;s;d;w;s;w;s;w;s;s;s;w;w;s;s;e;e;s;s;s;e;e;s;s;s;s;s;e;s;s;s;s;s;s;s;e;s;s;w;s;s;s;s;s;s;s;s;s;s;s;s")
else
  Execute("fade w;fade w;fade w;fade w;open gate west;fade w;close gate e;fade w;fade w;fade w;fade w;fade u;fade s;fade d;fade w;fade s;fade w;fade s;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^dp2er$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;open gate west;w;close gate e;w;w;w;w;u;s;d;w;s;w;s;w;s;s;s;w;w;s;s;e;e;s;s;s;e;e;s;s;s;s;s;e;s;s;s;s;s;s;s;e;s;s;w;s;s;s;s;s;s;s;s;s;s;e;e;e")
else
  Execute("fade w;fade w;fade w;fade w;open gate west;fade w;close gate e;fade w;fade w;fade w;fade w;fade u;fade s;fade d;fade w;fade s;fade w;fade s;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^dp2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;open gate west;w;close gate east;w;w;w;u;s;d;w;s;w;s;w;s;s;s;w;w;s;s;e;e;s;s;s;e;e;s;s;s;s;w;w;w;w;d;w;w;w;w;w;u;w;w;w;w;w;w;w")
else
  Execute("fade w;fade w;fade w;fade w;open gate west;fade w;close gate east;fade w;fade w;fade w;fade u;fade s;fade d;fade w;fade s;fade w;fade s;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^dpc$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (tonumber(GetVariable("coinsOnHand")) &gt; 500) then
  Execute("deposit "..tostring(tonumber(GetVariable("coinsOnHand"))-500))
end</send>
  </alias>
  <alias
   match="^druidpk( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--if (string.len(Trim("%1")) &gt; 0) then
--  Execute("cast 'entangle' "..Trim("%1"))
--else
--  Send("")
--end
if (tonumber(GetVariable("entanglecount")) &gt; 0) then
  Execute("cast 'entangle'")
end
if (tonumber(GetVariable("primalfurycount")) &gt; 0) then
  Execute("pfur")
end
if (tonumber(GetVariable("healingcloudcount")) &gt; 0) then
  Execute("cast 'healing cloud'")
end</send>
  </alias>
  <alias
   match="^dual$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable ("Tank", "Kellen")
Execute ("rem @bow;get @prim @container;get @off @container;put @bow @container;hold @off;wield @weap1")</send>
  </alias>
  <alias
   match="^dw$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>dri water</send>
  </alias>
  <alias
   match="^ec$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>exa @container1</send>
  </alias>
  <alias
   match="^ee$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("pe")</send>
  </alias>
  <alias
   match="^eeat$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>get @food chest
eat @food</send>
  </alias>
  <alias
   match="^efist(\s+([A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'eleme fist' %2")
else
  Execute("cast 'elem fist'")
end
</send>
  </alias>
  <alias
   match="^eject$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("oall jet")</send>
  </alias>
  <alias
   match="^elf2irda$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;w;n;e;n;n;e;n;n;w;w;w;w;s;s;e;n;n;e")
else
  Execute("fade n;fade n;fade n;fade n;fade w;fade n;fade e;fade n;fade n;fade e;fade n;fade n;fade w;fade w;fade w;fade w;fade s;fade s;fade e;fade n;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^endheal$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("tryingheal",0)</send>
  </alias>
  <alias
   match="^endregen$"
   enabled="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("tryingregen",0)</send>
  </alias>
  <alias
   match="^endstone$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("tryingstone",0)</send>
  </alias>
  <alias
   match="^ent$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage cast 'entangle'")
  else
    Execute("doautostand")
    Send("cast 'entangle'")
  end</send>
  </alias>
  <alias
   match="^envall$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("envenom "..GetVariable("weap1"))
Send("envenom "..GetVariable("weap2"))</send>
  </alias>
  <alias
   match="^envoff$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("doenvenom",0)</send>
  </alias>
  <alias
   match="^envon$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("doenvenom",1)</send>
  </alias>
  <alias
   match="^er2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;n;n;n;n;n;w;w;w;w;s;s;s;w")
else
  Execute("fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^er2crytic$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;n;e;n;n;n;e;e;n;e;s;e;e;e;e;e;s;s;e;s;e;s;w;w;s;s;e;e;e;n;e;e;n;e")
else
  Execute("fade w;fade n;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade e;fade s;fade w;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^er2dp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;n;n;n;n;n;n;n;n;n;n;e;n;n;w;n;n;n;n;n;n;n;w;n;n;n;n;n;w;w;n;n;n;w;w;n;n;e;e;n;n;n;e;n;e;n;e;u;n;d;e;e;e;e;open gate e;e;close gate west;e;e;e;e")
else
  Execute("fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade n;fade e;fade n;fade e;fade u;fade n;fade d;fade e;fade e;fade e;fade e;open gate e;fade e;close gate west;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^essence(on|off)$"
   enabled="y"
   group="essencescript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  EnableTriggerGroup ("essencescript", true)
elseif (Trim("%1") == "off") then
  EnableTriggerGroup ("essencescript", false)
end</send>
  </alias>
  <alias
   match="^exall( \d+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>corpsecount = 0
if (string.len(Trim("%1")) &gt; 0) then
  corpsecount = tonumber(Trim("%1"))
  for i = 1,corpsecount,1 do
    Execute("examine "..i..".corpse")
    Execute("get all.coins "..i..".corpse")
  end
else
  Note("** Syntax: exall &lt;#&gt;")
end
</send>
  </alias>
  <alias
   match="^exam(off|on)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("doexam",1)
elseif (Trim("%1") == "off") then
  SetVariable("doexam",0)
end
</send>
  </alias>
  <alias
   match="^f2b$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;s;w;w;w;s;s;s;s;s;s;s;e;s;s;w;s;s;s;s;s;s;s;s;s;s;s;s")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^f2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;s;w;w;w;w;n;w;w;w;w;d;w;w;w;w;w;u;w;w;w;w;w;w;w")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^f2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;s;s;s;w;w;w")
else
  Execute("fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^fac(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'free act' %2")
else
  Execute("cast 'free act'")
end
</send>
  </alias>
  <alias
   match="^fadeoff$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("fademode",0)
Execute("fadestatus")</send>
  </alias>
  <alias
   match="^fadeon$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("fademode",1)
Execute("fadestatus")</send>
  </alias>
  <alias
   match="^fadestatus$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 1) then
  Note("** Fade-mode      : Enabled")
elseif (tonumber(GetVariable("fademode")) == 0)  then
  Note("** Fade-mode      : Disabled")
end</send>
  </alias>
  <alias
   match="^fc2gp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;w;w;w;w;w;w;w;w;w;w;open gate w;w;close gate e;w;w;w;w;w;w;w;open gate w;w;close gate e")

end</send>
  </alias>
  <alias
   match="^fc2hylo$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;e;n;e;e;e;e;e;n;e;e;e;e;e;e;e")
else
  Execute("fade s;fade s;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^fc2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;d;s;w;s;s;e;u;e;e;e;u;e;u;e;n;n;d;n;n;n;n;n;n;n")
else
  Execute("fade s;fade d;fade s;fade w;fade s;fade s;fade e;fade u;fade e;fade e;fade e;fade u;fade e;fade u;fade e;fade n;fade n;fade d;fade n;fade n;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^fc2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;e;e;n;n;n;u;e;n;n;e;e;n;u;e;e;e;u;u;n;n;w;n;n;n")
else
  Execute("fade e;fade n;fade e;fade e;fade n;fade n;fade n;fade u;fade e;fade n;fade n;fade e;fade e;fade n;fade u;fade e;fade e;fade e;fade u;fade u;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^fc2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;w;s;w;s;s;w;w;w;w;w;w;w;w;w;w")
else
  Execute("fade s;fade w;fade s;fade w;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^fc2thor$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;d;d;n;n;n;w;n;n;e;e;e;e;e;e;e;e;e;e;e;n;n;n")
else
  Execute("fade w;fade d;fade d;fade n;fade n;fade n;fade w;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^fdd( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade down")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("up alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^fde( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade east")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("west alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^fdn( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade north")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("south alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^fds( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade south")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("north alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^fdu( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade up")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("down alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^fdw( .+)?$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (#"%1" &gt; 0) then
  SetVariable("stabtarget",Trim("%1"))
end
Send("fade west")

if (tonumber(GetVariable("doenvenom"))==1) then
  Send("envenom "..GetVariable("weap1"))
end
Send("sneak")
Send("east alone")
Send("backstab "..GetVariable("stabtarget"))
</send>
  </alias>
  <alias
   match="^feast$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>cast 'feast'</send>
  </alias>
  <alias
   match="^flee(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoflee")) == 1) then
    Note("** Auto-flee      : Enabled")
  else
    Note("** Auto-flee      : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautoflee",1)
  Note("** Auto-flee      : Enabled")
else
  SetVariable("isautoflee",0) 
  Note("** Auto-flee      : Disabled")
end </send>
  </alias>
  <alias
   match="^fleesafe(on|status|off)$"
   enabled="y"
   expand_variables="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isfleesafe")) == 1) then
    Note("** Flee-safe      : Yes")
  else
    Note("** Flee-safe      : No")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isfleesafe",1)
  Note("** Flee-safe      : Yes")
else
  SetVariable("isfleesafe",0) 
  Note("** Flee-safe      : No")
end </send>
  </alias>
  <alias
   match="^fli(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("doautostand;cast 'fly' %2")
else
  Execute("doautostand;cast 'fly' me")
end
</send>
  </alias>
  <alias
   match="^flygroup(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isflygroup")) == 1) then
    Note("** Fly-group      : Enabled")
  else
    Note("** Fly-group      : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isflygroup",1) 
  Note("** Fly-group      : Enabled")
else
  SetVariable("isflygroup",0) 
  Note("** Fly-group      : Disabled")
end </send>
  </alias>
  <alias
   match="^flyme(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   group="efreeti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get iron.flask "..GetVariable("container"))
Execute("empty iron.flask")

if (string.len("%2") &gt; 0) then
  Execute("order efreeti cast 'fly' %2")
else
  Execute("order efreeti cast 'fly' "..GetVariable("charname"))
end

Execute("capture efreeti")
Execute("put iron.flask "..GetVariable("container"))</send>
  </alias>
  <alias
   match="^fm(\s+[A-Za-z0-9\.\-\'\,\s]+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'force missile' "..Trim("%1"))</send>
  </alias>
  <alias
   match="^font1$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetOutputFont("Courier New",10)
SetInputFont("Courier New",10,400,0)</send>
  </alias>
  <alias
   match="^font2$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetOutputFont("Consolas",12)
SetInputFont("Consolas",12,400,0)</send>
  </alias>
  <alias
   match="^fortk2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;n;n;n;e;e;e;n;n;e;e;s;s;s;s;s;e;e;e;e")
else
  Execute("fade n;fade w;fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^fragoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isautofrag",0)
Execute("fragstatus")</send>
  </alias>
  <alias
   match="^fragon$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isautofrag",1)
Execute("fragstatus")</send>
  </alias>
  <alias
   match="^fragstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautofrag")) == 1) then
  Note("** Auto-frag      : Enabled")
else
  Note("** Auto-frag      : Disabled")
end</send>
  </alias>
  <alias
   match="^fs(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'fire st' %2")
else
  Execute("cast 'fire st' ")
end
</send>
  </alias>
  <alias
   match="^g2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;s;d;e;d;s;w;n;w;n;n;w;n;u;n;n;n;d;n;n;n;n;n;n;open gate n;n;close gate s")
else
  Execute("fade e;fade s;fade d;fade e;fade d;fade s;fade w;fade n;fade w;fade n;fade n;fade w;fade n;fade u;fade n;fade n;fade n;fade d;fade n;fade n;fade n;fade n;fade n;fade n;open gate n;fade n;close gate s")
end</send>
  </alias>
  <alias
   match="^g2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;s;d;e;d;s;w;s;d;s;s;s;s;s;e;e;e;d;s;s;s;s;s;")
else
  Execute("fade e;fade s;fade d;fade e;fade d;fade s;fade w;fade s;fade d;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade d;fade s;fade s;fade s;fade s;fade s;")
end</send>
  </alias>
  <alias
   match="^gact( .+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  SetVariable("isgactgood",0)
  SetVariable("istryinggact",1)
  SetVariable("groupaction", Trim("%1"))
  Send("group")
  --doParseGroupAction(Trim("%1"))
else
  Note("** Syntax: gact &lt;action&gt;")
end</send>
  </alias>
  <alias
   match="^garret2gp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="s;s;e;e;e;e;e;e;n;n;n;n;n;n;e;e;e;e;e;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^garret2wb$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;e;e;e;e;e;n;e;e;e;e;e;e;e;s;s;s;s;e;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="^gate$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'gate'")</send>
  </alias>
  <alias
   match="^gc([0-9]+)?(\s+[A-Za-z0-9\.\-\'\,\*]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("get "..Trim("%2").." corpse")
elseif (#Trim("%1") &gt; 0) then
  Execute("get "..Trim("%2").." "..Trim("%1")..".corpse")
else
  Note("** Syntax: gc &lt;item&gt;")
end</send>
  </alias>
  <alias
   match="^gd2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;s;d;w;d;s;e;e;n;n;e;n;n;e;e;e;e;e;n;n")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade s;fade d;fade w;fade d;fade s;fade e;fade e;fade n;fade n;fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade n")
end</send>
  </alias>
  <alias
   script="genRandomNumber"
   match="^genr$"
   enabled="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--for testing purposes</send>
  </alias>
  <alias
   match="^gg(\s[A-Za-z0-9\.\-\'\,\*]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#(Trim("%1"))&gt;0) then
  Execute("get "..Trim("%1").." "..GetVariable("container"))
end</send>
  </alias>
  <alias
   match="^gh(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'gran ha' %2")
else
  Execute("cast 'gran han'")
end
</send>
  </alias>
  <alias
   script="do_gheal"
   match="^gheal$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^glall$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("gact glance")</send>
  </alias>
  <alias
   match="^goDown$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("down")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade down")
end

SetVariable("lastdir","down")</send>
  </alias>
  <alias
   match="^goEast$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("east")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade east")
end

SetVariable("lastdir","east")</send>
  </alias>
  <alias
   match="^goNorth$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("north")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade north")
end

SetVariable("lastdir","north")</send>
  </alias>
  <alias
   match="^goSouth$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("south")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade south")
end

SetVariable("lastdir","south")</send>
  </alias>
  <alias
   match="^goUp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("up")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade up")
end

SetVariable("lastdir","up")</send>
  </alias>
  <alias
   match="^goWest$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("fademode")) == 0) then
  Execute("west")
elseif (tonumber(GetVariable("fademode")) == 1) then
  Execute("fade west")
end

SetVariable("lastdir","west")</send>
  </alias>
  <alias
   match="^gobloat(\s.+)?$"
   enabled="y"
   group="proxy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charname = "bloat"
if (#Trim("%1") &gt; 0) then
  SetVariable("my_proxy_password",Trim("%1"))
end
local passwd = Trim(GetVariable("my_proxy_password"))
local proxyip = "74.80.179.204"
Execute("zzap")
SetAlphaOption("proxy_server",proxyip)
SetAlphaOption("proxy_username","thymorical")
SetOption("proxy_port",61336)
SetOption("proxy_type",2)
SetOption("connect_method",2)  --DIKU
SetAlphaOption("proxy_password",passwd)
SetAlphaOption("player",charname)
SetAlphaOption("password",passwd)
SetAlphaOption("port","2700")
Connect()
--glynda - 104.128.59.209
--blake - 199.101.97.140
--bloat - 74.80.179.204
--dracula - 64.31.62.208
--fraker - 69.50.201.114
--jaune - 216.230.229.61</send>
  </alias>
  <alias
   match="^goreitb( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("gore "..Trim("%1")..";into the breach")
end</send>
  </alias>
  <alias
   match="^gorm2dargaard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="n;w;n;w;n;n;n;n;n;w;n;n;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^gorm2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="s;e;u;e;n;n;n;u;n;u;e;u;e;e;e;u;e;u;e;n;n;d;n;n;n;n;n;n;n"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^gorm2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="s;e;u;e;e;e;u;e;e;e;d;e;e;e;e;e;d;s;s;s;s;s"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^gorm2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="n;w;n;w;n;n;n;n;n;w;n;n;n;w;n;n;e;e;n;n;n;w;n;n;n;n;n;n;w;w;s;w;w;w;s;w;w;w;w;w;w;w;w;s;s;w"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^gow$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("doautostand;cast 'gust o wind' ")</send>
  </alias>
  <alias
   match="^gp2fc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate e;e;close gate w;e;e;e;e;e;e;e;open gate e;e;close gate w;e;e;e;e;e;e;e;e;e;e;e;n;n")

end</send>
  </alias>
  <alias
   match="^gp2garret$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;w;w;w;w;w;s;s;s;s;s;s;w;w;w;w;w;w;n;n"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^gp2hylo$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate e;e;close gate w;e;e;e;e;e;e;e;open gate e;e;close gate w;e;e;e;e;e;e;e;e;e;e;e;e;e;n;e;e;e;e;e;n;e;e;e;e;e;e;e")
else
  Execute("open gate e;fade e;close gate w;fade e;fade e;fade e;fade e;fade e;fade e;fade e;open gate e;fade e;close gate w;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^gp2porter$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate e;e;close gate w;e;e;e;e;e;e;e;open gate e;e;close gate w;e;e;n;n;w;n;w;n;n;n;n;n;n;n;w;n;w;u;u")
else
  Execute("open gate e;fade e;close gate w;fade e;fade e;fade e;fade e;fade e;fade e;fade e;open gate e;fade e;close gate w;fade e;fade e;fade n;fade n;fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade w;fade u;fade u")
end</send>
  </alias>
  <alias
   match="^gp2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;s;s;s;s;s;s;w;s;s;s;s;s;s;e;e;e;e;e;e;e;n;n;n;n;n;e;e;e;e;e;s;s;s;s;s;s;e;e;s;s")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^gp2wb$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;s;s;s;s;s;s;w;s;s;s;s;s;s;e;e;e;e;e;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="^gpardon$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("gact pardon")</send>
  </alias>
  <alias
   match="^gt([0-9])(\s+(.+))?$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%2")&gt;0) then
  if (#Trim("%3") &gt; 0) then
    Execute("oone "..GetVariable("char"..string.sub("%1",1,1)).." gt "..Trim("%3"))
  else
    if (GetVariable("char%1")~= nil) then
      Note("** Variable char%1: "..GetVariable("char%1"))
    else
      Note("** Variable char%1".." does not exist.")
    end
  end
else
  Note("** Syntax:  gt2 hey guys")
end --endif (#Trim("%2")&gt;0)</send>
  </alias>
  <alias
   match="^gtmode(\s+[0-9]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("gtmode",tonumber("%1"))
end
Note("** gtmode         : "..tostring(GetVariable("gtmode")))</send>
  </alias>
  <alias
   match="^gtoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",0)
Execute("gtstatus")</send>
  </alias>
  <alias
   match="^gton$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("dogrouptick",1)
Execute("gtstatus")</send>
  </alias>
  <alias
   match="^gtstatus$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (@dogrouptick == 1) then
  Note("** Group tick     : Enabled")
else
  Note("** Group tick     : Disabled")
end</send>
  </alias>
  <alias
   match="^guild(on|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("isguild",1)
  SetVariable("isautoskill",1)
  Execute("skillstatus")
else
  SetVariable("isguild",0)
  SetVariable("isautoskill",0)
  Execute("skillstatus")
end </send>
  </alias>
  <alias
   match="^guild2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;n;n;e;n;e;e;e;e")
else
  Execute("fade n;fade w;fade n;fade n;fade e;fade n;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^h1$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("quaff white.potion")</send>
  </alias>
  <alias
   match="^h2$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("quaff pink.vial")</send>
  </alias>
  <alias
   match="^h2wb$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;s;w;w;w;w;w;w;n;w;n;w;w;w;w;w;w;n;d;d;w;w;w;w;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade d;fade d;fade w;fade w;fade w;fade w;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="^hbotoff$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isHealbot",0)
Execute("hbotstatus")</send>
  </alias>
  <alias
   match="^hboton$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isHealbot",1)
SetVariable("isShamanbot",0)
SetVariable("isCureOn",1)
SetVariable("isskybot",0)
SetVariable("isdruidbot",0)
SetVariable("ismagebot",0)
SetVariable("isautobrew",0)
SetVariable("isautoscribe",0)
SetVariable("isautotrain",1)
SetVariable("isautorest",1)
SetVariable("isautostand",1)
SetVariable("isautobuff",1)
SetVariable("isautomeditate",1)
SetVariable("isMainHealer",1)
SetVariable("isRandomDelay",0)
SetVariable("fademode",0)
Execute("sethdelay 0")
Execute("compsoff;endheal;hbotstatus;trainoff;rdelaystatus;automemon")</send>
  </alias>
  <alias
   script="healbotstatus"
   match="^hbotstatus$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^hc$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Royderage cast 'heal cloud'")
else
  Send("cast 'healing cloud'")
end</send>
  </alias>
  <alias
   match="^hdance$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Barbarian") then
    Execute("oone Gobarian healdance")
  else
    Execute("doautostand")
    Send("healdance")
  end</send>
  </alias>
  <alias
   match="^heal( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("cast 'heal' me")
else
  Execute("cast 'heal' "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^heal(bad|vbad|fair)$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "bad") then
  SetVariable("healmode",2)
elseif (Trim("%1") == "vbad") then
  SetVariable("healmode",1)
elseif  (Trim("%1") == "fair") then
  SetVariable("healmode",3)
end</send>
  </alias>
  <alias
   match="^healg$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isMainHealer",0)
Execute("sethdelay 0.5")
Execute("showhealertype")</send>
  </alias>
  <alias
   script="parseGroupXML"
   match="^healgroupparse$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^healp$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isMainHealer",1)
Execute("sethdelay 0")
Execute("showhealertype")</send>
  </alias>
  <alias
   match="^healpk$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("brewoff;scribeoff;medoff;autorestoff;autostandon")
SetVariable("healmode",4)</send>
  </alias>
  <alias
   match="^hero( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("cast 'heroism' me")
else
  Execute("cast 'heroism' "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^hh$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>hover;archery s 5 p 5 a 2</send>
  </alias>
  <alias
   match="^hide(on|off)$"
   enabled="y"
   group="thiefscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  Note("** Hide: Enabled")
  SetVariable("ishideon",1)  
elseif (Trim("%1") == "off") then
  Note("** Hide: Disabled")
  SetVariable("ishideon",0)  
end</send>
  </alias>
  <alias
   match="^home$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  <send>goto 16030</send>
  </alias>
  <alias
   match="^hover$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Scout") then
    Execute("oone Savarin hover")
  else
    Execute("doautostand")
    Send("hover")
  end</send>
  </alias>
  <alias
   match="^hw$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charclass = GetVariable("charClass")

if (charclass == "Cleric") then
  Execute("cast 'holy word'")
elseif (charclass == "Shaman") then
  Execute("cast 'healing wave'")
end</send>
  </alias>
  <alias
   match="^hylo2fc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;w;s;w;w;w;w;w;s;w;w;n;n")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^hylo2gp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;w;s;w;w;w;w;w;s;w;w;w;w;w;w;w;w;w;w;w;w;w;open gate w;w;close gate e;w;w;w;w;w;w;w;open gate w;w;close gate e")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;open gate w;fade w;close gate e;fade w;fade w;fade w;fade w;fade w;fade w;fade w;open gate w;fade w;close gate e")
end</send>
  </alias>
  <alias
   match="^hylo2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;n;n;n;e;e;n;n;n;e;n;n;n;n;n;n;e;s;u;e;e;u;e;e;d;e;e;e;e;e;e;e;e")
else
  Execute("fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade s;fade u;fade e;fade e;fade u;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^hylo2porter$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;w;s;w;w;w;w;w;s;w;w;w;w;w;w;w;w;n;w;n;w;w;n;n;n;n;w;w;n;n;n;n;n;w;w;u;u")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade u;fade u")
end</send>
  </alias>
  <alias
   match="^ice$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Hairesach ice")
  else
    Execute("doautostand;cast 'ice storm'")
  end</send>
  </alias>
  <alias
   match="^invis(\s+[A-Za-z0-9\.\-\'\,\s]+)$"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charname = GetVariable("charname")
if (charname ~= "Oligo") then
  Send("cast 'invisibility' "..Trim("%1"))
else
  Send("invis "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^invisme(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   group="efreeti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get iron.flask "..GetVariable("container"))
Execute("empty iron.flask")

if (string.len("%2") &gt; 0) then
  Execute("order efreeti cast 'invis' %2")
else
  Execute("order efreeti cast 'invis' "..GetVariable("charname"))
end

Execute("capture efreeti")
Execute("put iron.flask "..GetVariable("container"))</send>
  </alias>
  <alias
   match="^itb$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Barbarian") then
    Execute("oone Gobarian into the breach")
  else
    Execute("doautostand")
    Send("into the breach")
  end</send>
  </alias>
  <alias
   match="^k2dargaard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;w;w;w;n;n;n;n;n;w;w;s;s;e;s;s;s;w;w;s;s;e;s;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^k2deepsea$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate n;n;close gate s;n;e;e;e;d;n;e;e;e;n;n;n;n;n;e;n;n;n;n;n;n;n")
else
  Execute("open gate n;fade n;close gate s;fade n;fade e;fade e;fade e;fade d;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^k2fc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;s;s;u;s;s;w;d;w;d;w;w;w;d;w;n;n;e;n;u;n")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade u;fade s;fade s;fade w;fade d;fade w;fade d;fade w;fade w;fade w;fade d;fade w;fade n;fade n;fade e;fade n;fade u;fade n")
end</send>
  </alias>
  <alias
   match="^k2fortk$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;n;n;n;n;n;w;w;s;s;w;w;w;s;s;s;e;s")
else
  Execute("fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade s;fade e;fade s")
end</send>
  </alias>
  <alias
   match="^k2g$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate s;s;close gate n;s;s;s;s;s;s;u;s;s;s;d;s;e;s;s;e;s;e;n;u;w;u;n;w;")
else
  Execute("open gate s;fade s;close gate n;fade s;fade s;fade s;fade s;fade s;fade s;fade u;fade s;fade s;fade s;fade d;fade s;fade e;fade s;fade s;fade e;fade s;fade e;fade n;fade u;fade w;fade u;fade n;fade w;")
end</send>
  </alias>
  <alias
   match="^k2gorm$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="open gate s;s;s;s;s;s;s;s;u;s;s;w;d;w;d;w;w;w;d;w;d;s;d;s;s;s;w;d;w;n"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^k2kern$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate e;e;close gate w;e;s;s;s;s;e;e;e;e;u;e;e;e;n;u;e;e;e;n;n;e;s;e;d")
else
  Execute("open gate e;fade e;close gate w;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade n;fade u;fade e;fade e;fade e;fade n;fade n;fade e;fade s;fade e;fade d")
end</send>
  </alias>
  <alias
   match="^k2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate s;s;close gate n;s;s;s;s;s;s;u;s;s;s;d;s;e;s;s;e;s;s;d;s;s;s;s;s;e;e;e;d;s;s;s;s;s")
else
  Execute("open gate;fade s;close gate n;fade s;fade s;fade s;fade s;fade s;fade s;fade u;fade s;fade s;fade s;fade d;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade d;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade d;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^k2nr$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate w;w;close gate e;w;w;w;n;n;n;n;n;w;w;n;n;n;n;n;e;e")
else
  Execute("open gate w;fade w;close gate e;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^k2qk$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;n;n;n;n;n;w;w;n;n;n;n;w;w;s;w;w;n;n;n;n;n;w;n;n;w;n;n")
else
  Execute("fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^k2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate w;w;close gate e;w;w;w;n;n;n;n;n;w;w;n;n;n;n;w;w;s;w;w;w;s;w;w;w;w;w;w;w;w;s;s;w")
else
  Execute("open gate w;fade w;close gate e;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade s;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^k2tirabot$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;w;w;w;n;n;n;n;n;w;w;s;s;e;s;s;s;e;e;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^k2ur$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open gate east;e;close gate w;e;s;s;s;s;s;s;s;e;e;n;n;e;s;e")
else
  Execute("open gate east;fade e;close gate w;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade e;fade s;fade e")
end</send>
  </alias>
  <alias
   match="^kb( [A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("kick "..Trim("%1")..";bash "..Trim("%1"))
else
  Execute("kick;bash")
end</send>
  </alias>
  <alias
   match="^kern2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("u;w;n;w;s;s;w;w;w;d;s;w;w;w;d;w;w;w;w;n;n;n;n;w;w")
else
  Execute("fade u;fade w;fade n;fade w;fade s;fade s;fade w;fade w;fade w;fade d;fade s;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^kitb( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("kill "..Trim("%1")..";into the breach")
end</send>
  </alias>
  <alias
   match="^kk( [A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
--  Note("herE")
  if (IsSocketConnected()) then
    Execute("oone "..GetVariable("maintank").." kill "..Trim("%1"))
  end
else
  Note("** Syntax: omk &lt;target&gt;")
end</send>
  </alias>
  <alias
   match="^ktempv( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("kill "..Trim("%1")..";temporal vision")
else
  Execute("kill;temporal vision")
end</send>
  </alias>
  <alias
   match="^kwd( [A-Za-z0-9\s\'\-\,]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  Execute("straighten %1;inspect %1;touch %1;align %1;push %1;move %1; pick %1; pull %1; lift %1; grab %1;pluck %1;open %1;shove %1;jam %1;slide %1;tug %1;turn %1;twist %1")
end
</send>
  </alias>
  <alias
   match="^lay(\s[A-Za-z0-9\*\.\;\'\-\s\_]+)$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Paladin") then
    Execute("oone Hendo lay "..Trim("%1"))
  else
    Execute("doautostand")
    Send("lay "..Trim("%1"))
  end</send>
  </alias>
  <alias
   match="^lb(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("islookback")) == 1) then
    Note("** Look back      : Enabled")
  else
    Note("** Look back      : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("islookback",1) 
  Note("** Look back      : Enabled")
else
  SetVariable("islookback",0) 
  Note("** Look back      : Disabled")
end </send>
  </alias>
  <alias
   match="^lemish2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;n;n;w;w;w;n;w;w;n;w;w;n;w;w;n;w;w;w;w;w;w;s;w;w;w;n;n;e;n;n;w;n;n;n")
else
  Execute("fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   script="loginMenu"
   match="^login$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^loot(on|off|status)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "off") then
  SetVariable("iscoinloot",0)
  Execute("lootstatus")
elseif (Trim("%1") == "on") then
  SetVariable("iscoinloot",1)
  Execute("lootstatus")
elseif (Trim("%1") == "status") then
  if (tonumber(GetVariable("iscoinloot"))==1) then
    Note("** Coin loot      : Enabled")
  else
    Note("** Coin loot      : Disabled")
  end
end
</send>
  </alias>
  <alias
   match="^lootcomps?(on|off|status)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  Execute("complooton")
elseif (Trim("%1") == "off") then
  Execute("complootoff")
elseif (Trim("%1") == "status") then
  Execute("complootstatus")
end</send>
  </alias>
  <alias
   script="doLostConcentration"
   match="^lostconc$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^luni2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;s;d;s;e;s;d;s;s;e;e;e;n;e;e;n;n;n;e;e;n;e;s;s;e;u;e;e;e;u;e;e;e;d;e;e;e;e;e;d;s;s;s;s;s")
else
  Execute("fade e;fade s;fade d;fade s;fade e;fade s;fade d;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade s;fade s;fade e;fade u;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade d;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^luni2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;s;d;e;s;s;d;s;s;w;w;w;n;n;n;e;n;n;n;n;n;n;e;n;n;w;n;n;n;n;n;n;e;n;n;w;w;w;n;w;w;n;w;w;n;w;w;n;w;w;w;w;w;w;s;w;w;w;n;n;e;n;n;w;n;n;n")
else
  Execute("fade e;fade s;fade d;fade e;fade s;fade s;fade d;fade s;fade s;fade w;fade w;fade w;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^lytburg2poc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;w;n;e;e;e;e;n;n;n;w;s;w;w;w;s;s;w;s;s;s;s;s;s;s;s;e;e;s;e;e;e;e;e;e;e;e;s;open door e;e;close door w")
else
  Execute("fade n;fade n;fade n;fade n;fade w;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade w;fade s;fade w;fade w;fade w;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;open door e;fade e;close door w")
end</send>
  </alias>
  <alias
   match="^lytburg2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;w;n;e;e;e;e;n;n;n;w;s;w;w;w;s;s;w;s;s;s;s;s;s;s;s;e;e;s;e;e;e;e;e;e;e;e;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;w;w;w;s;s;s")
else
  Execute("fade n;fade n;fade n;fade n;fade w;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade w;fade s;fade w;fade w;fade w;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade s;")
end</send>
  </alias>
  <alias
   match="^lytburg2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;w;n;e;e;e;e;n;n;n;w;s;w;w;w;n;n;e;n;n;w;n;n;n")
else
  Execute("fade n;fade n;fade n;fade n;fade w;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n;")
end</send>
  </alias>
  <alias
   match="^mainme$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("setmain "..GetVariable("charname"))</send>
  </alias>
  <alias
   match="^mark( [0-9]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  for i = 1,tonumber(Trim("%1")),1 do
    Send("drop 1 coin")
  end
else
  Note("** Syntax: mark &lt;#&gt;")
end</send>
  </alias>
  <alias
   match="^massi$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'mass invis'")</send>
  </alias>
  <alias
   match="^mbotoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("ismagebot",0)
SetVariable("isautofrag",0)
SetVariable("isautorest",0)
SetVariable("isautostand",0)
SetVariable("isautobuff",0)
Execute("mbotstatus")</send>
  </alias>
  <alias
   match="^mboton$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isdruidbot",0)
SetVariable("isHealbot",0)
SetVariable("isShamanbot",0)
SetVariable("isskybot",0)
SetVariable("ismagebot",1)
SetVariable("isautofrag",1)
SetVariable("isautorest",1)
SetVariable("isautostand",1)
SetVariable("isautobuff",1)
SetVariable("isflygroup",1)
SetVariable("fademode",0)
Execute("mbotstatus;trainoff;automemon")</send>
  </alias>
  <alias
   match="^mbotstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("ismagebot")) == 1) then
  Note("** Mage bot       : Enabled")
else
  Note("** Mage bot       : Disabled")
end</send>
  </alias>
  <alias
   match="^mearia2n$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;w;w;w;w;w;w;w;w;w;w;w;w;n;w;w;n;w;w;w;w;d;w;w;w;w;w;u;w;w;w;w;w;w;w")
else
  Execute("fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^medoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isautomeditate",0)
Execute("medstatus")</send>
  </alias>
  <alias
   match="^medon$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isautomeditate",1)
Execute("medstatus")</send>
  </alias>
  <alias
   match="^medstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isautomeditate"))==1) then
  Note("** Auto-meditate  : Enabled")
elseif (tonumber(GetVariable("isautomeditate"))==0) then
  Note("** Auto-meditate  : Disabled")
end</send>
  </alias>
  <alias
   match="^mfly$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>cast 'mass fly'</send>
  </alias>
  <alias
   match="^mi$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'mirror image'")</send>
  </alias>
  <alias
   match="^milky( [A-Za-z0-9\*\.\-\,]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#tostring(Trim("%1")) &gt; 0) then
  if (string.lower(Trim("%1")) == "me") then
    Execute("get milky.potion @container;quaff milky.potion")
  else
    Execute("get milky.potion @container;give milky.potion ".. Trim("%1"))
  end
else
    Execute("get milky.potion @container;quaff milky.potion")
end</send>
  </alias>
  <alias
   match="^mm(\s+[A-Za-z0-9\.\-\'\,\s]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
  Send("cast 'magic missile' "..Trim("%1"))
else
  Send("cast 'm m'")
end</send>
  </alias>
  <alias
   match="^mo2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;n;n;n;w;w;w;w;w;w;w;w;n")
else
  Execute("fade e;fade e;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n")
end</send>
  </alias>
  <alias
   match="^mo2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;s;s;s;e;e;s;s;s;w;w;s;s;e;d;e;e;u;e;e;s;s;e;e;e;e")
else
  Execute("fade e;fade e;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade d;fade e;fade e;fade u;fade e;fade e;fade s;fade s;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^mt$"
   enabled="y"
   group="mage_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Black Robe") then
  Execute("oone Villa cast 'mal tent'")
else
  Execute("doautostand;cast 'male tent'")
end</send>
  </alias>
  <alias
   match="^n2b$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;s;s;s;s;s;d;e;e;e;n;n;n;e;e;e;e;s;s;s;s;s;s;s")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade d;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^n2bard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;s;s;e;s;s;s;d;s;s;e;e")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade d;fade s;fade s;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^n2d$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;s;s;s;s;s;d;e;e;e;n;n;n;e;e;e;e;n;n;w;w;w;w;w;w;w;w;w;w;w;w;w;w;s;s;s;s;s;open gate east;e;close gate w;e;u")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade d;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;open gate east;fade e;close gate w;fade e;fade u")
end</send>
  </alias>
  <alias
   match="^n2dargaard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;u;w;w;w;w;w;u;w;w;w;d;w;w;w;d;w;n;n;w;n;w;n;n;n;n;n;w;n;n;e")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade u;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade d;fade w;fade n;fade n;fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade e")
end</send>
  </alias>
  <alias
   match="^n2dp$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;d;e;e;e;e;e;u;e;e;e;e;n;n;n;n;w;w;n;n;n;w;w;n;n;e;e;n;n;n;e;n;e;n;e;u;n;d;e;e;e;open gate east;e;close gate west;e;e;e;e")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade n;fade e;fade n;fade e;fade u;fade n;fade d;fade e;fade e;fade e;open gate east;fade e;close gate west;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^n2f$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;d;e;e;e;e;e;u;e;e;e;e;s;e;e;e;e;n;n;n;n;n;n")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^n2fc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;d;d;w;w;w;d;s;w;w;s;s;w;d;s;s;s;w;w;s;w")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade d;fade d;fade w;fade w;fade w;fade d;fade s;fade w;fade w;fade s;fade s;fade w;fade d;fade s;fade s;fade s;fade w;fade w;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^n2g$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;u;w;w;w;n;n;n;n;n;u;n;e;n;u;w;u;n;w;")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade u;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade u;fade n;fade e;fade n;fade u;fade w;fade u;fade n;fade w;")
end</send>
  </alias>
  <alias
   match="^n2gorm$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="n;n;n;n;n;u;w;w;w;w;w;u;w;w;w;d;w;w;w;d;w;n"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^n2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;u;w;w;w;n;n;n;n;n;u;n;n;w;n;n;w;n;u;n;n;n;d;n;n;n;n;n;n;open gate n;n;close gate s")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade u;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade u;fade n;fade n;fade w;fade n;fade n;fade w;fade n;fade u;fade n;fade n;fade n;fade d;fade n;fade n;fade n;fade n;fade n;fade n;open gate n;fade n; close gate s;")
end</send>
  </alias>
  <alias
   match="^n2luni$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;u;w;w;w;w;w;u;w;w;w;d;w;w;w;d;w;n;n;w;s;w;w;s;s;s;w;w;s;w;w;w;n;n;u;n;w;n;u;n;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade u;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade d;fade w;fade n;fade n;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade u;fade n;fade w;fade n;fade u;fade n;fade w")
end</send>
  </alias>
  <alias
   match="^n2mearia$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;d;e;e;e;e;e;u;e;e;e;e;s;e;e;s;e;e;e;e;e;e;e;e;e;e;e;e;n")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n")
end</send>
  </alias>
  <alias
   match="^n2rockhorde$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;d;e;e;e;e;e;u;e;e;e;e;n;n;n;n;e;e;s;s;s;e;s;climb rocks;e;e;n;n;e;s;e")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade e;fade e;fade s;fade s;fade s;fade e;fade s;climb rocks;fade e;fade e;fade n;fade n;fade e;fade s;fade e")
end</send>
  </alias>
  <alias
   match="^n2sanc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;d;d;w;w;w;d;s;w;w;s;s;w;d;s;s;e;u;n;u;e")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade d;fade d;fade w;fade w;fade w;fade d;fade s;fade w;fade w;fade s;fade s;fade w;fade d;fade s;fade s;fade e;fade u;fade n;fade u;fade e")
end</send>
  </alias>
  <alias
   match="^n2sorin$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;d;e;s;s;w;w;s;s;s;s;s;s")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade d;fade e;fade s;fade s;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^n2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;u;w;w;w;w;w;u;w;w;w;d;w;w;w;d;w;n;n;w;n;w;n;n;n;n;n;w;n;n;n;w;n;n;e;e;n;n;n;w;n;n;n;n;n;n;w;w;s;w;w;w;s;w;w;w;w;w;w;w;w;s;s;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade u;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade d;fade w;fade w;fade w;fade d;fade w;fade n;fade n;fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade s;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^new2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;n;w;n;n;n;n;n;e;n;n;n;n;w;n;n;n;n")
else
  Execute("fade w;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^nm$"
   enabled="y"
   group="mage_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Black Robe") then
  Execute("oone Villa cast 'nightma'")
else
  Execute("doautostand;cast 'nightm'")
end</send>
  </alias>
  <alias
   match="^nn$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("pn")</send>
  </alias>
  <alias
   match="^notifyone\s+([A-Za-z]+)\s+(.+)$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>xmlstr = CreateXMLMsg("NOTIFY","&lt;target&gt;"..Trim("%1").."&lt;/target&gt;&lt;message&gt;"..Trim("%2").."&lt;/message&gt;")
--Note("xmlstr: "..xmlstr)

if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
end</send>
  </alias>
  <alias
   match="^npp( [A-Za-z0-9\.\,\'\-]+)?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Execute("cast 'negative plane prote' me")
else
  Execute("cast 'negative plane prote' "..Trim("%1"))
end</send>
  </alias>
  <alias
   match="^nr2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;s;s;s;s;s;e;e;s;s;s;s;s;e;e;e;open gate;e;close gate w")
else
  Execute("fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;open gate;fade e;close gate w")
end</send>
  </alias>
  <alias
   match="^nr2qk$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;s;w;w;s;w;w;n;n;n;n;n;w;n;n;w;n;n")
else
  Execute("fade w;fade w;fade s;fade w;fade w;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^nr2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;s;w;w;s;w;w;w;s;w;w;w;w;w;w;w;w;s;s;w")
else
  Execute("fade w;fade w;fade s;fade w;fade w;fade s;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^oac(\s+.+)$"
   enabled="y"
   group="corpses"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("order all.corpse "..Trim("%1"))</send>
  </alias>
  <alias
   match="^oac(m|sit|st)$"
   enabled="y"
   group="corpses"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") =="m") then
  Execute("order all.corpse assist "..GetVariable("maintank"))
elseif (Trim("%1") =="st") then
  Execute("order all.corpse stand")
elseif (Trim("%1") =="sit") then
  Execute("order all.corpse sit")
end</send>
  </alias>
  <alias
   match="^oack(\s+.+)$"
   enabled="y"
   group="corpses"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("order all.corpse kill "..Trim("%1"))</send>
  </alias>
  <alias
   match="^oall(\s[A-Za-z0-9\*\.\;\'\-\s\_]+)$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local xmlstr = CreateXMLMsg("COMMANDALL",Trim("%1"))
--Note("xmlstr: "..xmlstr)
if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
else
  Note("** Not connected to clan server.")
end</send>
  </alias>
  <alias
   script="orderAllSpiritKill"
   match="^oask(\s+([0-9\.A-Za-z]+))$"
   enabled="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("order all.spirit kill %2;kill %2")</send>
  </alias>
  <alias
   match="^ock( .+)$"
   enabled="y"
   group="charmy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("order "..GetVariable("charmy1").." kill "..Trim("%1"))</send>
  </alias>
  <alias
   match="^omk( [A-Ka-z0-9\.\-\'\,]+)?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") &gt; 0) then
--  Note("herE")
  if (IsSocketConnected()) then
    Execute("oone "..GetVariable("maintank").." kill "..Trim("%1"))
  end
else
  Note("** Syntax: omk &lt;target&gt;")
end</send>
  </alias>
  <alias
   match="^oone\s+([A-Za-z]+)\s+(.+)$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local xmlstr = CreateXMLMsg("COMMAND","&lt;target&gt;"..Trim(Proper("%1")).."&lt;/target&gt;&lt;execute&gt;"..Trim("%2").."&lt;/execute&gt;")
--Note("xmlstr: "..xmlstr)

if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
else
  Note("** Not connected to clan server.")
end</send>
  </alias>
  <alias
   match="^order(on|off|status)$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1")=="on") then
  SetVariable("allow_order",1)
  Execute("orderstatus")
elseif (Trim("%1")=="off") then
  SetVariable("allow_order",0)
  Execute("orderstatus")
elseif (Trim("%1")=="status") then
  if (tonumber(GetVariable("allow_order")) == 1) then
    Note("** Allow order: Enabled")
  else
    Note("** Allow order: Disabled")
  end
end</send>
  </alias>
  <alias
   match="^ost(\s+[A-Za-z]+)?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local xmlstr = ""
if (#Trim("%1")&gt;0) then
  xmlstr = CreateXMLMsg("COMMAND","&lt;target&gt;"..Trim(Proper("%1")).."&lt;/target&gt;&lt;execute&gt;stand&lt;/execute&gt;")
else
  xmlstr = CreateXMLMsg("COMMANDALL","stand")
end

if (IsSocketConnected()) then
  assert(c:send(xmlstr.."\\n"))
end</send>
  </alias>
  <alias
   match="^owl$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>scavenge;quell crow;inst owl</send>
  </alias>
  <alias
   match="^p2ct$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;w;s;s;s;s;w;w;s;w;w;s;w;s;w;n;n;n;w;n;n")
else
  Execute("fade w;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade w;fade s;fade w;fade w;fade s;fade w;fade s;fade w;fade n;fade n;fade n;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^p2dko$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;s;s;w;s;s;e;s;u;s;e;s;s;w;s;d;e;s;e;s;s;s;w;w;s;s;s;s;s;s;s;s;s")
else
  Execute("fade s;fade s;fade w;fade s;fade s;fade w;fade s;fade s;fade e;fade s;fade u;fade s;fade e;fade s;fade s;fade w;fade s;fade d;fade e;fade s;fade e;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^p2fyzian$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;w;s;s;s;s;w;w;s;w;w;s;w;s;w;s;move stone in room")
else
  Execute("fade w;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade w;fade s;fade w;fade w;fade s;fade w;fade s;fade w;fade s;move stone in room")
end</send>
  </alias>
  <alias
   match="^p2gd$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;w;w;w;w;s;s;w;s;s;w;w;n;u;e;u;n;w;w;w;w;w")
else
  Execute("fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w;fade s;fade s;fade w;fade w;fade n;fade u;fade e;fade u;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^p2guild$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;s;w;s;s;e;s")
else
  Execute("fade w;fade w;fade w;fade w;fade s;fade w;fade s;fade s;fade e;fade s")
end</send>
  </alias>
  <alias
   match="^p2hylo$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;w;w;u;w;w;d;w;w;d;n;w;s;s;s;s;s;s;w;s;s;s;w;w;s;s;s;w;w;w;w")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade d;fade w;fade w;fade d;fade n;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^p2mo$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;e;e;e;e;e;e;e;e;s;s;s;w;w")
else
  Execute("fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^p2raynes$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;w;s;s;w;s;s;e;s;u;s;e;s;s;s;e;s;u;w;s;u;e")
else
  Execute("fade s;fade s;fade w;fade s;fade s;fade w;fade s;fade s;fade e;fade s;fade u;fade s;fade e;fade s;fade s;fade s;fade e;fade s;fade u;fade w;fade s;fade u;fade e")
end</send>
  </alias>
  <alias
   match="^p2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;e;e;e;e;e;e;e;e;s;s;s;s;s;s;e;e;s;s;s;w;w;s;s;e;d;e;e;u;e;e;s;s;e;e;e;e")
else
  Execute("fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade d;fade e;fade e;fade u;fade e;fade e;fade s;fade s;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^paf( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("punch "..Trim("%1")..";assault "..Trim("%1")..";fortress")
else
  Execute("punch;assault;fortress")
end</send>
  </alias>
  <alias
   match="^para(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'paraly' %2")
else
  Execute("cast 'paraly'")
end
</send>
  </alias>
  <alias
   match="^parry(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoparry")) == 1) then
    Note("** Auto-parry     : Enabled")
  else
    Note("** Auto-parry     : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautoparry",1)
  Note("** Auto-parry     : Enabled")
else
  SetVariable("isautoparry",0) 
  Note("** Auto-parry     : Disabled")
end </send>
  </alias>
  <alias
   match="^passwd(\s.+)?$"
   enabled="y"
   expand_variables="y"
   group="proxy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1") == 0) then
  Note("** Syntax: passwd &lt;password&gt;")
else
  SetVariable("my_proxy_password",Trim("%1"))
  Note("** Password set")
end</send>
  </alias>
  <alias
   match="^pb( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("punch "..Trim("%1")..";bash "..Trim("%1"))
else
  Execute("punch;bash")
end</send>
  </alias>
  <alias
   match="^pbotoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isHealbot",0)
SetVariable("ispaladinbot",0)
SetVariable("isskybot",0)
SetVariable("isdruidbot",0)
SetVariable("ismagebot",0)
SetVariable("isautobrew",0)
SetVariable("isautoscribe",0)
SetVariable("isautorest",0)
SetVariable("isautostand",1)
SetVariable("isautobuff",0)
Execute("setengage strike")
Execute("rescueoff;compsoff;endheal;trainoff;assoff")
Execute("pbotstatus")</send>
  </alias>
  <alias
   match="^pboton$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isHealbot",0)
SetVariable("ispaladinbot",1)
SetVariable("isskybot",0)
SetVariable("isdruidbot",0)
SetVariable("ismagebot",0)
SetVariable("isautobrew",0)
SetVariable("isautoscribe",0)
SetVariable("isautorest",0)
SetVariable("isautostand",1)
SetVariable("isautobuff",1)
Execute("setengage strike")
Execute("rescueon;compsoff;endheal;trainoff;asson;skillon;healg")
Execute("pbotstatus")</send>
  </alias>
  <alias
   match="^pbotstatus$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("ispaladinbot")) == 1) then
  Note("** Paladin-bot    : Enabled")
else
  Note("** Paladin-bot    : Disabled")
end</send>
  </alias>
  <alias
   match="^pd$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." down")
else
  Execute(", points down.")
end</send>
  </alias>
  <alias
   match="^pe$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." east")
else
  Execute(", points east.")
end</send>
  </alias>
  <alias
   match="^pfur(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'primal fury' %2")
else
  Execute("cast 'primal fury' me")
end
</send>
  </alias>
  <alias
   match="^pkact( .+)?$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") ~= nil and #Trim("%1") &gt; 0) then
  Execute("setengage "..Trim("%1"))
else
  Note("** Syntax: pkact &lt;action&gt;")
end </send>
  </alias>
  <alias
   script="addPKTarget"
   match="^pkadd( [A-Za-z]+)?$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--calls arctic.lua function addPKTarget()</send>
  </alias>
  <alias
   match="^pkclear$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("pklist","")
Execute("pkstatus")</send>
  </alias>
  <alias
   match="^pkh( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("punch "..Trim("%1")..";kick high "..Trim("%1"))
else
  Execute("punch;kick high")
end</send>
  </alias>
  <alias
   match="^pkick( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("punch "..Trim("%1")..";kick "..Trim("%1"))
else
  Execute("punch;kick")
end</send>
  </alias>
  <alias
   match="^pklist$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local pklist = GetVariable("pklist")
local t = {}
if (pklist ~= nil and #pklist &gt; 0) then
  t = split(pklist,",")
  Note("** PK list ("..#t..")    : "..pklist)
else
  Note("** PK list (0)    : No PK targets")
end</send>
  </alias>
  <alias
   match="^pkoff$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("ispk",0)</send>
  </alias>
  <alias
   match="^pkon$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charclass = GetVariable("charClass")
Execute("afilloff")

if (charclass == "Warrior") then
  Execute("assoff")
end

SetVariable("doautosplit",0)
Execute("examon")
Execute("looton")
SetVariable("ispk",1)
Execute("rdelayoff")
--Execute("pkstatus")</send>
  </alias>
  <alias
   script="removePKTarget"
   match="^pkrem( [A-Za-z]+)?$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^pkstatus$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local ispk = false
local isautodisable = false
if (tonumber(GetVariable("ispk")) == 1) then
  ispk = true
end

if (tonumber(GetVariable("pkautodisable")) == 1) then
  isautodisable = true
end

if (ispk) then
  Note("** PK Triggers    : Enabled")
else
  Note("** PK Triggers    : Disabled")
end

if (isautodisable) then
  Note("** PK Auto-Disable: Triggers will auto-DISABLE when tripped")
else
  Note("** PK Auto-Disable: Triggers will stay ACTIVE when tripped")
end

Note("** PK Action      : "..GetVariable("engageaction"))
Execute("pklist")</send>
  </alias>
  <alias
   match="^pkstayoff$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("pkautodisable",1)
Execute("pkstatus")</send>
  </alias>
  <alias
   match="^pkstayon$"
   enabled="y"
   group="pkscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("pkautodisable",0)
Execute("pkstatus")</send>
  </alias>
  <alias
   match="^pn$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." north")
else
  Execute(", points north.")
end</send>
  </alias>
  <alias
   match="^poc2lytburg$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open door w;w;close door e;n;w;w;w;w;w;w;w;w;n;w;w;n;n;n;n;n;n;n;n;e;n;n;e;e;e;n;e;s;s;s;w;w;w;w;s;e;s;s;s;s")
else
  Execute("open door w;fade w;close door e;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade e;fade e;fade e;fade n;fade e;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade e;fade s;fade s;fade s;fade s;")
end</send>
  </alias>
  <alias
   match="^poc2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open door w;w;close door e;s;s;s;s;s;s;s;s;s;s;s;s;s;s;w;w;w;s;s;s")
else
  Execute("open door w;fade w;close door e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^poc2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open door w;w;close door e;n;w;w;w;w;w;w;w;w;n;w;w;n;n;n;n;n;n;n;n;e;n;n;n;n;e;n;n;w;n;n;n")
else
  Execute("open door w;fade w;close door e;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^poc2wb$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("open door w;w;close door e;n;w;n;n;w;w;w;s;s;s;w;w;w;s;w;w;w;w;s;w;s;s;s;s;w;w;w;w;w;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("open door w;fade w;close door e;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="^porter2hylo$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("d;d;e;e;s;s;s;s;s;e;e;s;s;s;s;e;e;s;e;s;e;e;e;e;e;e;e;e;n;e;e;e;e;e;n;e;e;e;e;e;e;e")
else
  Execute("fade d;fade d;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^pp(\s[A-Za-z0-9\.\-\'\,\*]+)?$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#(Trim("%1"))&gt;0) then
  Execute("put "..Trim("%1").." "..GetVariable("container"))
end</send>
  </alias>
  <alias
   match="^pparry( [0-9A-Za-z \,\.\-\']+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("punch "..Trim("%1")..";parry")
else
  Execute("punch;parry")
end</send>
  </alias>
  <alias
   match="^prayer$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Cleric") then
    Execute("oone Monika cast 'prayer'")
else
    Send("cast 'prayer'")
end


</send>
  </alias>
  <alias
   match="^ps$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." south")
else
  Execute(", points south.")
end</send>
  </alias>
  <alias
   match="^ps2pw$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;n;n;w;w;w;w;w;w;w;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="^pu$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." up")
else
  Execute(", points up.")
end</send>
  </alias>
  <alias
   match="^pvwe$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage pvwe")
  else
    Execute("doautostand;cast 'prevail wind' east")
  end</send>
  </alias>
  <alias
   match="^pvwn$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage pvwn")
  else
    Execute("doautostand;cast 'prevail wind' north")
  end</send>
  </alias>
  <alias
   match="^pvws$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage south")
  else
    Execute("doautostand;cast 'prevail wind' south")
  end</send>
  </alias>
  <alias
   match="^pvww$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage pvww")
  else
    Execute("doautostand;cast 'prevail wind' west")
  end</send>
  </alias>
  <alias
   match="^pw$"
   enabled="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected()) then
  Execute("oone "..Trim(GetVariable("maintank")).." west")
else
  Execute(", points west.")
end</send>
  </alias>
  <alias
   match="^pw2ps$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;e;s;s;s;s;s;s;s;s")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^pwalk$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>cast 'p walk'</send>
  </alias>
  <alias
   match="^pwt$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("doautostand;cast 'pass without trace'")</send>
  </alias>
  <alias
   match="^qk2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;s;s;e;s;s;s;s;s;e;e;n;e;e;s;s;s;s;e;e;s;s;s;s;s;e;e;e;e")
else
  Execute("fade s;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^qk2nr$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;s;s;e;s;s;s;s;s;e;e;n;e;e;n;e;e")
else
  Execute("fade s;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade e;fade e;fade n;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^qk2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;w;s;s;s")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^qkiri2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;w;n;n;w;w;w;n;n;n;e;n;n;n;n;e;n;n;w;n;n;n")
else
  Execute("fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^qt2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;s;s;s;w;s;s;w;w;n;n;w;n;n;n;n")
else
  Execute("fade w;fade s;fade s;fade s;fade w;fade s;fade s;fade w;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^quali2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;e;n;e;n;n;n;move bush;e;n;n;n;e;n;n;n;n;e;e;e;e;n;n;e;e;e;n;n;n;w;n;n;n;n;n;e;n;n;n;n;w;n;n;n;n")
else
  Execute("fade n;fade e;fade e;fade e;fade n;fade e;fade n;fade n;fade n;move bush;fade e;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^quali2thor$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;e;n;e;n;n;n;e;n;e;e;n;n;w;n;n;e;n;e;n;n;e;e;n;n;e;e;e;s;w;s;s;s;s;e;s;s;s;e;e;e;s;e;s;s;s;s;s;e;e;e;s;u;s;u;s;s;d;s;w;s;s;s")
else
  Execute("fade n;fade e;fade e;fade e;fade n;fade e;fade n;fade n;fade n;fade e;fade n;fade e;fade e;fade n;fade n;fade w;fade n;fade n;fade e;fade n;fade e;fade n;fade n;fade e;fade e;fade n;fade n;fade e;fade e;fade e;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade u;fade s;fade u;fade s;fade s;fade d;fade s;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^raa$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>retreat
aim @target
shoot auto</send>
  </alias>
  <alias
   match="^raa(\s[A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#(Trim("%1")) &gt; 0) then
  Execute("retreat;aim "..Trim("%1")..";shoot auto")
end</send>
  </alias>
  <alias
   match="^racid$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Hairesach racid")
else
  Execute("doautostand;cast 'resist' acid")
end</send>
  </alias>
  <alias
   match="^raynes2p$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;d;n;e;d;n;w;n;n;n;w;n;d;n;w;n;n;e;n;n;e;n;n")
else
  Execute("fade w;fade d;fade n;fade e;fade d;fade n;fade w;fade n;fade n;fade n;fade w;fade n;fade d;fade n;fade w;fade n;fade n;fade e;fade n;fade n;fade e;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^rc$"
   enabled="y"
   group="charmy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("release "..GetVariable("charmy1"))</send>
  </alias>
  <alias
   match="^rcold$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Hairesach rcold")
else
  Execute("doautostand;cast 'resist' cold")
end</send>
  </alias>
  <alias
   match="^rdelaymax( ([0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("randomDelayMax", "%2")
end
Execute("rdelaystatus")</send>
  </alias>
  <alias
   match="^rdelaymin( ([0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("randomDelayMin", "%2")
end
Execute("rdelaystatus")</send>
  </alias>
  <alias
   name="rdelayoff"
   match="^rdelayoff$"
   enabled="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isRandomDelay",0)
Execute("rdelaystatus")</send>
  </alias>
  <alias
   name="rdelayon"
   match="^rdelayon$"
   enabled="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isRandomDelay",1)
Execute("rdelaystatus")</send>
  </alias>
  <alias
   name="rdelaystatus"
   script="randomdelaystatus"
   match="^rdelaystatus$"
   enabled="y"
   group="random_delay"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--note</send>
  </alias>
  <alias
   match="^reclaim(on|off|status)$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("isautoreclaim",1)
  Execute("reclaimstatus")
elseif (Trim("%1") == "off") then
  SetVariable("isautoreclaim",0)
  Execute("reclaimstatus")
elseif (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoreclaim"))==1) then
    Note("** Auto-reclaim   : Enabled")
  else
    Note("** Auto-reclaim   : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^recon$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("closesocket;connjoe")</send>
  </alias>
  <alias
   match="^ref(\s+([A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Hairesach ref %2")
  else
    Execute("doautostand;cast 'refresh' %2")
  end</send>
  </alias>
  <alias
   match="^refgroup$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("** refgroup under dev")
SetVariable("isrefgroup", 1)
SetVariable("isrefgroupgood",0)
Send("group")</send>
  </alias>
  <alias
   match="^refme$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get green.potion @container;quaff green.potion</send>
  </alias>
  <alias
   script="mvgroupparse"
   match="^refreshgroup$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("hmmm")</send>
  </alias>
  <alias
   match="^relec$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Hairesach relec")
else
  Execute("doautostand;cast 'resist' electricity")
end</send>
  </alias>
  <alias
   match="^relo(\s+[A-Za-z0-9\.\-\'\,]+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'relocate' "..Trim("%1"))</send>
  </alias>
  <alias
   script="reloHelp"
   match="^relohelp$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^remp(\s+[A-Za-z0-9\.\-\'\,]+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'remove poison' "..Trim("%1"))</send>
  </alias>
  <alias
   match="^rescue(on|off|status)$"
   enabled="y"
   group="rescuescript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("isautorescue",1)
  Execute("rescuestatus")
elseif  (Trim("%1") == "off") then
  SetVariable("isautorescue",0)
  Execute("rescuestatus")
elseif  (Trim("%1") == "status") then
  isautorescue= tonumber(GetVariable("isautorescue"))

  if (isautorescue==1) then
    Note("** Auto-rescue    : Enabled")
  else
    Note("** Auto-rescue    : Disabled")
  end 
end</send>
  </alias>
  <alias
   script="resetMem"
   match="^resetmem$"
   enabled="y"
   group="spelltracker"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="resetMem"
   match="^resetmem$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--calls arctic.lua</send>
  </alias>
  <alias
   match="^resetproxy$"
   enabled="y"
   group="proxy_script"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local charname = ""
local passwd = ""
local proxyip = ""

SetVariable("my_proxy_password","")
SetAlphaOption("proxy_server",proxyip)
SetAlphaOption("proxy_username","")
SetOption("proxy_port",61336)
SetOption("proxy_type",0)
SetOption("connect_method",0)  --DIKU
SetAlphaOption("proxy_password",passwd)
SetAlphaOption("player",charname)
SetAlphaOption("password",passwd)
SetAlphaOption("port","2700")

</send>
  </alias>
  <alias
   match="^rheat$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Hairesach rheat")
else
  Execute("doautostand;cast 'resist' heat")
end</send>
  </alias>
  <alias
   match="^roc2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="n;e;n;n;e;e;n;n;e;e;e;n;n;n;w;n;n;n;n;n;e;n;n;n;n;w;n;n;n;n"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^rr(\s+[A-Za-z]+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get recall @container;recite recall "..Trim("%1"))</send>
  </alias>
  <alias
   match="^rrr$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>get glowing.recall @container
recite glowing.recall</send>
  </alias>
  <alias
   match="^s2blacken$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;s;s;s;s;s;w;s;w;w;w;s;s;u;s;u;s;w")
else
  Execute("fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade w;fade s;fade s;fade u;fade s;fade u;fade s;fade w")
end</send>
  </alias>
  <alias
   match="^s2bluff$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;e;e;n;n;n;n;n;e;e;e;e;n;n;n;e;e;e;e;e;e;e;e;e;s;s;s;s;s;e;e;e;e;e;e;n;n;n;n;n")
else
  Execute("fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^s2darken$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;w;s;w;w;s;s;s;e;e;e;e;e;s;s;s;w;w;s;s;e;e")
else
  Execute("fade s;fade w;fade s;fade w;fade w;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^s2fc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;e;e;e;n;n;e;n;e;n")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade e;fade n;fade e;fade n")
end</send>
  </alias>
  <alias
   match="^s2flurry$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;s;w;s;w;s;w;n;w;s;w;d;d;w;n;w")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade w;fade s;fade w;fade n;fade w;fade s;fade w;fade d;fade d;fade w;fade n;fade w")
end</send>
  </alias>
  <alias
   match="^s2lytburg$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;e;e;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;w;w;w;w;w;w;w;w;n;w;w;n;n;n;n;n;n;n;n;e;n;n;e;e;e;n;e;s;s;s;w;w;w;w;s;e;s;s;s;s")
else
  Execute("fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade e;fade e;fade e;fade n;fade e;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade e;fade s;fade s;fade s;fade s;")
end</send>
  </alias>
  <alias
   match="^s2new$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;e;s;s;s;s;w;s;s;s;s;s;e;s;e")
else
  Execute("fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade e")
end</send>
  </alias>
  <alias
   match="^s2poc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;e;e;n;n;n;n;n;n;n;n;n;n;n;n;n;n;open door e;e;close door w")
else
  Execute("fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;open door e;fade e;close door w")
end</send>
  </alias>
  <alias
   match="^s2roc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="s;s;s;s;e;s;s;s;s;w;s;s;s;s;s;e;s;s;s;w;w;w;s;s;w;w;s;s;w;s"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^s2sinia$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;e;s;e;e;e;e;s;s;s;e;s;e;s;e;s;s")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade e;fade s;fade e;fade s;fade e;fade s;fade s")
end</send>
  </alias>
  <alias
   match="^scanr$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isscanreturn",1)
Send("scan")</send>
  </alias>
  <alias
   match="^scribe(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoscribe")) == 1) then
    Note("** Auto-scribe    : Enabled")
  else
    Note("** Auto-scribe    : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautoscribe",1) 
  Note("** Auto-scribe    : Enabled")
else
  SetVariable("isautoscribe",0) 
  Note("** Auto-scribe    : Disabled")
end </send>
  </alias>
  <alias
   match="^sellcomps$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("inventory")
EnableTriggerGroup("spellcomps",true)
SetVariable("issellcomps",1)</send>
  </alias>
  <alias
   match="^setcont(\s+[0-9A-Za-z\.]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("container",Trim("%1"))
</send>
  </alias>
  <alias
   match="^setdelay( ([0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("engagedelay","%2")
end
Note("** Engage delay: "..GetVariable("engagedelay"))
</send>
  </alias>
  <alias
   match="^setdrink( [0-9A-Za-z\.\*]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  SetVariable("drink",Trim("%1"))
end

Note("** Drink          : "..GetVariable("drink"))</send>
  </alias>
  <alias
   match="^setengage(\s+.+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  SetVariable("engageaction",Trim("%1"))
end

Note("** Engage Action  : "..GetVariable("engageaction"))
Execute("rdelaystatus")</send>
  </alias>
  <alias
   match="^setfood( [0-9A-Za-z\.\*]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  SetVariable("food",Trim("%1"))
end

Note("** Food           : "..GetVariable("food"))</send>
  </alias>
  <alias
   match="^sethdelay( ([0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#"%1" &gt; 0) then
  SetVariable("healdelay","%2")
end
Note("** Heal delay     : "..GetVariable("healdelay"))
</send>
  </alias>
  <alias
   match="^setleader(\s+[A-Za-z]+)?$"
   enabled="y"
   expand_variables="y"
   group="leaderscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%1") &gt; 0) then
  SetVariable("leader",Trim(Proper("%1")))
end
Note("** Leader         : "..GetVariable("leader"))
</send>
  </alias>
  <alias
   match="^setmain(\s+[A-Za-z]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%1") &gt; 0) then
  SetVariable("maintank",Trim(Proper("%1")))
end

Note("** Main tank      : "..GetVariable("maintank"))</send>
  </alias>
  <alias
   match="^sfa$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'summon faerie'")</send>
  </alias>
  <alias
   script="doShamanBotOff"
   match="^sh(a)?botoff$"
   enabled="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="doShamanBotOn"
   match="^sh(a)?boton$"
   enabled="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="doShamanBotStatus"
   match="^sh(a)?botstatus$"
   enabled="y"
   group="shamanbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^sharpen(on|off|status|all)$"
   enabled="y"
   group="barb_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1")=="on") then
  SetVariable("isautosharpen",1)
  Execute("sharpenstatus")
elseif (Trim("%1")=="off") then
  SetVariable("isautosharpen",0)
  Execute("sharpenstatus")
elseif (Trim("%1")=="status") then
  if (tonumber(GetVariable("isautosharpen"))==1) then
    Note("** Auto-sharpen   : Enabled")
  else
    Note("** Auto-sharpen   : Disabled")
  end
elseif (Trim("%1")=="all") then
  for i = 1,7,1    do
    Execute("sharpen "..tostring(i)..".dagger in inv")
    Execute("lore "..tostring(i)..".dagger in inv")
  end
end</send>
  </alias>
  <alias
   match="^showconn$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note(IsSocketConnected())</send>
  </alias>
  <alias
   match="^showgrouparr$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--[[
function trim1(s)
    return (s:gsub("^%s*(.-)%s*$", "%1"))
end
--]]

if (groupArr ~= nil) then
  for i,v in ipairs(groupArr)
    do
      print(Trim(v))
    end
else
  Note("groupArr is nil")
end
</send>
  </alias>
  <alias
   match="^showhealertype$"
   enabled="y"
   group="healbot"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isMainHealer"))==1) then
  Note("** Healer mode    : Main")
elseif (tonumber(GetVariable("isMainHealer"))==0) then
  Note("** Healer mode    : Group")
end</send>
  </alias>
  <alias
   script="showHeals"
   match="^showheals$"
   enabled="y"
   group="spelltracker"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   script="showGroupXML"
   match="^showxml$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^shr(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'fla shr' %2")
else
  Execute("cast 'fla shr'")
end
</send>
  </alias>
  <alias
   match="^skill(on|status|off)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautoskill")) == 1) then
    Note("** Auto-skill     : Enabled")
  else
    Note("** Auto-skill     : Disabled")
  end 
elseif (Trim("%1") == "on") then
  SetVariable("isautoskill",1) 
  Note("** Auto-skill     : Enabled")
else
  SetVariable("isautoskill",0) 
  Note("** Auto-skill     : Disabled")
end </send>
  </alias>
  <alias
   match="^skim(\s+(\d+))?$"
   enabled="y"
   expand_variables="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  SetVariable("skimamount",tonumber("%2"))
end
Execute("splitstatus")</send>
  </alias>
  <alias
   match="^skim(on|off)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("doskim",1)
  Execute("splitstatus")
elseif (Trim("%1") == "off") then
  SetVariable("doskim",0)
  Execute("splitstatus")
end</send>
  </alias>
  <alias
   match="^skybotoff$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isskybot",0)
SetVariable("isautoburst",0)
Execute("skybotstatus")</send>
  </alias>
  <alias
   match="^skyboton$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isskybot",1)
SetVariable("isShamanbot",0)
SetVariable("isaimneeded",1)
SetVariable("isshootneeded",1)
SetVariable("isdruidbot",0)
SetVariable("isHealbot",0)
SetVariable("ismagebot",0)
--SetVariable("isautoflee",1)
if (tonumber(GetVariable("islegendary"))==1) then
  SetVariable("isautoburst",1)
else
  SetVariable("isautoburst",0)
end

Execute("autostandon;assoff;fleeon;fadeon;rescueoff;skybotstatus")</send>
  </alias>
  <alias
   match="^skybotstatus$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("isskybot"))==1) then
  Note("** Skybot         : Enabled")
else
  Note("** Skybot         : Disabled")
end
Execute("rescuestatus;assiststatus;fadestatus;burststatus;fleesafestatus")</send>
  </alias>
  <alias
   match="^slife$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>cast 'sense life'</send>
  </alias>
  <alias
   script="snoopChar"
   match="^snoop(\d+)?(\s+[A-Za-z]*)?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("%1 %2")</send>
  </alias>
  <alias
   match="^so2s$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;n;n;w;n;n;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w")
else
  Execute("fade w;fade n;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   script="resetSpell_List"
   match="^spellreset$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--for testing only</send>
  </alias>
  <alias
   match="^split(on|off)$"
   enabled="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "on") then
  SetVariable("doautosplit",1)
elseif (Trim("%1") == "off") then
  SetVariable("doautosplit",0)
end </send>
  </alias>
  <alias
   match="^splitstatus$"
   enabled="y"
   expand_variables="y"
   group="splitscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tonumber(GetVariable("doautosplit"))==1) then
  Note("** Auto-split     : Enabled")
else
  Note("** Auto-split     : Disabled")
end

if (tonumber(GetVariable("doskim"))==1) then
  Note("** Skimming       : Enabled (".."@skimamount".."%)")
else
  Note("** Skimming       : Disabled")
end

if (tonumber("@doexam") == 1) then
  Note("** Examine corpse : Enabled")
else
  Note("** Examine corpse : Disabled")
end</send>
  </alias>
  <alias
   match="^sr([0-9]+)(\s+[A-Za-z]+)$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("char%1",Proper(Trim("%2")))
Note("** Variable char%1: "..GetVariable("char%1"))</send>
  </alias>
  <alias
   match="^sray$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (GetVariable("charClass") ~= "Cleric") then
  Execute("oone Aemon cast 'sunray';oone Rhonda cast 'sunray'")
else
  Execute("cast 'sunray'")
end
</send>
  </alias>
  <alias
   match="^ss$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("ps")</send>
  </alias>
  <alias
   match="^stc$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'storm call'")</send>
  </alias>
  <alias
   match="^stone(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage stone %2")
  else
    Send("cast 'stone skin' %2")
  end
end

</send>
  </alias>
  <alias
   match="^stone(on|off|status)$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "off") then
  SetVariable("isautostone",0)
  Execute("stonestatus")
elseif (Trim("%1") == "on") then
  SetVariable("isautostone",1)
  Execute("stonestatus")
elseif (Trim("%1") == "status") then
  if (tonumber(GetVariable("isautostone"))==1) then
    Note("** Auto-Stone     : Enabled")
  else
    Note("** Auto-Stone     : Disabled")
  end
end</send>
  </alias>
  <alias
   match="^stone(p|g)$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1") == "p") then
  SetVariable("stonemain",1)
elseif (Trim("%1") == "g") then
  SetVariable("stonemain",0)
end</send>
  </alias>
  <alias
   match="^strat$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("cast 'strati'")</send>
  </alias>
  <alias
   match="^strme(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   group="efreeti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get iron.flask "..GetVariable("container"))
Execute("empty iron.flask")

if (string.len("%2") &gt; 0) then
  Execute("order efreeti cast 'strength' %2")
else
  Execute("order efreeti cast 'strength' "..GetVariable("charname"))
end

Execute("capture efreeti")
Execute("put iron.flask "..GetVariable("container"))</send>
  </alias>
  <alias
   match="^summon(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0 and GetVariable("charClass") == "Druid") then
  Execute("doautostand;cast 'summon' %2")
else
  Execute("doautostand")
  Send("summon %2")
end
</send>
  </alias>
  <alias
   match="^sust(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'suste' %2")
else
  Execute("cast 'suste' me")
end
</send>
  </alias>
  <alias
   match="^sw(\s[A-Za-z0-9\.\-\'\,]+)?$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (#Trim("%1")&gt;0) then
  Send("swoop "..Trim("%1"))
else
  Send("swoop")
end</send>
  </alias>
  <alias
   match="^swarm$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
  Execute("oone Royderage swarm")
else
  Send("cast 'insect swarm' ")
end</send>
  </alias>
  <alias
   match="^temp(\s+([A-Za-z0-9\.]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'temp p' %2")
else
  Execute("cast 'temp p'")
end
</send>
  </alias>
  <alias
   script="doTestClocks"
   match="^testclock$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^testconnect( ([A-Za-z0-9\.]+) (\d+))?$"
   enabled="y"
   expand_variables="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (not IsSocketConnected()) then
  c = nil
  socket = require("socket")
end

if (string.len("%1") &gt; 0 ) then
  if (IsSocketConnected()) then
    Note("Already connected to server.")
  else
    c = assert(socket.connect("%2", tonumber("%3")))
    Note("Connected!")
    --l = io.read()
    l = "&lt;msg&gt;&lt;cmd&gt;NOTIFY&lt;/cmd&gt;&lt;payload&gt;Hello from MUSH&lt;/payload&gt;&lt;/msg&gt;";
    assert(c:send(l.."\\n"))
--[[
    l, e = c:receive()
    if (not e) then
      Note(l)
    end
--]]
    ParseCommand()
  end
else
  Note("** Incorrect syntax: testconnect &lt;address&gt; &lt;port&gt;")
end</send>
  </alias>
  <alias
   match="^testparse(\s+.+)$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Note(Trim("%1"))
Note(  doParseTarget(  Trim("%1")  )   )</send>
  </alias>
  <alias
   match="^testscan$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isscanreturn",1)
EnableTriggerGroup("tickscript",false)
EnableTimer("ticktimer",false)</send>
  </alias>
  <alias
   match="^testscanoff$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isscanreturn",0)
EnableTriggerGroup("tickscript",true)
EnableTimer("ticktimer",true)</send>
  </alias>
  <alias
   match="^th2dargaard$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="e;n;n;e;e;e;e;e;e;e;e;n;e;e;e;n;e;e;s;s;s;s;s;s;e;s;s;s;w;w;s;s;e;s;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^th2gorm$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="e;n;n;e;e;e;e;e;e;e;e;n;e;e;e;n;e;e;s;s;s;s;s;s;e;s;s;s;w;w;s;s;e;s;s;s;e;s;s;s;s;s;e;s;e;s"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^th2poc$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;s;s;w;s;s;s;s;s;s;s;s;e;e;s;e;e;e;e;e;e;e;e;s;open door e;e;close door w")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;open door e;fade e;close door w")
end</send>
  </alias>
  <alias
   match="^tirabot2k$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local fademode = tonumber(GetVariable("fademode"))
local str ="w;w;w;n;n;n;w;n;n;e;e;s;s;s;s;s;e;e;e;e"

if (fademode == 1) then
  Execute(speedwalkToFadewalk(str))
else
  Execute(str)
end</send>
  </alias>
  <alias
   match="^tlick( [0-9A-Za-z\,\.\-\'\s]+)?$"
   enabled="y"
   expand_variables="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len(Trim("%1")) &gt; 0) then
  Execute("tickle "..Trim("%1")..";lick "..Trim("%1"))
else
  Execute("tickle;lick")
end</send>
  </alias>
  <alias
   match="^train(off|status)$"
   enabled="y"
   group="bot_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (Trim("%1")=="off") then
  SetVariable("isbottrain",0)
  Execute("trainstatus")
  EnableTimer("bottrain_timer", false)
elseif (Trim("%1")=="status") then
  if (tonumber(GetVariable("isbottrain")) == 1) then
    Note("** Bot-train      : Enabled")
  elseif  (tonumber(GetVariable("isbottrain")) == 0) then
    Note("** Bot-train      : Disabled")
  end
end
</send>
  </alias>
  <alias
   script="doBotTrain"
   match="^trainon$"
   enabled="y"
   group="bot_train"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </alias>
  <alias
   match="^ts(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("cast 'thorn spray' %2")
else
  Execute("cast 'thorn spray'")
end
</send>
  </alias>
  <alias
   match="^uu$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("pu")</send>
  </alias>
  <alias
   script="getVersion"
   match="^version$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  </alias>
  <alias
   match="^vice$"
   enabled="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Hairesach vice")
  else
    Execute("doautostand;cast 'veil of ice'")
  end</send>
  </alias>
  <alias
   match="^volley$"
   enabled="y"
   group="scoutscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Scout") then
  Execute("oone Moinier volley")
else
  Send("volley")
end</send>
  </alias>
  <alias
   match="^wb(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  if (IsSocketConnected() and GetVariable("charClass")~="Druid") then
    Execute("oone Royderage wb %2")
  else
    Execute("doautostand;cast 'wat b' %2")
  end
end
</send>
  </alias>
  <alias
   match="^wb2ft$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;w;n;n;n;n;w;w;w;w;w;w;w;s;w;w;w;w;w;w;n;n;n;n;e;e;e;e;n;w;w;n;n;n")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade n;fade w;fade w;fade n;fade n;fade n")
end
Note("** Fly or die on DT")</send>
  </alias>
  <alias
   match="^wb2gp$"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;w;w;w;w;w;n;n;n;n;n;n;e;n;n;n;n;n;n;e;e;e;e;e;e")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^wb2th$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;e;e;e;e;e;n;n;n;n;e;n;e;e;e;e;n;e;e;e;n;n;n;n;n;n;e;n;n;n;n;e;n;n;w;n;n;n")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="^wbme(\s+([0-9\.A-Za-z]+))?$"
   enabled="y"
   group="efreeti"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("get iron.flask "..GetVariable("container"))
Execute("empty iron.flask")

if (string.len("%2") &gt; 0) then
  Execute("order efreeti cast 'w b' %2")
else
  Execute("order efreeti cast 'w b' "..GetVariable("charname"))
end

Execute("capture efreeti")
Execute("put iron.flask "..GetVariable("container"))</send>
  </alias>
  <alias
   match="^wc2t$"
   enabled="y"
   group="speedwalk"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("u;s;u;s;s;s;e;u;s;d;e;n;e;e;n;e;n;n;n;e;n;e;e")
else
  Execute("fade u;fade s;fade u;fade s;fade s;fade s;fade e;fade u;fade s;fade d;fade e;fade n;fade e;fade e;fade n;fade e;fade n;fade n;fade n;fade e;fade n;fade e;fade e")
end</send>
  </alias>
  <alias
   match="^wdance$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (IsSocketConnected() and GetVariable("charClass")~="Barbarian") then
    Execute("oone Kog wilddance")
  else
    Execute("doautostand")
    Send("wilddance")
  end</send>
  </alias>
  <alias
   match="^wep$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>wiel @weap1</send>
  </alias>
  <alias
   match="^whob$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>whonames = {}
SetVariable("iswhobgood",0)
Execute("who brief mortal")
EnableTrigger("whob_line",true)</send>
  </alias>
  <alias
   match="^wield( .+)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("wield "..Trim("%1"))
SetVariable("weap1",Trim("%1"))</send>
  </alias>
  <alias
   match="^wm$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   sequence="100"
  >
  <send>watch @char1</send>
  </alias>
  <alias
   match="^word(\s+([A-Za-z]+))?$"
   enabled="y"
   expand_variables="y"
   group="druidscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.len("%2") &gt; 0) then
  Execute("doautostand;cast 'word o recal' %2")
else
  Execute("doautostand;cast 'word o recall' me")
end
</send>
  </alias>
  <alias
   script="doGroupWordofRecall"
   match="^wordall$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </alias>
  <alias
   match="^wordpot$"
   enabled="y"
   expand_variables="y"
   group="OC_scripts"
   regexp="y"
   send_to="10"
   sequence="100"
  >
  <send>get @wordpot @container;quaff @wordpot</send>
  </alias>
  <alias
   match="^ws$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("wingsweep")</send>
  </alias>
  <alias
   match="^ww$"
   enabled="y"
   group="OC_scripts"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("pw")</send>
  </alias>
  <alias
   match="^wye$"
   enabled="y"
   group="serverscript"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
if (IsSocketConnected() and GetVariable("charClass")~="Red Robe") then
    Execute("oone Alanis wye")
  else
    Execute("doautostand;cast 'wizard eye'")
  end</send>
  </alias>
  <alias
   match="dostand"
   enabled="y"
   group="autostandscript"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("isstanding",0)
Note("----- YOU ARE SITTING -----")
Execute("autostandstatus")
Execute("doautostand")</send>
  </alias>
  <alias
   match="qk2th"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;e;s;s;e;s;s;s;s;s;w;s;w;w;w;w;w;w;w;w;s;s;w")
else
  Execute("fade s;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade w")
end</send>
  </alias>
  <alias
   match="s2f"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;n;n;n;e;e;e")
else
  Execute("fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="s2gp"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;w;w;n;n;n;n;n;n;w;w;w;w;w;s;s;s;s;s;w;w;w;w;w;w;w;n;n;n;n;n;n;e;n;n;n;n;n;n;e;e;e;e;e;e")
else
  Execute("fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="s2qk"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;e;e;e;e;e")
else
  Execute("fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="s2qt"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;e;s;s;e;e;n;n;e;n;n;n;e")
else
  Execute("fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade e;fade e;fade n;fade n;fade e;fade n;fade n;fade n;fade e")
end</send>
  </alias>
  <alias
   match="s2quali"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;e;s;s;s;s;w;s;s;s;s;s;e;s;s;s;w;w;w;s;s;w;w;w;w;s;s;s;s;w;s;s;s;w;move bush;s;s;s;w;s;w;w;w;s")
else
  Execute("fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade w;move bush;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="s2so"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s;s;e;s;s;e")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade s;fade e")
end</send>
  </alias>
  <alias
   match="s2th"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;e;e;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;w;n;n;w;w;w;n;n;n;e;n;n;n;n;e;n;n;w;n;n;n")
else
  Execute("fade n;fade n;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="s2thor"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;e;s;s;s;s;w;s;s;s;s;s;e;s;s;s;s;w;s;s;s;s;e;s;s;s;e;e;e;s;e;s;s;s;s;s;e;e;e;s;u;s;u;s;s;d;s;w;s;s;s")
else
  Execute("fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade u;fade s;fade u;fade s;fade s;fade d;fade s;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="s2wb"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;w;w;n;n;n;n;n;n;w;w;w;w;w;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="sanc2n"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;d;s;d;w;n;n;u;e;n;n;e;e;n;u;e;e;e;u;u;n;n;w;n;n;n")
else
  Execute("fade w;fade d;fade s;fade d;fade w;fade n;fade n;fade u;fade e;fade n;fade n;fade e;fade e;fade n;fade u;fade e;fade e;fade e;fade u;fade u;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="shaydes2wb"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;w;w;n;n;n;n;n;w;w;n;w;w;w;w;w;w;s;s;s;s;e;e;e;e;e;e;n;e;e;e;e;e;e;e;s;s;s;s;e;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="silvi2bard"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;w;n;n;n;w;u;n;n;d;w;w;w;w;w;w;s;w;u;n;n;n;n")
else
  Execute("fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade w;fade u;fade n;fade n;fade d;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade u;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="sinia2s"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;w;n;w;n;w;n;n;n;w;w;w;w;n;w;n;n;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w")
else
  Execute("fade n;fade n;fade w;fade n;fade w;fade n;fade w;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade n;fade w;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="slarn2wb"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;d;w;d;w;d;w;w;w;w;s;w;w;n;w;w;w;w;w;w;s;s;s;s;e;e;e;e;e;e;n;e;e;e;e;e;e;e;s;s;s;s;e;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade e;fade d;fade w;fade d;fade w;fade d;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="sorin2n"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;n;n;n;e;e;n;n;w;u;w;w;w;w;w;w;w")
else
  Execute("fade n;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade n;fade n;fade w;fade u;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="sr2t"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;n;w;n;n;n;w;n;n;w;n;n;n;n;n")
else
  Execute("fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade w;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="sr2tower"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;e;e;e;e;s;e;s;s;s;s")
else
  Execute("fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="sr2vry"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;w;w;w;w;w;w;w;w;s;s;s;s;s;s;s;s;s;s;s;s;s;s;w;n;s")
else
  Execute("fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade n;fade s")
end</send>
  </alias>
  <alias
   match="storms2th"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;w;s;e;s;s;w;n;w;w;w;w;w;w;s;w;w;w;n;n;e;n;n;w;n;n;n")
else
  Execute("fade s;fade w;fade s;fade e;fade s;fade s;fade w;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade n;fade n;fade e;fade n;fade n;fade w;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="t2ck"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;e;e;s;d;e;e;e;u;e;e;n;d;s;s;s;e;s;s;s;s;e;e;e;s;s;e;n;n;e;n;e;e;n;n;n;e;e;n;e;u;s;u;s;e;u;e;u;n")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade d;fade e;fade e;fade e;fade u;fade e;fade e;fade n;fade d;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade s;fade e;fade n;fade n;fade e;fade n;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade u;fade s;fade u;fade s;fade e;fade u;fade e;fade u;fade n")
end</send>
  </alias>
  <alias
   match="t2hopeful"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;n;n;w;n;n;n;w;w;n;n;n;n;n;e")
else
  Execute("fade n;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade e")
end</send>
  </alias>
  <alias
   match="t2hopeful"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;n;n;w;n;n;n;w;w;n;n;n;n;n;e;n;n;n;n;n;n;n;w;s;e")
else
  Execute("fade n;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade s;fade e")
end</send>
  </alias>
  <alias
   match="t2sr"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;e;s;s;e;s;s;s;e;s;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;s")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s")
end</send>
  </alias>
  <alias
   match="t2tent"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;s;w;w;w;w;n;w;w;n;w;s;s")
else
  Execute("fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade n;fade w;fade s;fade s")
end</send>
  </alias>
  <alias
   match="t2thor"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;w;n;n;w;n;n;n;w;w;n;n;n;n;n;n;n;n;n;n;n;u;n;n;n;u;n;n;n;w;w;n;w;u;n;n;n;n")
else
  Execute("fade n;fade w;fade n;fade n;fade w;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade n;fade u;fade n;fade n;fade n;fade u;fade n;fade n;fade n;fade w;fade w;fade n;fade w;fade u;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="t2twe"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;e;e;e;s;e;e;e;e;n;n;e;u;s")
else
  Execute("fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade e;fade e;fade n;fade n;fade e;fade u;fade s")
end</send>
  </alias>
  <alias
   match="t2vry"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;s;e;s;s;e;s;s;s;e;s;e;e;e;e;e;e;e;s;s;s;s;s;s;s;s;s;s;s;s;s;s;w;n;s")
else
  Execute("fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade n;fade s")
end</send>
  </alias>
  <alias
   match="t2wc"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;s;w;s;s;s;w;s;w;w;s;w;u;n;d;w;n;n;n;d;n;d")
else
  Execute("fade w;fade w;fade s;fade w;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade s;fade w;fade u;fade n;fade d;fade w;fade n;fade n;fade n;fade d;fade n;fade d")
end</send>
  </alias>
  <alias
   match="th2caergoth"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;s;s;w;s;w;w;w;w;w;w;w;w;w;w;w;u;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade u;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="th2garnet"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;e;e;e;n;e;e")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e")
end</send>
  </alias>
  <alias
   match="th2k"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;e;e;e;e;e;e;e;e;n;e;e;e;n;e;e;s;s;s;s;e;e;s;s;s;s;s;e;e;e;open gate e;e;close gate w")
else
  Execute("fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade n;fade e;fade e;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;open gate e;fade e;close gate w")
end</send>
  </alias>
  <alias
   match="th2lemish"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;e;e;e;n;e;e;e;e;e;e;s;e;e;s;e;e;s;e;e;s;e;e;e;s;s;w;s;s;s")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade s;fade s;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="th2luni"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;e;e;e;n;e;e;e;e;e;e;s;e;e;s;e;e;s;e;e;s;e;e;e;s;s;w;s;s;s;s;s;s;e;s;s;w;s;s;s;s;s;s;w;s;s;s;e;e;e;n;n;u;n;n;w;u;n;w")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade s;fade e;fade e;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade e;fade e;fade e;fade n;fade n;fade u;fade n;fade n;fade w;fade u;fade n;fade w")
end</send>
  </alias>
  <alias
   match="th2lytburg"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;e;e;e;n;e;s;s;s;w;w;w;w;s;e;s;s;s;s")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade s;fade e;fade s;fade s;fade s;fade s;")
end</send>
  </alias>
  <alias
   match="th2mo"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;n;n;w;w;d;w;w;u;w;n;n;e;e;n;n;n;w;w;n;n;n;w;w")
else
  Execute("fade w;fade w;fade w;fade w;fade n;fade n;fade w;fade w;fade d;fade w;fade w;fade u;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade w;fade w")
end</send>
  </alias>
  <alias
   match="th2n"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;e;e;e;e;e;e;e;e;n;e;e;e;n;e;e;s;s;s;s;s;s;e;s;s;s;w;w;s;s;e;s;s;s;e;s;s;s;s;s;e;s;e;s;s;e;u;e;e;e;u;e;e;e;d;e;e;e;e;e;d;s;s;s;s;s")
else
  Execute("fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade n;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade w;fade w;fade s;fade s;fade e;fade s;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade s;fade e;fade s;fade s;fade e;fade u;fade e;fade e;fade e;fade u;fade e;fade e;fade e;fade d;fade e;fade e;fade e;fade e;fade e;fade d;fade s;fade s;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="th2nr"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;e;e;e;e;e;e;e;e;n;e;e;e;n;e;e;n;e;e")
else
  Execute("fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade n;fade e;fade e;fade n;fade e;fade e")
end</send>
  </alias>
  <alias
   match="th2p"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("w;w;w;w;n;n;w;w;d;w;w;u;w;n;n;e;e;n;n;n;w;w;n;n;n;n;n;n;w;w;w;w;w;w;w;w;n")
else
  Execute("fade w;fade w;fade w;fade w;fade n;fade n;fade w;fade w;fade d;fade w;fade w;fade u;fade w;fade n;fade n;fade e;fade e;fade n;fade n;fade n;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade n")
end</send>
  </alias>
  <alias
   match="th2qk"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;n;n;e;e;e;e;e;e;e;e;n;e;n;n;n;n;n;w;n;n;w;n;n")
else
  Execute("fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="th2qkiri"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;s;s;w;s;s;s;e;e;e;s;s;e;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;e;e;e")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="th2s"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;s;s;w;s;s;s;e;e;e;s;s;e;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;w;w;w;s;s;s")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="th2storms"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;e;e;e;n;e;e;e;e;e;e;s;e;n;n;w;n;e;n")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade n;fade n;fade w;fade n;fade e;fade n")
end</send>
  </alias>
  <alias
   match="th2vk"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;e;s;s;s;w;n;n;w;w")
else
  Execute("fade s;fade e;fade s;fade s;fade s;fade w;fade n;fade n;fade w;fade w")
end</send>
  </alias>
  <alias
   match="th2wb"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;e;s;s;w;s;s;s;s;w;s;s;s;s;s;s;w;w;w;s;w;w;w;w;s;w;s;s;s;s;w;w;w;w;w;s;s;s;s;s;w;w;n;n;n;n;e;n;n;n;w;w;s")
else
  Execute("fade s;fade s;fade s;fade e;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade s;fade w;fade s;fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade s;fade s;fade s;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="thor2fc"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;w;w;w;w;w;w;w;w;w;w;w;s;s;e;s;s;s;u;u;e")
else
  Execute("fade s;fade s;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade s;fade e;fade s;fade s;fade s;fade u;fade u;fade e")
end</send>
  </alias>
  <alias
   match="thor2quali"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;n;u;n;n;d;n;d;n;w;w;w;n;n;n;n;n;w;n;w;w;w;n;n;n;w;n;n;n;n;e;n;w;w;w;s;s;w;w;s;s;w;s;w;s;s;e;s;s;w;w;s;w;s;s;s;w;s;w;w;w;s")
else
  Execute("fade n;fade n;fade n;fade e;fade n;fade u;fade n;fade n;fade d;fade n;fade d;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade w;fade w;fade w;fade s;fade s;fade w;fade w;fade s;fade s;fade w;fade s;fade w;fade s;fade s;fade e;fade s;fade s;fade w;fade w;fade s;fade w;fade s;fade s;fade s;fade w;fade s;fade w;fade w;fade w;fade s")
end</send>
  </alias>
  <alias
   match="thor2s"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;n;n;e;n;u;n;n;d;n;d;n;w;w;w;n;n;n;n;n;w;n;w;w;w;n;n;n;w;n;n;n;n;e;n;n;n;n;w;n;n;n;n;n;e;n;n;n;n;w;n;n;n;n")
else
  Execute("fade n;fade n;fade n;fade e;fade n;fade u;fade n;fade n;fade d;fade n;fade d;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade w;fade w;fade w;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade n;fade e;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="thor2t"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("s;s;s;s;d;e;s;e;e;s;s;s;d;s;s;s;d;s;s;s;s;s;s;s;s;s;s;s;e;e;s;s;s;e;s;s;s")
else
  Execute("fade s;fade s;fade s;fade s;fade d;fade e;fade s;fade e;fade e;fade s;fade s;fade s;fade d;fade s;fade s;fade s;fade d;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s;fade s;fade e;fade s;fade s;fade s")
end</send>
  </alias>
  <alias
   match="twe2bard"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;e;e;n;n;n;e;e;e;e;e;e;n;n;e;u;n;n;n;n;e;e;n;e;e;e;e;n;n;n;u;n;n;n;n;n")
else
  Execute("fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade e;fade u;fade n;fade n;fade n;fade n;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade u;fade n;fade n;fade n;fade n;fade n")
end</send>
  </alias>
  <alias
   match="twe2t"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;d;w;s;s;w;w;w;w;n;w;w;w;w;w")
else
  Execute("fade n;fade d;fade w;fade s;fade s;fade w;fade w;fade w;fade w;fade n;fade w;fade w;fade w;fade w;fade w")
end</send>
  </alias>
  <alias
   match="vk2th"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("e;e;s;s;e;n;n;n;w;n")
else
  Execute("fade e;fade e;fade s;fade s;fade e;fade n;fade n;fade n;fade w;fade n")
end</send>
  </alias>
  <alias
   match="wb2garret"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;w;n;n;n;n;w;w;w;w;w;w;w;s;w;w;w;w;w;w;n;n")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n")
end</send>
  </alias>
  <alias
   match="wb2h"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;e;e;e;e;u;u;s;e;e;e;e;e;e;s;e;s;e;e;e;e;e;e;n;e;e;e;e;e")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade e;fade e;fade e;fade e;fade u;fade u;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade s;fade e;fade e;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade e")
end</send>
  </alias>
  <alias
   match="wb2poc"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;e;e;e;e;e;n;n;n;n;e;n;e;e;e;e;n;e;e;e;n;n;n;e;e;e;s;s;e;s;e")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade n;fade n;fade n;fade n;fade e;fade n;fade e;fade e;fade e;fade e;fade n;fade e;fade e;fade e;fade n;fade n;fade n;fade e;fade e;fade e;fade s;fade s;fade e;fade s;fade e")
end</send>
  </alias>
  <alias
   match="wb2s"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;e;e;e;e;e;s;s;s;s;s;s;e;e;s;s")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade s;fade s")
end</send>
  </alias>
  <alias
   match="wb2shaydes"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;w;n;n;n;n;w;w;w;w;w;w;w;s;w;w;w;w;w;w;n;n;n;n;e;e;e;e;e;e;s;e;e;s;s;s;s;s;e;e;e;s")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s")
end</send>
  </alias>
  <alias
   match="wb2shayds"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;w;n;n;n;n;w;w;w;w;w;w;w;s;w;w;w;w;w;w;n;n;n;n;e;e;e;e;e;e;s;e;e;s;s;s;s;s;e;e;e;s")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade s;fade s;fade s;fade s;fade s;fade e;fade e;fade e;fade s")
end</send>
  </alias>
  <alias
   match="wb2slarn"
   enabled="y"
   group="speedwalk"
   send_to="12"
   sequence="100"
  >
  <send>fademode = tonumber(GetVariable("fademode"))
Execute("fly")
if (fademode == 0) then
  Execute("n;e;e;s;s;s;w;s;s;s;s;e;e;n;n;n;n;n;w;n;n;n;n;w;w;w;w;w;w;w;s;w;w;w;w;w;w;n;n;n;n;e;e;e;e;e;e;s;e;e;n;e;e;e;e;u;e;u;e;u;w")
else
  Execute("fade n;fade e;fade e;fade s;fade s;fade s;fade w;fade s;fade s;fade s;fade s;fade e;fade e;fade n;fade n;fade n;fade n;fade n;fade w;fade n;fade n;fade n;fade n;fade w;fade w;fade w;fade w;fade w;fade w;fade w;fade s;fade w;fade w;fade w;fade w;fade w;fade w;fade n;fade n;fade n;fade n;fade e;fade e;fade e;fade e;fade e;fade e;fade s;fade e;fade e;fade n;fade e;fade e;fade e;fade e;fade u;fade e;fade u;fade e;fade u;fade w")
end</send>
  </alias>
</aliases>

<!-- timers -->

<timers
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >
  <timer name="ticktimer" enabled="y" minute="1" second="0.00" offset_second="0.00"    send_to="12"
group="tickscript" >
  <send>Note("TICK!!!")
Execute("beforetick3")
Execute("aftertick3")
Execute("aftertick10")</send>

  </timer>
  <timer name="botskill_timer" script="doBotCombatSkill" second="5.00" offset_second="0.00"    send_to="12"
group="bot_train" >

  </timer>
  <timer name="bottrain_timer" script="doBotTrainTimer" minute="2" second="0.00" offset_second="0.00"    send_to="12"
group="bot_train" >
  <send>--</send>

  </timer>
</timers>

<!-- macros -->

<macros
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >

  <macro name="up" type="send_now" >
  <send>up</send>

  </macro>

  <macro name="down" type="send_now" >
  <send>down</send>

  </macro>

  <macro name="north" type="send_now" >
  <send>north</send>

  </macro>

  <macro name="south" type="send_now" >
  <send>south</send>

  </macro>

  <macro name="east" type="send_now" >
  <send>east</send>

  </macro>

  <macro name="west" type="send_now" >
  <send>west</send>

  </macro>

  <macro name="examine" type="replace" >
  <send>examine </send>

  </macro>

  <macro name="look" type="replace" >
  <send>look </send>

  </macro>

  <macro name="page" type="replace" >
  <send>page </send>

  </macro>

  <macro name="say" type="replace" >
  <send>say </send>

  </macro>

  <macro name="whisper" type="replace" >
  <send>whisper </send>

  </macro>

  <macro name="doing" type="send_now" >
  <send>DOING</send>

  </macro>

  <macro name="who" type="send_now" >
  <send>WHO</send>

  </macro>

  <macro name="drop" type="replace" >
  <send>drop </send>

  </macro>

  <macro name="take" type="replace" >
  <send>take </send>

  </macro>

  <macro name="F2" type="send_now" >
  <send>rest</send>

  </macro>

  <macro name="F3" type="send_now" >
  <send>group</send>

  </macro>

  <macro name="F5" type="send_now" >
  <send>get all.component corpse</send>

  </macro>

  <macro name="F10" type="send_now" >
  <send>rr</send>

  </macro>

  <macro name="F11" type="send_now" >
  <send>rrr</send>

  </macro>

  <macro name="F12" type="send_now" >
  <send>wordpot</send>

  </macro>

  <macro name="logout" type="send_now" >
  <send>LOGOUT</send>

  </macro>

  <macro name="quit" type="send_now" >
  <send>QUIT</send>

  </macro>

  <macro name="F1" type="send_now" >
  <send>stand</send>

  </macro>

  <macro name="F6" type="send_now" >
  <send>get all corpse</send>

  </macro>
</macros>

<!-- variables -->

<variables
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >
  <variable name="absolutioncount">1</variable>
  <variable name="acidblastcount">0</variable>
  <variable name="acidburncount">0</variable>
  <variable name="acidmistcount">0</variable>
  <variable name="aidcount">0</variable>
  <variable name="aiqzacount">0</variable>
  <variable name="allow_order">0</variable>
  <variable name="allow_snoop">1</variable>
  <variable name="amplifyspiritscount">0</variable>
  <variable name="ancestralblessingcount">1</variable>
  <variable name="ancestralshroudcount">0</variable>
  <variable name="ancestralspiritcount">0</variable>
  <variable name="animatedeadcount">0</variable>
  <variable name="antimagicshellcount">0</variable>
  <variable name="anvacount">0</variable>
  <variable name="arcanelashcount">0</variable>
  <variable name="arcaneshellcount">0</variable>
  <variable name="arcanespearcount">0</variable>
  <variable name="auraofglorycount">0</variable>
  <variable name="autostand">1</variable>
  <variable name="barb_skill_list">gore,wilddance,healdance,wardance</variable>
  <variable name="barkskincount">0</variable>
  <variable name="bartgtincount">0</variable>
  <variable name="blackrunecount">0</variable>
  <variable name="blesscount">1</variable>
  <variable name="blindnesscount">0</variable>
  <variable name="bljrcount">0</variable>
  <variable name="blurcount">0</variable>
  <variable name="boilingbloodcount">0</variable>
  <variable name="booncount">0</variable>
  <variable name="bow">bow</variable>
  <variable name="brilliancecount">1</variable>
  <variable name="burninghandscount">0</variable>
  <variable name="burst_start_time">0</variable>
  <variable name="calllightningcount">5</variable>
  <variable name="calmcount">0</variable>
  <variable name="causelightcount">3</variable>
  <variable name="cfzaheyaoecount">0</variable>
  <variable name="chainlightningcount">0</variable>
  <variable name="char1">Thun </variable>
  <variable name="char2">Faxinton </variable>
  <variable name="char3">Chungawong </variable>
  <variable name="char4">Aymahn </variable>
  <variable name="char5">Yhonk </variable>
  <variable name="char6">Hendo </variable>
  <variable name="char7">Alanis </variable>
  <variable name="char9">Glynda </variable>
  <variable name="charAge">17</variable>
  <variable name="charAlign">Evil</variable>
  <variable name="charClass">Cleric</variable>
  <variable name="charCurrentHP">50</variable>
  <variable name="charCurrentMV">123</variable>
  <variable name="charLevel">1</variable>
  <variable name="charMaxHP">45</variable>
  <variable name="charMaxMV">131</variable>
  <variable name="charname">Tickar</variable>
  <variable name="clanName">Coalition of Risky Endeavors</variable>
  <variable name="clanRank">Elder</variable>
  <variable name="clearskiescount">0</variable>
  <variable name="cloakofbraverycount">0</variable>
  <variable name="cloakofshadowscount">0</variable>
  <variable name="coinsInBank">3</variable>
  <variable name="coinsOnHand">0</variable>
  <variable name="combatLines">0</variable>
  <variable name="coneofcoldcount">0</variable>
  <variable name="conjureelementalcount">1</variable>
  <variable name="constantwindscount">0</variable>
  <variable name="container">chest</variable>
  <variable name="container1">knapsack</variable>
  <variable name="continuallightcount">1</variable>
  <variable name="corrodecount">3</variable>
  <variable name="createfoodcount">0</variable>
  <variable name="createwatercount">0</variable>
  <variable name="crusadecount">0</variable>
  <variable name="cultivatecount">8</variable>
  <variable name="cureblindnesscount">0</variable>
  <variable name="curecritcount">0</variable>
  <variable name="curecriticalcount">0</variable>
  <variable name="curelightcount">0</variable>
  <variable name="curemalefactioncount">1</variable>
  <variable name="curemassivecount">0</variable>
  <variable name="cureseriouscount">0</variable>
  <variable name="currentroom">The Reception</variable>
  <variable name="cursecount">0</variable>
  <variable name="darkenedsoulcount">0</variable>
  <variable name="darknesscount">0</variable>
  <variable name="detectevilcount">0</variable>
  <variable name="detectgoodcount">0</variable>
  <variable name="detectinvisibilitycount">0</variable>
  <variable name="detectmagiccount">0</variable>
  <variable name="detectpoisoncount">0</variable>
  <variable name="detectscrycount">0</variable>
  <variable name="devastationcount">0</variable>
  <variable name="dispelmagiccount">1</variable>
  <variable name="displacementcount">0</variable>
  <variable name="doautofill">1</variable>
  <variable name="doautosplit">1</variable>
  <variable name="doenvenom">1</variable>
  <variable name="doexam">1</variable>
  <variable name="dogrouptick">0</variable>
  <variable name="doskim">0</variable>
  <variable name="downcount">0</variable>
  <variable name="drink">all.waterskin</variable>
  <variable name="eastcount">0</variable>
  <variable name="elementalfistcount">0</variable>
  <variable name="endurancecount">0</variable>
  <variable name="enemylist">Leudo,Nimnogg,Pitta,Dad,Takyr,Arthas,Taivo,Jod,Hans,Brenar,Kogi,Adrianna,Fifty,Trippi,Thalas,Dad,Cephelo,Grogg,Ligt,Xeakmyhsh,Naowampalilo,Lieriel,Chiqiwiki,Brenar,Demaleon,Kwazii,Albarn,Knum,Cujo,Lira,Kanga,Lando,Viscera,Hawt,Ruun,Aubub,Sphonx,Paso,Abbie,Kanga,Habbi,Putz,Pantolones,Ogram,Turok,Elzzihs</variable>
  <variable name="engageaction">strike</variable>
  <variable name="engagedelay">4</variable>
  <variable name="enlargecount">0</variable>
  <variable name="entanglecount">0</variable>
  <variable name="epiphanycount">0</variable>
  <variable name="etherealarmorcount">0</variable>
  <variable name="exitdirs">D</variable>
  <variable name="fademode">0</variable>
  <variable name="faeriefirecount">0</variable>
  <variable name="fearcount">1</variable>
  <variable name="feastcount">1</variable>
  <variable name="fireballcount">0</variable>
  <variable name="fireshieldcount">0</variable>
  <variable name="firestormcount">0</variable>
  <variable name="flameshroudcount">0</variable>
  <variable name="fleshshieldcount">0</variable>
  <variable name="fllcount">0</variable>
  <variable name="flycount">2</variable>
  <variable name="fohcount">0</variable>
  <variable name="foldspacecount">0</variable>
  <variable name="food">bread</variable>
  <variable name="forceboltcount">0</variable>
  <variable name="forcemissilecount">0</variable>
  <variable name="fortifyselfcount">0</variable>
  <variable name="freeactioncount">0</variable>
  <variable name="friendly_list">Bloat,Dracula,Aymahn,Glynda</variable>
  <variable name="frycount">0</variable>
  <variable name="gatecount">3</variable>
  <variable name="ghostberriescount">1</variable>
  <variable name="ghostmasterritualcount">1</variable>
  <variable name="ghostskincount">0</variable>
  <variable name="globeofinvulnerabicount">0</variable>
  <variable name="granitehandcount">0</variable>
  <variable name="groupaction">give bread</variable>
  <variable name="gtmode">2</variable>
  <variable name="gtwecount">0</variable>
  <variable name="gublucount">0</variable>
  <variable name="gustofwindcount">2</variable>
  <variable name="harmcount">0</variable>
  <variable name="hastecount">1</variable>
  <variable name="healboostcount">0</variable>
  <variable name="healcount">0</variable>
  <variable name="healdelay">0.5</variable>
  <variable name="healingcloudcount">0</variable>
  <variable name="healingwavecount">0</variable>
  <variable name="healmode">3</variable>
  <variable name="healtype">5</variable>
  <variable name="heroismcount">0</variable>
  <variable name="highprayercount">0</variable>
  <variable name="holyarmorcount">0</variable>
  <variable name="holyarmscount">0</variable>
  <variable name="holyauracount">0</variable>
  <variable name="holyvisioncount">0</variable>
  <variable name="holywordcount">3</variable>
  <variable name="iceshieldcount">0</variable>
  <variable name="iceskincount">0</variable>
  <variable name="icestormcount">0</variable>
  <variable name="improvedinvisibilitcount">0</variable>
  <variable name="infravisioncount">0</variable>
  <variable name="insectswarmcount">1</variable>
  <variable name="invisibilitycount">2</variable>
  <variable name="isCheckMem">0</variable>
  <variable name="isCureOn">0</variable>
  <variable name="isHealbot">0</variable>
  <variable name="isMainHealer">0</variable>
  <variable name="isMemmed">1</variable>
  <variable name="isRandomDelay">0</variable>
  <variable name="isShamanbot">0</variable>
  <variable name="isaimneeded">1</variable>
  <variable name="isautoassault">0</variable>
  <variable name="isautoassist">1</variable>
  <variable name="isautobash">0</variable>
  <variable name="isautobrew">1</variable>
  <variable name="isautobuff">1</variable>
  <variable name="isautoburst">0</variable>
  <variable name="isautocarve">0</variable>
  <variable name="isautocommune">1</variable>
  <variable name="isautoflee">0</variable>
  <variable name="isautofrag">0</variable>
  <variable name="isautomeditate">1</variable>
  <variable name="isautomem">1</variable>
  <variable name="isautoparry">0</variable>
  <variable name="isautoreclaim">0</variable>
  <variable name="isautorescue">1</variable>
  <variable name="isautorest">1</variable>
  <variable name="isautoscribe">1</variable>
  <variable name="isautosharpen">0</variable>
  <variable name="isautoskill">0</variable>
  <variable name="isautostand">1</variable>
  <variable name="isautostone">0</variable>
  <variable name="isautotrain">1</variable>
  <variable name="isautoveil">0</variable>
  <variable name="isbandallgood">0</variable>
  <variable name="isbarbtrain">0</variable>
  <variable name="isbottrain">0</variable>
  <variable name="isclanned">0</variable>
  <variable name="iscoinloot">1</variable>
  <variable name="iscomploot">0</variable>
  <variable name="isdebug">0</variable>
  <variable name="isdobuffs">1</variable>
  <variable name="isdruidbot">0</variable>
  <variable name="isdrunk">0</variable>
  <variable name="isfighting">0</variable>
  <variable name="isfleesafe">1</variable>
  <variable name="isflygroup">1</variable>
  <variable name="isgactgood">0</variable>
  <variable name="isgheal">0</variable>
  <variable name="isghealgood">0</variable>
  <variable name="isguild">0</variable>
  <variable name="ishideon">0</variable>
  <variable name="islegendary">0</variable>
  <variable name="islookback">1</variable>
  <variable name="ismagebot">0</variable>
  <variable name="isnomagicfight">0</variable>
  <variable name="ispaladinbot">0</variable>
  <variable name="ispk">0</variable>
  <variable name="isrefgroup">0</variable>
  <variable name="isrefgroupgood">0</variable>
  <variable name="isscan">0</variable>
  <variable name="isscanreturn">0</variable>
  <variable name="issellcomps">0</variable>
  <variable name="issharpendelay">0</variable>
  <variable name="isshootneeded">1</variable>
  <variable name="isskybot">0</variable>
  <variable name="isstanding">1</variable>
  <variable name="istryingbandall">0</variable>
  <variable name="istryingfade">0</variable>
  <variable name="istryingflee">0</variable>
  <variable name="istryinggact">0</variable>
  <variable name="iswhobgood">0</variable>
  <variable name="jukecount">0</variable>
  <variable name="knowalignmentcount">1</variable>
  <variable name="last_burst_time">0</variable>
  <variable name="lastassaulttime">0</variable>
  <variable name="lastbashtime">1366140496.334</variable>
  <variable name="lastcasttime">1613146113.391</variable>
  <variable name="lastchancecount">2</variable>
  <variable name="lastdir">up</variable>
  <variable name="lastengageclock">0</variable>
  <variable name="lastlook">Everlast</variable>
  <variable name="lastmovetime">1497.088</variable>
  <variable name="lastmv">116</variable>
  <variable name="lastregen_Bloat">2367.738</variable>
  <variable name="lastregen_Glynda">1306.222</variable>
  <variable name="lastregen_Khonsu ">2154.676</variable>
  <variable name="lastregen_Pyrrha ">1256.89</variable>
  <variable name="lastrescuetime">1503.556</variable>
  <variable name="lastroom">The Inn of the Last Home</variable>
  <variable name="lastroundclock">1572147194.41</variable>
  <variable name="laststandtime">2626.935</variable>
  <variable name="laststone_Sharg ">440.374</variable>
  <variable name="lastveiltime">0</variable>
  <variable name="leader">Namahs</variable>
  <variable name="lightcount">0</variable>
  <variable name="lightningboltcount">0</variable>
  <variable name="lightningshieldcount">0</variable>
  <variable name="lightningstormcount">2</variable>
  <variable name="locateobjectcount">2</variable>
  <variable name="magicblastcount">0</variable>
  <variable name="magicboltcount">0</variable>
  <variable name="magicmissilecount">0</variable>
  <variable name="maintank">Tickar</variable>
  <variable name="malevolenttentaclescount">5</variable>
  <variable name="massflycount">0</variable>
  <variable name="massrefreshcount">0</variable>
  <variable name="memticks">3</variable>
  <variable name="mentalacuitycount">0</variable>
  <variable name="mentalhazecount">2</variable>
  <variable name="mindafirecount">0</variable>
  <variable name="minorglobeofinvulcount">0</variable>
  <variable name="monstrousmantlecount">0</variable>
  <variable name="msg_buffer"></variable>
  <variable name="my_proxy_password">power222</variable>
  <variable name="negativeplaneprotecount">0</variable>
  <variable name="nightmarecount">0</variable>
  <variable name="nightvisioncount">0</variable>
  <variable name="nobash_list">Sann</variable>
  <variable name="northcount">0</variable>
  <variable name="paincount">0</variable>
  <variable name="paladin_skill_list">rally,avenging faith,reckoning,strike</variable>
  <variable name="paralysiscount">8</variable>
  <variable name="passwithouttracecount">0</variable>
  <variable name="pencount">-1</variable>
  <variable name="pkautodisable">1</variable>
  <variable name="pklist"></variable>
  <variable name="plantwalkcount">1</variable>
  <variable name="poisoncount">1</variable>
  <variable name="porlwofecount">-1</variable>
  <variable name="powerwordstuncount">0</variable>
  <variable name="prayercount">1</variable>
  <variable name="preservationcount">0</variable>
  <variable name="prevailingwindscount">0</variable>
  <variable name="prim">sword</variable>
  <variable name="primalfurycount">0</variable>
  <variable name="protectionfromevilcount">0</variable>
  <variable name="protectionfromgoodcount">0</variable>
  <variable name="pzarungwazecount">-1</variable>
  <variable name="qfeateyooecount">0</variable>
  <variable name="qrzahzyooecount">0</variable>
  <variable name="randomDelayMax">4</variable>
  <variable name="randomDelayMin">1</variable>
  <variable name="rathingyrzghcount">-1</variable>
  <variable name="rattinofleshcount">-1</variable>
  <variable name="refreshcount">0</variable>
  <variable name="regen_start_time">25063.441</variable>
  <variable name="regen_threshhold">24.1</variable>
  <variable name="regeneratecount">0</variable>
  <variable name="relocatecount">2</variable>
  <variable name="removecursecount">0</variable>
  <variable name="removepoisoncount">1</variable>
  <variable name="reposecount">0</variable>
  <variable name="resistcount">4</variable>
  <variable name="restorationcount">0</variable>
  <variable name="restorestrengthcount">6</variable>
  <variable name="righteousindignatiocount">0</variable>
  <variable name="ritualvoyagecount">0</variable>
  <variable name="rotcount">0</variable>
  <variable name="sacredwardcount">0</variable>
  <variable name="sanctuarycount">0</variable>
  <variable name="satiatecount">2</variable>
  <variable name="scandir">down</variable>
  <variable name="scorchcount">0</variable>
  <variable name="senselifecount">0</variable>
  <variable name="shieldcount">0</variable>
  <variable name="shockingblastcount">0</variable>
  <variable name="shockinggraspcount">0</variable>
  <variable name="silencecount">0</variable>
  <variable name="skimamount">10</variable>
  <variable name="skimmed">0</variable>
  <variable name="soulleechcount">1</variable>
  <variable name="soulprotectioncount">0</variable>
  <variable name="southcount">0</variable>
  <variable name="spectralglowcount">0</variable>
  <variable name="spectralsight">0</variable>
  <variable name="spectralsightcount">0</variable>
  <variable name="spell_aid">1</variable>
  <variable name="spell_amplifyspirits">0</variable>
  <variable name="spell_ancestralblessing">0</variable>
  <variable name="spell_ancestralshroud">0</variable>
  <variable name="spell_ancestralspirit">0</variable>
  <variable name="spell_barkskin">0</variable>
  <variable name="spell_barrier">0</variable>
  <variable name="spell_bless">1</variable>
  <variable name="spell_blindness">0</variable>
  <variable name="spell_blur">0</variable>
  <variable name="spell_boilingblood">0</variable>
  <variable name="spell_boneshape">0</variable>
  <variable name="spell_burninghands">0</variable>
  <variable name="spell_calllightning">0</variable>
  <variable name="spell_calm">0</variable>
  <variable name="spell_causelight">1</variable>
  <variable name="spell_chainlightning">0</variable>
  <variable name="spell_charmmonster">0</variable>
  <variable name="spell_clearskies">0</variable>
  <variable name="spell_clot">0</variable>
  <variable name="spell_cloudkill">0</variable>
  <variable name="spell_coneofcold">0</variable>
  <variable name="spell_conjureelemental">0</variable>
  <variable name="spell_constantwinds">0</variable>
  <variable name="spell_createfood">1</variable>
  <variable name="spell_createwater">1</variable>
  <variable name="spell_createwine">0</variable>
  <variable name="spell_cultivate">0</variable>
  <variable name="spell_cureblindness">0</variable>
  <variable name="spell_curecritical">0</variable>
  <variable name="spell_curedisease">0</variable>
  <variable name="spell_curelight">1</variable>
  <variable name="spell_curemassive">0</variable>
  <variable name="spell_cureserious">0</variable>
  <variable name="spell_curse">0</variable>
  <variable name="spell_darkenedsoul">0</variable>
  <variable name="spell_daze">0</variable>
  <variable name="spell_delaydeath">0</variable>
  <variable name="spell_detectpoison">0</variable>
  <variable name="spell_devouringspirits">0</variable>
  <variable name="spell_earthquake">0</variable>
  <variable name="spell_elementalfist">0</variable>
  <variable name="spell_endurance">0</variable>
  <variable name="spell_enlarge">0</variable>
  <variable name="spell_entangle">0</variable>
  <variable name="spell_etherealarmor">0</variable>
  <variable name="spell_faeriefire">0</variable>
  <variable name="spell_faeriefog">0</variable>
  <variable name="spell_feast">0</variable>
  <variable name="spell_firestorm">0</variable>
  <variable name="spell_flameshroud">0</variable>
  <variable name="spell_fly">0</variable>
  <variable name="spell_forcemissile">0</variable>
  <variable name="spell_freeaction">0</variable>
  <variable name="spell_ghostberries">0</variable>
  <variable name="spell_ghostmasterritual">0</variable>
  <variable name="spell_ghostskin">0</variable>
  <variable name="spell_granitehand">0</variable>
  <variable name="spell_gustofwind">0</variable>
  <variable name="spell_harm">0</variable>
  <variable name="spell_heal">0</variable>
  <variable name="spell_healboost">0</variable>
  <variable name="spell_healingcloud">0</variable>
  <variable name="spell_healingwave">0</variable>
  <variable name="spell_iceshield">0</variable>
  <variable name="spell_iceskin">0</variable>
  <variable name="spell_icestorm">0</variable>
  <variable name="spell_infravision">0</variable>
  <variable name="spell_insectswarm">0</variable>
  <variable name="spell_knowalignment">1</variable>
  <variable name="spell_lastchance">0</variable>
  <variable name="spell_lightningstorm">0</variable>
  <variable name="spell_massfly">0</variable>
  <variable name="spell_massrefresh">0</variable>
  <variable name="spell_monstrousmantle">0</variable>
  <variable name="spell_nightmare">0</variable>
  <variable name="spell_paralysis">0</variable>
  <variable name="spell_passwithouttrace">0</variable>
  <variable name="spell_plantwalk">0</variable>
  <variable name="spell_powerwordstun">0</variable>
  <variable name="spell_prevailingwinds">0</variable>
  <variable name="spell_primalfury">0</variable>
  <variable name="spell_refresh">0</variable>
  <variable name="spell_regenerate">0</variable>
  <variable name="spell_removecurse">0</variable>
  <variable name="spell_removeparalysis">0</variable>
  <variable name="spell_removepoison">0</variable>
  <variable name="spell_rend">0</variable>
  <variable name="spell_resist">0</variable>
  <variable name="spell_restorestrength">1</variable>
  <variable name="spell_ritualvoyage">0</variable>
  <variable name="spell_rot">0</variable>
  <variable name="spell_sanctifycorpse">0</variable>
  <variable name="spell_sanctuary">0</variable>
  <variable name="spell_sapstrength">0</variable>
  <variable name="spell_satiate">0</variable>
  <variable name="spell_senselife">0</variable>
  <variable name="spell_shockingblast">0</variable>
  <variable name="spell_silence">0</variable>
  <variable name="spell_sleep">0</variable>
  <variable name="spell_slowpoison">0</variable>
  <variable name="spell_soulleech">0</variable>
  <variable name="spell_spectralglow">0</variable>
  <variable name="spell_spectralsight">0</variable>
  <variable name="spell_spiritualguidance">0</variable>
  <variable name="spell_spiritualhammer">1</variable>
  <variable name="spell_steelskin">0</variable>
  <variable name="spell_stinkingcloud">0</variable>
  <variable name="spell_stoneskin">0</variable>
  <variable name="spell_stormcall">0</variable>
  <variable name="spell_stratification">0</variable>
  <variable name="spell_sublimeresistance">0</variable>
  <variable name="spell_summon">0</variable>
  <variable name="spell_summonfaerie">0</variable>
  <variable name="spell_sustenance">0</variable>
  <variable name="spell_temporalpath">0</variable>
  <variable name="spell_tenaciousheart">0</variable>
  <variable name="spell_thornspray">0</variable>
  <variable name="spell_thunderbolt">0</variable>
  <variable name="spell_tornado">0</variable>
  <variable name="spell_veilofice">0</variable>
  <variable name="spell_vilespirits">0</variable>
  <variable name="spell_waterbreath">0</variable>
  <variable name="spell_wizardeye">0</variable>
  <variable name="spell_wordofrecall">0</variable>
  <variable name="spheresofabsorptiocount">0</variable>
  <variable name="spirit_in_room_count">0</variable>
  <variable name="spiritualguidancecount">0</variable>
  <variable name="spiritualhammercount">0</variable>
  <variable name="splitamount">0</variable>
  <variable name="spzclsicount">-1</variable>
  <variable name="stabtarget">dog</variable>
  <variable name="steelskincount">0</variable>
  <variable name="stinkingcloudcount">0</variable>
  <variable name="stone_threshhold">8</variable>
  <variable name="stonemain">0</variable>
  <variable name="stonemode">1</variable>
  <variable name="stoneskincount">0</variable>
  <variable name="stormcallcount">0</variable>
  <variable name="strengthcount">0</variable>
  <variable name="strengthofonecount">1</variable>
  <variable name="sublimeresistancecount">1</variable>
  <variable name="summoncount">0</variable>
  <variable name="summonelixircount">2</variable>
  <variable name="summonfaeriecount">1</variable>
  <variable name="summoningcirclecount">2</variable>
  <variable name="summonmountcount">1</variable>
  <variable name="sunboltcount">1</variable>
  <variable name="sunraycount">1</variable>
  <variable name="sustenancecount">0</variable>
  <variable name="target">asdf</variable>
  <variable name="target1">baarba</variable>
  <variable name="temporalpathcount">4</variable>
  <variable name="tenaciousheartcount">0</variable>
  <variable name="tenebrousorbcount">0</variable>
  <variable name="thornspraycount">0</variable>
  <variable name="thunderboltcount">0</variable>
  <variable name="tornadocount">11</variable>
  <variable name="tryingheal">0</variable>
  <variable name="tryingstone">0</variable>
  <variable name="unholyauracount">0</variable>
  <variable name="unholymightcount">0</variable>
  <variable name="upcount">0</variable>
  <variable name="veiloficecount">0</variable>
  <variable name="vitriolicshieldcount">0</variable>
  <variable name="warrior_skill_list">punch,kick</variable>
  <variable name="watchfuleyecount">0</variable>
  <variable name="water">all.waterskin</variable>
  <variable name="waterbreathcount">0</variable>
  <variable name="weap1">club</variable>
  <variable name="weap2">dagger</variable>
  <variable name="weapons_list">rapier,longsword,shortsword,sword,cudgel,mace,blade,staff,whip,banner,dagger,spear,lance,hammer,bardiche,claw,rod,club,halberd,knife,tooth,fang,fan,pick,flail,voulge,wand,trident,scourge,javelin,axe,longbow,hatchet,reaver,shard,goad,sickle,trident</variable>
  <variable name="westcount">0</variable>
  <variable name="whiterunecount">0</variable>
  <variable name="wordofrecallcount">0</variable>
  <variable name="wordpot">yellow.potion</variable>
  <variable name="youthcount">1</variable>
  <variable name="zombifycount">0</variable>
</variables>

<!-- colours -->

<colours
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >

<ansi>

 <normal>
   <colour seq="1" rgb="black" />
   <colour seq="2" rgb="maroon" />
   <colour seq="3" rgb="green" />
   <colour seq="4" rgb="olive" />
   <colour seq="5" rgb="navy" />
   <colour seq="6" rgb="purple" />
   <colour seq="7" rgb="teal" />
   <colour seq="8" rgb="silver" />

 </normal>

 <bold>
   <colour seq="1" rgb="gray" />
   <colour seq="2" rgb="red" />
   <colour seq="3" rgb="lime" />
   <colour seq="4" rgb="yellow" />
   <colour seq="5" rgb="blue" />
   <colour seq="6" rgb="magenta" />
   <colour seq="7" rgb="cyan" />
   <colour seq="8" rgb="white" />

 </bold>

</ansi>

<custom>
  <colour seq="1" name="Custom1" text="#FF8080" back="black" />
  <colour seq="2" name="Custom2" text="#FFFF80" back="black" />
  <colour seq="3" name="Custom3" text="#80FF80" back="black" />
  <colour seq="4" name="Custom4" text="#80FFFF" back="black" />
  <colour seq="5" name="Custom5" text="#0080FF" back="black" />
  <colour seq="6" name="Custom6" text="#FF80C0" back="black" />
  <colour seq="7" name="Custom7" text="red" back="black" />
  <colour seq="8" name="Custom8" text="#0080C0" back="black" />
  <colour seq="9" name="Custom9" text="magenta" back="black" />
  <colour seq="10" name="Custom10" text="#804040" back="black" />
  <colour seq="11" name="Custom11" text="#FF8040" back="black" />
  <colour seq="12" name="Custom12" text="teal" back="black" />
  <colour seq="13" name="Custom13" text="#004080" back="black" />
  <colour seq="14" name="Custom14" text="#FF0080" back="black" />
  <colour seq="15" name="Custom15" text="green" back="black" />
  <colour seq="16" name="Custom16" text="blue" back="black" />

</custom>
</colours>

<!-- keypad -->

<keypad
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >

  <key name="0" >
  <send>look</send>
  </key>

  <key name="1" >
  <send>sneak</send>
  </key>

  <key name="2" >
  <send>goSouth</send>
  </key>

  <key name="3" >
  <send>goDown</send>
  </key>

  <key name="4" >
  <send>goWest</send>
  </key>

  <key name="5" >
  <send>look</send>
  </key>

  <key name="6" >
  <send>goEast</send>
  </key>

  <key name="7" >
  <send>flee</send>
  </key>

  <key name="8" >
  <send>goNorth</send>
  </key>

  <key name="9" >
  <send>goUp</send>
  </key>

  <key name="." >
  <send>hide</send>
  </key>

  <key name="/" >
  <send>inventory</send>
  </key>

  <key name="*" >
  <send>score</send>
  </key>

  <key name="-" >
  <send>up</send>
  </key>

  <key name="+" >
  <send>down</send>
  </key>

  <key name="Ctrl+0" >
  </key>

  <key name="Ctrl+1" >
  </key>

  <key name="Ctrl+2" >
  </key>

  <key name="Ctrl+3" >
  </key>

  <key name="Ctrl+4" >
  </key>

  <key name="Ctrl+5" >
  </key>

  <key name="Ctrl+6" >
  </key>

  <key name="Ctrl+7" >
  </key>

  <key name="Ctrl+8" >
  </key>

  <key name="Ctrl+9" >
  </key>

  <key name="Ctrl+." >
  </key>

  <key name="Ctrl+/" >
  </key>

  <key name="Ctrl+*" >
  </key>

  <key name="Ctrl+-" >
  </key>

  <key name="Ctrl++" >
  </key>
</keypad>

<!-- printing -->

<printing
   muclient_version="5.06"
   world_file_version="15"
   date_saved="2021-02-12 10:11:52"
  >

<ansi>

 <normal>

 </normal>

 <bold>
   <style seq="1" bold="y" />
   <style seq="2" bold="y" />
   <style seq="3" bold="y" />
   <style seq="4" bold="y" />
   <style seq="5" bold="y" />
   <style seq="6" bold="y" />
   <style seq="7" bold="y" />
   <style seq="8" bold="y" />

 </bold>

</ansi>
</printing>

<!-- plugins -->
<include name="Chat_Capture_Miniwindow.xml" plugin="y" />
</muclient>
